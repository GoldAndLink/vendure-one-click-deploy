{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getGraphQlInputName = exports.generateAllCombinations = exports.summate = exports.isClassInstance = exports.isObject = exports.assertNever = exports.notNullOrUndefined = void 0;\n/**\n * Predicate with type guard, used to filter out null or undefined values\n * in a filter operation.\n */\nfunction notNullOrUndefined(val) {\n  return val !== undefined && val !== null;\n}\nexports.notNullOrUndefined = notNullOrUndefined;\n/**\n * Used in exhaustiveness checks to assert a codepath should never be reached.\n */\nfunction assertNever(value) {\n  throw new Error(`Expected never, got ${typeof value} (${JSON.stringify(value)})`);\n}\nexports.assertNever = assertNever;\n/**\n * Simple object check.\n * From https://stackoverflow.com/a/34749873/772859\n */\nfunction isObject(item) {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\nexports.isObject = isObject;\nfunction isClassInstance(item) {\n  // Even if item is an object, it might not have a constructor as in the\n  // case when it is a null-prototype object, i.e. created using `Object.create(null)`.\n  return isObject(item) && item.constructor && item.constructor.name !== 'Object';\n}\nexports.isClassInstance = isClassInstance;\n/**\n * Adds up all the values of a given numeric property of a list of objects.\n */\nfunction summate(items, prop) {\n  return (items || []).reduce((sum, i) => sum + i[prop], 0);\n}\nexports.summate = summate;\n/**\n * Given an array of option arrays `[['red, 'blue'], ['small', 'large']]`, this method returns a new array\n * containing all the combinations of those options:\n *\n * @example\n * ```\n * generateAllCombinations([['red, 'blue'], ['small', 'large']]);\n * // =>\n * // [\n * //  ['red', 'small'],\n * //  ['red', 'large'],\n * //  ['blue', 'small'],\n * //  ['blue', 'large'],\n * // ]\n */\nfunction generateAllCombinations(optionGroups, combination = [], k = 0, output = []) {\n  if (k === 0) {\n    optionGroups = optionGroups.filter(g => 0 < g.length);\n  }\n  if (k === optionGroups.length) {\n    output.push(combination);\n    return [];\n  } else {\n    /* eslint-disable @typescript-eslint/prefer-for-of */\n    for (let i = 0; i < optionGroups[k].length; i++) {\n      generateAllCombinations(optionGroups, combination.concat(optionGroups[k][i]), k + 1, output);\n    }\n    /* eslint-enable @typescript-eslint/prefer-for-of */\n    return output;\n  }\n}\nexports.generateAllCombinations = generateAllCombinations;\n/**\n * @description\n * Returns the input field name of a custom field, taking into account that \"relation\" type custom\n * field inputs are suffixed with \"Id\" or \"Ids\".\n */\nfunction getGraphQlInputName(config) {\n  if (config.type === 'relation') {\n    return config.list === true ? `${config.name}Ids` : `${config.name}Id`;\n  } else {\n    return config.name;\n  }\n}\nexports.getGraphQlInputName = getGraphQlInputName;","map":{"version":3,"names":["Object","defineProperty","exports","value","getGraphQlInputName","generateAllCombinations","summate","isClassInstance","isObject","assertNever","notNullOrUndefined","val","undefined","Error","JSON","stringify","item","Array","isArray","constructor","name","items","prop","reduce","sum","i","optionGroups","combination","k","output","filter","g","length","push","concat","config","type","list"],"sources":["/Users/peluche/Documents/NoursStuffs/CerisePeyi/dev/2k24/last/vendure-one-click-deploy/node_modules/@vendure/common/lib/shared-utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getGraphQlInputName = exports.generateAllCombinations = exports.summate = exports.isClassInstance = exports.isObject = exports.assertNever = exports.notNullOrUndefined = void 0;\n/**\n * Predicate with type guard, used to filter out null or undefined values\n * in a filter operation.\n */\nfunction notNullOrUndefined(val) {\n    return val !== undefined && val !== null;\n}\nexports.notNullOrUndefined = notNullOrUndefined;\n/**\n * Used in exhaustiveness checks to assert a codepath should never be reached.\n */\nfunction assertNever(value) {\n    throw new Error(`Expected never, got ${typeof value} (${JSON.stringify(value)})`);\n}\nexports.assertNever = assertNever;\n/**\n * Simple object check.\n * From https://stackoverflow.com/a/34749873/772859\n */\nfunction isObject(item) {\n    return item && typeof item === 'object' && !Array.isArray(item);\n}\nexports.isObject = isObject;\nfunction isClassInstance(item) {\n    // Even if item is an object, it might not have a constructor as in the\n    // case when it is a null-prototype object, i.e. created using `Object.create(null)`.\n    return isObject(item) && item.constructor && item.constructor.name !== 'Object';\n}\nexports.isClassInstance = isClassInstance;\n/**\n * Adds up all the values of a given numeric property of a list of objects.\n */\nfunction summate(items, prop) {\n    return (items || []).reduce((sum, i) => sum + i[prop], 0);\n}\nexports.summate = summate;\n/**\n * Given an array of option arrays `[['red, 'blue'], ['small', 'large']]`, this method returns a new array\n * containing all the combinations of those options:\n *\n * @example\n * ```\n * generateAllCombinations([['red, 'blue'], ['small', 'large']]);\n * // =>\n * // [\n * //  ['red', 'small'],\n * //  ['red', 'large'],\n * //  ['blue', 'small'],\n * //  ['blue', 'large'],\n * // ]\n */\nfunction generateAllCombinations(optionGroups, combination = [], k = 0, output = []) {\n    if (k === 0) {\n        optionGroups = optionGroups.filter(g => 0 < g.length);\n    }\n    if (k === optionGroups.length) {\n        output.push(combination);\n        return [];\n    }\n    else {\n        /* eslint-disable @typescript-eslint/prefer-for-of */\n        for (let i = 0; i < optionGroups[k].length; i++) {\n            generateAllCombinations(optionGroups, combination.concat(optionGroups[k][i]), k + 1, output);\n        }\n        /* eslint-enable @typescript-eslint/prefer-for-of */\n        return output;\n    }\n}\nexports.generateAllCombinations = generateAllCombinations;\n/**\n * @description\n * Returns the input field name of a custom field, taking into account that \"relation\" type custom\n * field inputs are suffixed with \"Id\" or \"Ids\".\n */\nfunction getGraphQlInputName(config) {\n    if (config.type === 'relation') {\n        return config.list === true ? `${config.name}Ids` : `${config.name}Id`;\n    }\n    else {\n        return config.name;\n    }\n}\nexports.getGraphQlInputName = getGraphQlInputName;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}