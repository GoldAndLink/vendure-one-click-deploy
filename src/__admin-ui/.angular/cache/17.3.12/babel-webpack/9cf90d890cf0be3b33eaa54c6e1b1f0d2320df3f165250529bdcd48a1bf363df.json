{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, Input, EventEmitter, Output, ViewContainerRef, ViewChild, NgModule } from '@angular/core';\nimport { BehaviorSubject, Subject, combineLatest, forkJoin, from, EMPTY, of } from 'rxjs';\nimport { map, startWith, distinctUntilChanged, debounceTime, tap, takeUntil, switchMap, filter, take, shareReplay, merge, mergeMap, concatMap, mapTo } from 'rxjs/operators';\nimport * as i1 from '@vendure/admin-ui/core';\nimport { SelectionManager, HistoryEntryType, CUSTOMER_FRAGMENT, TypedBaseDetailComponent, getCustomFieldsDefaults, SortOrder, EditNoteDialogComponent, CustomerDetailQueryDocument, createBulkDeleteAction, Permission, CUSTOMER_GROUP_FRAGMENT, TypedBaseListComponent, GetCustomerGroupListDocument, ModalService, DataService, NotificationService, CustomerListQueryDocument, LogicalOperator, PageComponent, detailBreadcrumb, detailComponentWithResolver, GetCustomerGroupDetailDocument, SharedModule, PageService } from '@vendure/admin-ui/core';\nimport * as i1$1 from '@angular/forms';\nimport { FormControl, Validators, UntypedFormArray } from '@angular/forms';\nimport * as i2 from '@angular/router';\nimport { ROUTES, RouterModule } from '@angular/router';\nimport * as i3 from '@clr/angular';\nimport * as i3$1 from '@angular/common';\nimport * as i4 from '@ngx-translate/core';\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\nimport { gql } from 'apollo-angular';\nimport * as i3$2 from '@ng-select/ng-select';\nfunction CustomerStatusLabelComponent_vdr_chip_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"clr-icon\", 1);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, \"customer.verified\"), \" \");\n  }\n}\nfunction CustomerStatusLabelComponent_vdr_chip_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"clr-icon\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, \"customer.registered\"), \" \");\n  }\n}\nfunction CustomerStatusLabelComponent_vdr_chip_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"vdr-chip\");\n    i0.ɵɵtemplate(1, CustomerStatusLabelComponent_vdr_chip_0_ng_container_1_Template, 4, 3, \"ng-container\", 0)(2, CustomerStatusLabelComponent_vdr_chip_0_ng_container_2_Template, 4, 3, \"ng-container\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.customer.user == null ? null : ctx_r0.customer.user.verified);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r0.customer.user == null ? null : ctx_r0.customer.user.verified));\n  }\n}\nfunction CustomerStatusLabelComponent_vdr_chip_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"vdr-chip\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"customer.guest\"));\n  }\n}\nconst _c0 = a0 => [\"/customer/customers\", a0];\nfunction CustomerGroupMemberListComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const customerGroup_r1 = ctx.item;\n    i0.ɵɵtextInterpolate1(\" \", customerGroup_r1.id, \" \");\n  }\n}\nfunction CustomerGroupMemberListComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"localeDate\");\n  }\n  if (rf & 2) {\n    const customer_r2 = ctx.item;\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(1, 1, customer_r2.createdAt, \"short\"), \" \");\n  }\n}\nfunction CustomerGroupMemberListComponent_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"localeDate\");\n  }\n  if (rf & 2) {\n    const customer_r3 = ctx.item;\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(1, 1, customer_r3.createdAt, \"short\"), \" \");\n  }\n}\nfunction CustomerGroupMemberListComponent_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 9)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"clr-icon\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const customer_r4 = ctx.item;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, customer_r4.id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\" \", customer_r4.title, \" \", customer_r4.firstName, \" \", customer_r4.lastName, \" \");\n  }\n}\nfunction CustomerGroupMemberListComponent_ng_template_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"vdr-customer-status-label\", 11);\n  }\n  if (rf & 2) {\n    const customer_r5 = ctx.item;\n    i0.ɵɵproperty(\"customer\", customer_r5);\n  }\n}\nfunction CustomerGroupMemberListComponent_ng_template_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const customer_r6 = ctx.item;\n    i0.ɵɵtextInterpolate1(\" \", customer_r6.emailAddress, \" \");\n  }\n}\nconst _c1 = a0 => ({\n  groupName: a0\n});\nconst _c2 = a0 => ({\n  count: a0\n});\nfunction AddCustomerToGroupDialogComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(1, 1, \"customer.add-customers-to-group-with-name\", i0.ɵɵpureFunction1(4, _c1, ctx_r0.group.name)), \"\\n\");\n  }\n}\nfunction AddCustomerToGroupDialogComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function AddCustomerToGroupDialogComponent_ng_template_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.cancel());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function AddCustomerToGroupDialogComponent_ng_template_4_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.add());\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 3, \"common.cancel\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.selectedCustomerIds.length);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(5, 5, \"customer.add-customers-to-group-with-count\", i0.ɵɵpureFunction1(8, _c2, ctx_r0.selectedCustomerIds.length)), \" \");\n  }\n}\nfunction AddressDetailDialogComponent_ng_template_0_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const streetLine1_r1 = ctx.ngIf;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"\", streetLine1_r1, \",\");\n  }\n}\nfunction AddressDetailDialogComponent_ng_template_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const countryCode_r2 = ctx.ngIf;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", countryCode_r2, \"\");\n  }\n}\nfunction AddressDetailDialogComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AddressDetailDialogComponent_ng_template_0_span_0_Template, 2, 1, \"span\", 3)(1, AddressDetailDialogComponent_ng_template_0_span_1_Template, 2, 1, \"span\", 3);\n  }\n  if (rf & 2) {\n    let tmp_1_0;\n    let tmp_2_0;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r2.addressForm.get(\"streetLine1\")) == null ? null : tmp_1_0.value);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r2.addressForm.get(\"countryCode\")) == null ? null : tmp_2_0.value);\n  }\n}\nfunction AddressDetailDialogComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function AddressDetailDialogComponent_ng_template_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.cancel());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function AddressDetailDialogComponent_ng_template_2_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.save());\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 3, \"common.cancel\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.addressForm.valid || !ctx_r2.addressForm.touched);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(5, 5, \"common.update\"), \" \");\n  }\n}\nfunction AddressCardComponent_div_0_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const address_r1 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"\", address_r1.streetLine1, \",\");\n  }\n}\nfunction AddressCardComponent_div_0_vdr_chip_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"vdr-chip\", 15);\n    i0.ɵɵelement(1, \"clr-icon\", 16);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, \"customer.default-shipping-address\"), \" \");\n  }\n}\nfunction AddressCardComponent_div_0_vdr_chip_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"vdr-chip\", 15);\n    i0.ɵɵelement(1, \"clr-icon\", 17);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, \"customer.default-billing-address\"), \" \");\n  }\n}\nfunction AddressCardComponent_div_0_ng_container_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function AddressCardComponent_div_0_ng_container_14_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.editAddress());\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"vdr-dropdown\")(5, \"button\", 19);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelement(8, \"clr-icon\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"vdr-dropdown-menu\")(10, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function AddressCardComponent_div_0_ng_container_14_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.setAsDefaultShippingAddress());\n    });\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function AddressCardComponent_div_0_ng_container_14_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.setAsDefaultBillingAddress());\n    });\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"div\", 22);\n    i0.ɵɵelementStart(17, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function AddressCardComponent_div_0_ng_container_14_Template_button_click_17_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.delete());\n    });\n    i0.ɵɵelement(18, \"clr-icon\", 24);\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 7, \"common.edit\"), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(7, 9, \"common.more\"), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.isDefaultShipping);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(12, 11, \"customer.set-as-default-shipping-address\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.isDefaultBilling);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(15, 13, \"customer.set-as-default-billing-address\"), \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(20, 15, \"common.delete\"), \" \");\n  }\n}\nfunction AddressCardComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3);\n    i0.ɵɵtemplate(3, AddressCardComponent_div_0_span_3_Template, 2, 1, \"span\", 4);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 5);\n    i0.ɵɵtemplate(6, AddressCardComponent_div_0_vdr_chip_6_Template, 4, 3, \"vdr-chip\", 6)(7, AddressCardComponent_div_0_vdr_chip_7_Template, 4, 3, \"vdr-chip\", 6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 7)(9, \"div\", 8);\n    i0.ɵɵelement(10, \"vdr-formatted-address\", 9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 10)(12, \"div\", 11);\n    i0.ɵɵelement(13, \"vdr-entity-info\", 12);\n    i0.ɵɵtemplate(14, AddressCardComponent_div_0_ng_container_14_Template, 21, 17, \"ng-container\", 13);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const address_r1 = ctx.ngIf;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", address_r1.streetLine1);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", address_r1.countryCode, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isDefaultShipping);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isDefaultBilling);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"address\", address_r1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"entity\", address_r1);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.editable);\n  }\n}\nfunction SelectCustomerGroupDialogComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(1, 1, \"customer.add-customer-to-group\"), \"\\n\");\n  }\n}\nfunction SelectCustomerGroupDialogComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵlistener(\"click\", function SelectCustomerGroupDialogComponent_ng_template_3_Template_span_click_0_listener() {\n      const ctx_r1 = i0.ɵɵrestoreView(_r1);\n      const item_r3 = ctx_r1.item;\n      const clear_r4 = ctx_r1.clear;\n      return i0.ɵɵresetView(clear_r4(item_r3));\n    });\n    i0.ɵɵtext(1, \" \\xD7 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"vdr-chip\", 6);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.item;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"colorFrom\", item_r3.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(item_r3.name);\n  }\n}\nfunction SelectCustomerGroupDialogComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"vdr-chip\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.item;\n    i0.ɵɵproperty(\"colorFrom\", item_r5.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(item_r5.name);\n  }\n}\nfunction SelectCustomerGroupDialogComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function SelectCustomerGroupDialogComponent_ng_template_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.cancel());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function SelectCustomerGroupDialogComponent_ng_template_5_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.add());\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 3, \"common.cancel\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r6.selectedGroupIds.length);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(5, 5, \"customer.add-customer-to-groups-with-count\", i0.ɵɵpureFunction1(8, _c2, ctx_r6.selectedGroupIds.length)), \" \");\n  }\n}\nconst _c3 = [\"portal\"];\nconst _c4 = a0 => ({\n  strategy: a0\n});\nfunction CustomerHistoryComponent_vdr_timeline_entry_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"vdr-timeline-entry\", 6)(1, \"div\", 7)(2, \"textarea\", 8);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CustomerHistoryComponent_vdr_timeline_entry_1_Template_textarea_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.note, $event) || (ctx_r1.note = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function CustomerHistoryComponent_vdr_timeline_entry_1_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.addNoteToCustomer());\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"featured\", true)(\"isFirst\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.note);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.note);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(5, 5, \"order.add-note\"), \" \");\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_vdr_customer_history_entry_host_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"vdr-customer-history-entry-host\", 11);\n    i0.ɵɵlistener(\"expandClick\", function CustomerHistoryComponent_ng_container_2_vdr_customer_history_entry_host_1_Template_vdr_customer_history_entry_host_expandClick_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.expanded = !ctx_r1.expanded);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entry_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"customer\", ctx_r1.customer)(\"entry\", entry_r4)(\"expanded\", ctx_r1.expanded);\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_2_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"customer.history-using-native-auth-strategy\"), \" \");\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_2_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    const entry_r4 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(1, 1, \"customer.history-using-external-auth-strategy\", i0.ɵɵpureFunction1(4, _c4, entry_r4.data.strategy)), \" \");\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 16);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_2_ng_container_4_Template, 3, 3, \"ng-container\", 17)(5, CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_2_ng_template_5_Template, 2, 6, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const namedStrategy_r5 = i0.ɵɵreference(6);\n    const entry_r4 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 3, \"customer.history-customer-registered\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", entry_r4.data.strategy === \"native\")(\"ngIfElse\", namedStrategy_r5);\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_3_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"customer.history-using-native-auth-strategy\"), \" \");\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_3_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    const entry_r4 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(1, 1, \"customer.history-using-external-auth-strategy\", i0.ɵɵpureFunction1(4, _c4, entry_r4.data.strategy)), \" \");\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 16);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_3_ng_container_4_Template, 3, 3, \"ng-container\", 17)(5, CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_3_ng_template_5_Template, 2, 6, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const namedStrategy_r6 = i0.ɵɵreference(6);\n    const entry_r4 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 3, \"customer.history-customer-verified\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", entry_r4.data.strategy === \"native\")(\"ngIfElse\", namedStrategy_r6);\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 18);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementStart(4, \"vdr-history-entry-detail\");\n    i0.ɵɵelement(5, \"vdr-object-tree\", 19);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const entry_r4 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 2, \"customer.history-customer-detail-updated\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", entry_r4.data.input);\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const entry_r4 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 1, \"customer.history-customer-added-to-group\", i0.ɵɵpureFunction1(4, _c1, entry_r4.data.groupName)), \" \");\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const entry_r4 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 1, \"customer.history-customer-removed-from-group\", i0.ɵɵpureFunction1(4, _c1, entry_r4.data.groupName)), \" \");\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementStart(3, \"div\", 18)(4, \"div\", 20);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const entry_r4 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, \"customer.history-customer-address-created\"), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(entry_r4.data.address);\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementStart(3, \"div\", 18)(4, \"div\", 20);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"vdr-history-entry-detail\");\n    i0.ɵɵelement(7, \"vdr-object-tree\", 19);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const entry_r4 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 3, \"customer.history-customer-address-updated\"), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(entry_r4.data.address);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", entry_r4.data.input);\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementStart(3, \"div\", 20);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const entry_r4 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, \"customer.history-customer-address-deleted\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(entry_r4.data.address);\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"customer.history-customer-password-updated\"), \" \");\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"customer.history-customer-password-reset-requested\"), \" \");\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"customer.history-customer-password-reset-verified\"), \" \");\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 18);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementStart(4, \"vdr-history-entry-detail\")(5, \"vdr-labeled-data\", 21);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"vdr-labeled-data\", 21);\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const entry_r4 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 5, \"customer.history-customer-email-update-requested\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"label\", i0.ɵɵpipeBind1(6, 7, \"customer.old-email-address\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", entry_r4.data.oldEmailAddress, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"label\", i0.ɵɵpipeBind1(9, 9, \"customer.new-email-address\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", entry_r4.data.newEmailAddress, \" \");\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 18);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementStart(4, \"vdr-history-entry-detail\")(5, \"vdr-labeled-data\", 21);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"vdr-labeled-data\", 21);\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const entry_r4 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 5, \"customer.history-customer-email-update-verified\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"label\", i0.ɵɵpipeBind1(6, 7, \"customer.old-email-address\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", entry_r4.data.oldEmailAddress, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"label\", i0.ɵɵpipeBind1(9, 9, \"customer.new-email-address\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", entry_r4.data.newEmailAddress, \" \");\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 18)(2, \"div\", 22);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"div\", 23);\n    i0.ɵɵelementStart(5, \"vdr-dropdown\")(6, \"button\", 24);\n    i0.ɵɵelement(7, \"clr-icon\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"vdr-dropdown-menu\", 26)(9, \"button\", 27);\n    i0.ɵɵpipe(10, \"hasPermission\");\n    i0.ɵɵlistener(\"click\", function CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_15_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const entry_r4 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateNote.emit(entry_r4));\n    });\n    i0.ɵɵelement(11, \"clr-icon\", 28);\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"div\", 29);\n    i0.ɵɵelementStart(15, \"button\", 27);\n    i0.ɵɵpipe(16, \"hasPermission\");\n    i0.ɵɵlistener(\"click\", function CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_15_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const entry_r4 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.deleteNote.emit(entry_r4));\n    });\n    i0.ɵɵelement(17, \"clr-icon\", 30);\n    i0.ɵɵtext(18);\n    i0.ɵɵpipe(19, \"translate\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const entry_r4 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", entry_r4.data.note, \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"disabled\", !i0.ɵɵpipeBind1(10, 5, \"UpdateCustomer\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(13, 7, \"common.edit\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !i0.ɵɵpipeBind1(16, 9, \"UpdateCustomer\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(19, 11, \"common.delete\"), \" \");\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_16_vdr_history_entry_detail_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"vdr-history-entry-detail\");\n    i0.ɵɵelement(1, \"vdr-object-tree\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entry_r4 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"value\", entry_r4.data);\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 16);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_16_vdr_history_entry_detail_4_Template, 2, 1, \"vdr-history-entry-detail\", 31);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const entry_r4 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 2, entry_r4.type), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", entry_r4.data);\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"vdr-timeline-entry\", 12);\n    i0.ɵɵelementContainerStart(1, 13);\n    i0.ɵɵtemplate(2, CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_2_Template, 7, 5, \"ng-container\", 14)(3, CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_3_Template, 7, 5, \"ng-container\", 14)(4, CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_4_Template, 6, 4, \"ng-container\", 14)(5, CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_5_Template, 3, 6, \"ng-container\", 14)(6, CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_6_Template, 3, 6, \"ng-container\", 14)(7, CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_7_Template, 6, 4, \"ng-container\", 14)(8, CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_8_Template, 8, 5, \"ng-container\", 14)(9, CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_9_Template, 5, 4, \"ng-container\", 14)(10, CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_10_Template, 3, 3, \"ng-container\", 14)(11, CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_11_Template, 3, 3, \"ng-container\", 14)(12, CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_12_Template, 3, 3, \"ng-container\", 14)(13, CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_13_Template, 11, 11, \"ng-container\", 14)(14, CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_14_Template, 11, 11, \"ng-container\", 14)(15, CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_15_Template, 20, 13, \"ng-container\", 14)(16, CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_16_Template, 5, 4, \"ng-container\", 15);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entry_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"displayType\", ctx_r1.getDisplayType(entry_r4))(\"iconShape\", ctx_r1.getTimelineIcon(entry_r4))(\"createdAt\", entry_r4.createdAt)(\"name\", ctx_r1.getName(entry_r4))(\"featured\", ctx_r1.isFeatured(entry_r4));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitch\", entry_r4.type);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r1.type.CUSTOMER_REGISTERED);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r1.type.CUSTOMER_VERIFIED);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r1.type.CUSTOMER_DETAIL_UPDATED);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r1.type.CUSTOMER_ADDED_TO_GROUP);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r1.type.CUSTOMER_REMOVED_FROM_GROUP);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r1.type.CUSTOMER_ADDRESS_CREATED);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r1.type.CUSTOMER_ADDRESS_UPDATED);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r1.type.CUSTOMER_ADDRESS_DELETED);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r1.type.CUSTOMER_PASSWORD_UPDATED);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r1.type.CUSTOMER_PASSWORD_RESET_REQUESTED);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r1.type.CUSTOMER_PASSWORD_RESET_VERIFIED);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r1.type.CUSTOMER_EMAIL_UPDATE_REQUESTED);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r1.type.CUSTOMER_EMAIL_UPDATE_VERIFIED);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r1.type.CUSTOMER_NOTE);\n  }\n}\nfunction CustomerHistoryComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CustomerHistoryComponent_ng_container_2_vdr_customer_history_entry_host_1_Template, 1, 3, \"vdr-customer-history-entry-host\", 10)(2, CustomerHistoryComponent_ng_container_2_ng_template_2_Template, 17, 20, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const entry_r4 = ctx.$implicit;\n    const defaultComponents_r8 = i0.ɵɵreference(3);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.hasCustomComponent(entry_r4.type))(\"ngIfElse\", defaultComponents_r8);\n  }\n}\nconst _c5 = () => [\"UpdateCustomer\"];\nconst _c6 = a0 => [\"/orders\", a0];\nfunction CustomerDetailComponent_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function CustomerDetailComponent_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.create());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !(ctx_r1.addressDefaultsUpdated || ctx_r1.detailForm.valid && ctx_r1.detailForm.dirty));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, \"common.create\"), \" \");\n  }\n}\nfunction CustomerDetailComponent_ng_template_7_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function CustomerDetailComponent_ng_template_7_button_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.save());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r1.addressDefaultsUpdated || ctx_r1.detailForm.valid && ctx_r1.detailForm.dirty));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, \"common.update\"), \" \");\n  }\n}\nfunction CustomerDetailComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, CustomerDetailComponent_ng_template_7_button_0_Template, 3, 4, \"button\", 23);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"vdrIfPermissions\", \"UpdateCustomer\");\n  }\n}\nfunction CustomerDetailComponent_vdr_card_12_vdr_labeled_data_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"vdr-labeled-data\", 26);\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelementStart(2, \"time\", 27);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"timeAgo\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const lastLogin_r4 = ctx.ngIf;\n    i0.ɵɵproperty(\"label\", i0.ɵɵpipeBind1(1, 3, \"customer.last-login\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"dateTime\", lastLogin_r4);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 5, lastLogin_r4));\n  }\n}\nfunction CustomerDetailComponent_vdr_card_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"vdr-card\");\n    i0.ɵɵelement(1, \"vdr-customer-status-label\", 24);\n    i0.ɵɵtemplate(2, CustomerDetailComponent_vdr_card_12_vdr_labeled_data_2_Template, 5, 7, \"vdr-labeled-data\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const customer_r5 = ctx.ngIf;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"customer\", customer_r5);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", customer_r5.user == null ? null : customer_r5.user.lastLogin);\n  }\n}\nfunction CustomerDetailComponent_vdr_card_14_div_2_vdr_chip_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"vdr-chip\", 32);\n    i0.ɵɵlistener(\"iconClick\", function CustomerDetailComponent_vdr_card_14_div_2_vdr_chip_1_Template_vdr_chip_iconClick_0_listener() {\n      const group_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.removeFromGroup(group_r7));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"colorFrom\", group_r7.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(group_r7.name);\n  }\n}\nfunction CustomerDetailComponent_vdr_card_14_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, CustomerDetailComponent_vdr_card_14_div_2_vdr_chip_1_Template, 2, 2, \"vdr-chip\", 31);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const groups_r8 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", groups_r8);\n  }\n}\nfunction CustomerDetailComponent_vdr_card_14_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"customer.not-a-member-of-any-groups\"), \" \");\n  }\n}\nfunction CustomerDetailComponent_vdr_card_14_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function CustomerDetailComponent_vdr_card_14_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.addToGroup());\n    });\n    i0.ɵɵelement(1, \"clr-icon\", 35);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, \"customer.add-customer-to-group\"), \" \");\n  }\n}\nfunction CustomerDetailComponent_vdr_card_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"vdr-card\", 28);\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵtemplate(2, CustomerDetailComponent_vdr_card_14_div_2_Template, 2, 1, \"div\", 29)(3, CustomerDetailComponent_vdr_card_14_ng_template_3_Template, 3, 3, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementStart(5, \"div\");\n    i0.ɵɵtemplate(6, CustomerDetailComponent_vdr_card_14_button_6_Template, 4, 3, \"button\", 30);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const groups_r8 = ctx.ngIf;\n    const noGroups_r10 = i0.ɵɵreference(4);\n    i0.ɵɵproperty(\"title\", i0.ɵɵpipeBind1(1, 4, \"customer.customer-groups\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", groups_r8.length)(\"ngIfElse\", noGroups_r10);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"vdrIfPermissions\", \"UpdateCustomerGroup\");\n  }\n}\nfunction CustomerDetailComponent_vdr_page_entity_info_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"vdr-page-entity-info\", 36);\n  }\n  if (rf & 2) {\n    const entity_r11 = ctx.ngIf;\n    i0.ɵɵproperty(\"entity\", entity_r11);\n  }\n}\nfunction CustomerDetailComponent_vdr_form_field_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"vdr-form-field\", 37);\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"input\", 38);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"label\", i0.ɵɵpipeBind1(1, 1, \"customer.password\"));\n  }\n}\nfunction CustomerDetailComponent_vdr_card_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"vdr-card\", 39);\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"vdr-tabbed-custom-fields\", 40);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"title\", i0.ɵɵpipeBind1(1, 3, \"common.custom-fields\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"customFields\", ctx_r1.customFields)(\"customFieldsFormGroup\", ctx_r1.detailForm.get(\"customer.customFields\"));\n  }\n}\nfunction CustomerDetailComponent_ng_container_48_vdr_address_card_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"vdr-address-card\", 55);\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵpipe(2, \"hasPermission\");\n    i0.ɵɵlistener(\"setAsDefaultBilling\", function CustomerDetailComponent_ng_container_48_vdr_address_card_4_Template_vdr_address_card_setAsDefaultBilling_0_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.setDefaultBillingAddressId($event));\n    })(\"setAsDefaultShipping\", function CustomerDetailComponent_ng_container_48_vdr_address_card_4_Template_vdr_address_card_setAsDefaultShipping_0_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.setDefaultShippingAddressId($event));\n    })(\"deleteAddress\", function CustomerDetailComponent_ng_container_48_vdr_address_card_4_Template_vdr_address_card_deleteAddress_0_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.toggleDeleteAddress($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const addressForm_r14 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"to-delete\", ctx_r1.addressesToDeleteIds.has(addressForm_r14.value.id));\n    i0.ɵɵproperty(\"availableCountries\", i0.ɵɵpipeBind1(1, 8, ctx_r1.availableCountries$))(\"isDefaultBilling\", ctx_r1.defaultBillingAddressId === addressForm_r14.value.id)(\"isDefaultShipping\", ctx_r1.defaultShippingAddressId === addressForm_r14.value.id)(\"addressForm\", addressForm_r14)(\"customFields\", ctx_r1.addressCustomFields)(\"editable\", i0.ɵɵpipeBind1(2, 10, i0.ɵɵpureFunction0(12, _c5)) && !ctx_r1.addressesToDeleteIds.has(addressForm_r14.value.id));\n  }\n}\nfunction CustomerDetailComponent_ng_container_48_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 56);\n    i0.ɵɵlistener(\"click\", function CustomerDetailComponent_ng_container_48_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.addAddress());\n    });\n    i0.ɵɵelement(1, \"clr-icon\", 35);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, \"customer.create-new-address\"), \" \");\n  }\n}\nfunction CustomerDetailComponent_ng_container_48_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const order_r16 = ctx.item;\n    i0.ɵɵtextInterpolate1(\" \", order_r16.id, \" \");\n  }\n}\nfunction CustomerDetailComponent_ng_container_48_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"localeDate\");\n  }\n  if (rf & 2) {\n    const order_r17 = ctx.item;\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(1, 1, order_r17.createdAt, \"short\"), \" \");\n  }\n}\nfunction CustomerDetailComponent_ng_container_48_ng_template_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 57)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"clr-icon\", 58);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const order_r18 = ctx.item;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c6, order_r18.id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r18.code);\n  }\n}\nfunction CustomerDetailComponent_ng_container_48_ng_template_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"vdr-chip\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const order_r19 = ctx.item;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(order_r19.type);\n  }\n}\nfunction CustomerDetailComponent_ng_container_48_ng_template_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"vdr-order-state-label\", 59);\n  }\n  if (rf & 2) {\n    const order_r20 = ctx.item;\n    i0.ɵɵproperty(\"state\", order_r20.state);\n  }\n}\nfunction CustomerDetailComponent_ng_container_48_ng_template_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"localeCurrency\");\n  }\n  if (rf & 2) {\n    const order_r21 = ctx.item;\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(1, 1, order_r21.totalWithTax, order_r21.currencyCode), \" \");\n  }\n}\nfunction CustomerDetailComponent_ng_container_48_ng_template_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"timeAgo\");\n  }\n  if (rf & 2) {\n    const order_r22 = ctx.item;\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(1, 1, order_r22.updatedAt), \" \");\n  }\n}\nfunction CustomerDetailComponent_ng_container_48_ng_template_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"localeDate\");\n  }\n  if (rf & 2) {\n    const order_r23 = ctx.item;\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(1, 1, order_r23.orderPlacedAt, \"short\"), \" \");\n  }\n}\nfunction CustomerDetailComponent_ng_container_48_vdr_dt2_custom_field_column_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"vdr-dt2-custom-field-column\", 60);\n  }\n  if (rf & 2) {\n    const customField_r24 = ctx.$implicit;\n    i0.ɵɵproperty(\"customField\", customField_r24);\n  }\n}\nfunction CustomerDetailComponent_ng_container_48_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"vdr-card\", 28);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementStart(3, \"div\", 8);\n    i0.ɵɵtemplate(4, CustomerDetailComponent_ng_container_48_vdr_address_card_4_Template, 3, 13, \"vdr-address-card\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, CustomerDetailComponent_ng_container_48_button_5_Template, 4, 3, \"button\", 42);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"vdr-card\", 43);\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementStart(8, \"vdr-data-table-2\", 44);\n    i0.ɵɵpipe(9, \"async\");\n    i0.ɵɵpipe(10, \"async\");\n    i0.ɵɵpipe(11, \"translate\");\n    i0.ɵɵlistener(\"itemsPerPageChange\", function CustomerDetailComponent_ng_container_48_Template_vdr_data_table_2_itemsPerPageChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.setOrderItemsPerPage($event));\n    })(\"pageChange\", function CustomerDetailComponent_ng_container_48_Template_vdr_data_table_2_pageChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.setOrderCurrentPage($event));\n    });\n    i0.ɵɵelementStart(12, \"vdr-dt2-column\", 45);\n    i0.ɵɵpipe(13, \"translate\");\n    i0.ɵɵtemplate(14, CustomerDetailComponent_ng_container_48_ng_template_14_Template, 1, 1, \"ng-template\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"vdr-dt2-column\", 46);\n    i0.ɵɵpipe(16, \"translate\");\n    i0.ɵɵtemplate(17, CustomerDetailComponent_ng_container_48_ng_template_17_Template, 2, 4, \"ng-template\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"vdr-dt2-column\", 47);\n    i0.ɵɵpipe(19, \"translate\");\n    i0.ɵɵtemplate(20, CustomerDetailComponent_ng_container_48_ng_template_20_Template, 4, 4, \"ng-template\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"vdr-dt2-column\", 48);\n    i0.ɵɵpipe(22, \"translate\");\n    i0.ɵɵtemplate(23, CustomerDetailComponent_ng_container_48_ng_template_23_Template, 2, 1, \"ng-template\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"vdr-dt2-column\", 49);\n    i0.ɵɵpipe(25, \"translate\");\n    i0.ɵɵtemplate(26, CustomerDetailComponent_ng_container_48_ng_template_26_Template, 1, 1, \"ng-template\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"vdr-dt2-column\", 50);\n    i0.ɵɵpipe(28, \"translate\");\n    i0.ɵɵtemplate(29, CustomerDetailComponent_ng_container_48_ng_template_29_Template, 2, 4, \"ng-template\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"vdr-dt2-column\", 51);\n    i0.ɵɵpipe(31, \"translate\");\n    i0.ɵɵtemplate(32, CustomerDetailComponent_ng_container_48_ng_template_32_Template, 2, 3, \"ng-template\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"vdr-dt2-column\", 52);\n    i0.ɵɵpipe(34, \"translate\");\n    i0.ɵɵtemplate(35, CustomerDetailComponent_ng_container_48_ng_template_35_Template, 2, 4, \"ng-template\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(36, CustomerDetailComponent_ng_container_48_vdr_dt2_custom_field_column_36_Template, 1, 1, \"vdr-dt2-custom-field-column\", 53);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(37, \"vdr-card\", 28);\n    i0.ɵɵpipe(38, \"translate\");\n    i0.ɵɵelementStart(39, \"vdr-customer-history\", 54);\n    i0.ɵɵpipe(40, \"async\");\n    i0.ɵɵpipe(41, \"async\");\n    i0.ɵɵlistener(\"addNote\", function CustomerDetailComponent_ng_container_48_Template_vdr_customer_history_addNote_39_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.addNoteToCustomer($event));\n    })(\"updateNote\", function CustomerDetailComponent_ng_container_48_Template_vdr_customer_history_updateNote_39_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateNote($event));\n    })(\"deleteNote\", function CustomerDetailComponent_ng_container_48_Template_vdr_customer_history_deleteNote_39_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.deleteNote($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"title\", i0.ɵɵpipeBind1(2, 26, \"customer.addresses\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.getAddressFormControls());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"vdrIfPermissions\", \"UpdateCustomer\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"title\", i0.ɵɵpipeBind1(7, 28, \"customer.orders\"))(\"paddingX\", false);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"items\", i0.ɵɵpipeBind1(9, 30, ctx_r1.orders$))(\"itemsPerPage\", ctx_r1.ordersPerPage)(\"totalItems\", i0.ɵɵpipeBind1(10, 32, ctx_r1.ordersCount$))(\"currentPage\", ctx_r1.currentOrdersPage)(\"emptyStateLabel\", i0.ɵɵpipeBind1(11, 34, \"customer.no-orders-placed\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(13, 36, \"common.id\"))(\"hiddenByDefault\", true);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(16, 38, \"common.created-at\"))(\"hiddenByDefault\", true);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(19, 40, \"common.code\"))(\"optional\", false);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(22, 42, \"order.order-type\"))(\"hiddenByDefault\", true);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(25, 44, \"order.state\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(28, 46, \"order.total\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(31, 48, \"common.updated-at\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(34, 50, \"order.placed-at\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.customFields);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"title\", i0.ɵɵpipeBind1(38, 52, \"customer.customer-history\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"customer\", i0.ɵɵpipeBind1(40, 54, ctx_r1.entity$))(\"history\", i0.ɵɵpipeBind1(41, 56, ctx_r1.history$));\n  }\n}\nfunction CustomerGroupDetailComponent_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function CustomerGroupDetailComponent_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.create());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !(ctx_r1.detailForm.valid && ctx_r1.detailForm.dirty));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, \"common.create\"), \" \");\n  }\n}\nfunction CustomerGroupDetailComponent_ng_template_7_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function CustomerGroupDetailComponent_ng_template_7_button_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.save());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r1.detailForm.valid && ctx_r1.detailForm.dirty));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, \"common.update\"), \" \");\n  }\n}\nfunction CustomerGroupDetailComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, CustomerGroupDetailComponent_ng_template_7_button_0_Template, 3, 4, \"button\", 11);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"vdrIfPermissions\", \"UpdateCustomer\");\n  }\n}\nfunction CustomerGroupDetailComponent_vdr_card_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"vdr-card\");\n    i0.ɵɵelement(1, \"vdr-page-entity-info\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entity_r4 = ctx.ngIf;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"entity\", entity_r4);\n  }\n}\nfunction CustomerGroupDetailComponent_vdr_card_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"vdr-card\", 13);\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"vdr-tabbed-custom-fields\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"title\", i0.ɵɵpipeBind1(1, 3, \"common.custom-fields\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"customFields\", ctx_r1.customFields)(\"customFieldsFormGroup\", ctx_r1.detailForm.get(\"customFields\"));\n  }\n}\nconst _c7 = () => [\"CreateCustomerGroup\", \"UpdateCustomerGroup\"];\nfunction CustomerGroupDetailDialogComponent_ng_template_0_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"customer.update-customer-group\"));\n  }\n}\nfunction CustomerGroupDetailDialogComponent_ng_template_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"customer.create-customer-group\"));\n  }\n}\nfunction CustomerGroupDetailDialogComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, CustomerGroupDetailDialogComponent_ng_template_0_span_0_Template, 3, 3, \"span\", 6)(1, CustomerGroupDetailDialogComponent_ng_template_0_span_1_Template, 3, 3, \"span\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.group.id);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.group.id);\n  }\n}\nfunction CustomerGroupDetailDialogComponent_section_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 7)(1, \"label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"vdr-tabbed-custom-fields\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 3, \"common.custom-fields\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"customFields\", ctx_r0.customFields)(\"customFieldsFormGroup\", ctx_r0.form.get(\"customFields\"));\n  }\n}\nfunction CustomerGroupDetailDialogComponent_ng_template_7_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"customer.update-customer-group\"));\n  }\n}\nfunction CustomerGroupDetailDialogComponent_ng_template_7_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"customer.create-customer-group\"));\n  }\n}\nfunction CustomerGroupDetailDialogComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function CustomerGroupDetailDialogComponent_ng_template_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.cancel());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function CustomerGroupDetailDialogComponent_ng_template_7_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.save());\n    });\n    i0.ɵɵtemplate(4, CustomerGroupDetailDialogComponent_ng_template_7_span_4_Template, 3, 3, \"span\", 6)(5, CustomerGroupDetailDialogComponent_ng_template_7_span_5_Template, 3, 3, \"span\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 4, \"common.cancel\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.form.valid);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.group.id);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.group.id);\n  }\n}\nconst _c8 = () => [\"./\", \"create\"];\nconst _c9 = a0 => [\"./\", a0];\nconst _c10 = a0 => ({\n  contents: a0\n});\nfunction CustomerGroupListComponent_a_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 5);\n    i0.ɵɵelement(1, \"clr-icon\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c8));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 2, \"customer.create-new-customer-group\"), \" \");\n  }\n}\nfunction CustomerGroupListComponent_ng_template_9_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const customerGroup_r3 = ctx.item;\n    i0.ɵɵtextInterpolate1(\" \", customerGroup_r3.id, \" \");\n  }\n}\nfunction CustomerGroupListComponent_ng_template_9_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"localeDate\");\n  }\n  if (rf & 2) {\n    const customerGroup_r4 = ctx.item;\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(1, 1, customerGroup_r4.createdAt, \"short\"), \" \");\n  }\n}\nfunction CustomerGroupListComponent_ng_template_9_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"localeDate\");\n  }\n  if (rf & 2) {\n    const customerGroup_r5 = ctx.item;\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(1, 1, customerGroup_r5.updatedAt, \"short\"), \" \");\n  }\n}\nfunction CustomerGroupListComponent_ng_template_9_ng_template_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 16)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"clr-icon\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const customerGroup_r6 = ctx.item;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c9, customerGroup_r6.id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customerGroup_r6.name);\n  }\n}\nfunction CustomerGroupListComponent_ng_template_9_vdr_dt2_custom_field_column_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"vdr-dt2-custom-field-column\", 18);\n  }\n  if (rf & 2) {\n    const field_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"customField\", field_r7)(\"sorts\", ctx_r1.sorts);\n  }\n}\nfunction CustomerGroupListComponent_ng_template_9_ng_template_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 19)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"clr-icon\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const customerGroup_r8 = ctx.item;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(6, _c9, i0.ɵɵpureFunction1(4, _c10, customerGroup_r8.id)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 2, \"customer.view-group-members\"));\n  }\n}\nfunction CustomerGroupListComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"vdr-data-table-2\", 7);\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵpipe(3, \"async\");\n    i0.ɵɵpipe(4, \"async\");\n    i0.ɵɵpipe(5, \"async\");\n    i0.ɵɵlistener(\"pageChange\", function CustomerGroupListComponent_ng_template_9_Template_vdr_data_table_2_pageChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.setPageNumber($event));\n    })(\"itemsPerPageChange\", function CustomerGroupListComponent_ng_template_9_Template_vdr_data_table_2_itemsPerPageChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.setItemsPerPage($event));\n    })(\"visibleColumnsChange\", function CustomerGroupListComponent_ng_template_9_Template_vdr_data_table_2_visibleColumnsChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.setVisibleColumns($event));\n    });\n    i0.ɵɵelement(6, \"vdr-bulk-action-menu\", 8)(7, \"vdr-dt2-search\", 9);\n    i0.ɵɵpipe(8, \"translate\");\n    i0.ɵɵelementStart(9, \"vdr-dt2-column\", 10);\n    i0.ɵɵpipe(10, \"translate\");\n    i0.ɵɵtemplate(11, CustomerGroupListComponent_ng_template_9_ng_template_11_Template, 1, 1, \"ng-template\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"vdr-dt2-column\", 11);\n    i0.ɵɵpipe(13, \"translate\");\n    i0.ɵɵtemplate(14, CustomerGroupListComponent_ng_template_9_ng_template_14_Template, 2, 4, \"ng-template\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"vdr-dt2-column\", 12);\n    i0.ɵɵpipe(16, \"translate\");\n    i0.ɵɵtemplate(17, CustomerGroupListComponent_ng_template_9_ng_template_17_Template, 2, 4, \"ng-template\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"vdr-dt2-column\", 13);\n    i0.ɵɵpipe(19, \"translate\");\n    i0.ɵɵtemplate(20, CustomerGroupListComponent_ng_template_9_ng_template_20_Template, 4, 4, \"ng-template\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(21, CustomerGroupListComponent_ng_template_9_vdr_dt2_custom_field_column_21_Template, 1, 2, \"vdr-dt2-custom-field-column\", 14);\n    i0.ɵɵelementStart(22, \"vdr-dt2-column\", 15);\n    i0.ɵɵpipe(23, \"translate\");\n    i0.ɵɵtemplate(24, CustomerGroupListComponent_ng_template_9_ng_template_24_Template, 5, 8, \"ng-template\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", ctx_r1.dataTableListId)(\"items\", i0.ɵɵpipeBind1(1, 25, ctx_r1.items$))(\"itemsPerPage\", i0.ɵɵpipeBind1(2, 27, ctx_r1.itemsPerPage$))(\"totalItems\", i0.ɵɵpipeBind1(3, 29, ctx_r1.totalItems$))(\"currentPage\", i0.ɵɵpipeBind1(4, 31, ctx_r1.currentPage$))(\"filters\", ctx_r1.filters)(\"activeIndex\", i0.ɵɵpipeBind1(5, 33, ctx_r1.activeIndex$));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"hostComponent\", ctx_r1)(\"selectionManager\", ctx_r1.selectionManager);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"searchTermControl\", ctx_r1.searchTermControl)(\"searchTermPlaceholder\", i0.ɵɵpipeBind1(8, 35, \"common.search-by-name\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(10, 37, \"common.id\"))(\"hiddenByDefault\", true);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(13, 39, \"common.created-at\"))(\"hiddenByDefault\", true)(\"sort\", ctx_r1.sorts.get(\"createdAt\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(16, 41, \"common.updated-at\"))(\"hiddenByDefault\", true)(\"sort\", ctx_r1.sorts.get(\"updatedAt\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(19, 43, \"common.name\"))(\"optional\", false)(\"sort\", ctx_r1.sorts.get(\"name\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.customFields);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(23, 45, \"common.view-contents\"))(\"optional\", false);\n  }\n}\nfunction CustomerGroupListComponent_ng_template_10_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function CustomerGroupListComponent_ng_template_10_ng_container_0_Template_button_click_1_listener() {\n      const activeGroup_r10 = i0.ɵɵrestoreView(_r9).ngIf;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.addToGroup(activeGroup_r10));\n    });\n    i0.ɵɵelement(2, \"clr-icon\", 6);\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"vdr-customer-group-member-list\", 23);\n    i0.ɵɵpipe(7, \"async\");\n    i0.ɵɵpipe(8, \"async\");\n    i0.ɵɵpipe(9, \"async\");\n    i0.ɵɵlistener(\"fetchParamsChange\", function CustomerGroupListComponent_ng_template_10_ng_container_0_Template_vdr_customer_group_member_list_fetchParamsChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.fetchGroupMembers$.next($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const activeGroup_r10 = ctx.ngIf;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 5, \"customer.add-customers-to-group\", i0.ɵɵpureFunction1(14, _c1, activeGroup_r10.name)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"members\", i0.ɵɵpipeBind1(7, 8, ctx_r1.members$))(\"route\", ctx_r1.route)(\"totalItems\", i0.ɵɵpipeBind1(8, 10, ctx_r1.membersTotal$))(\"activeGroup\", i0.ɵɵpipeBind1(9, 12, ctx_r1.activeGroup$));\n  }\n}\nfunction CustomerGroupListComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, CustomerGroupListComponent_ng_template_10_ng_container_0_Template, 10, 16, \"ng-container\", 21);\n    i0.ɵɵpipe(1, \"async\");\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx_r1.activeGroup$));\n  }\n}\nconst _c11 = () => [\"./create\"];\nfunction CustomerListComponent_a_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 12);\n    i0.ɵɵelement(1, \"clr-icon\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c11));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 2, \"customer.create-new-customer\"), \" \");\n  }\n}\nfunction CustomerListComponent_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const customer_r1 = ctx.item;\n    i0.ɵɵtextInterpolate1(\" \", customer_r1.id, \" \");\n  }\n}\nfunction CustomerListComponent_ng_template_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"localeDate\");\n  }\n  if (rf & 2) {\n    const customer_r2 = ctx.item;\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(1, 1, customer_r2.createdAt, \"short\"), \" \");\n  }\n}\nfunction CustomerListComponent_ng_template_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"localeDate\");\n  }\n  if (rf & 2) {\n    const customer_r3 = ctx.item;\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(1, 1, customer_r3.updatedAt, \"short\"), \" \");\n  }\n}\nfunction CustomerListComponent_ng_template_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 14)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"clr-icon\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const customer_r4 = ctx.item;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c9, customer_r4.id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\" \", customer_r4.title, \" \", customer_r4.firstName, \" \", customer_r4.lastName, \" \");\n  }\n}\nfunction CustomerListComponent_ng_template_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"vdr-customer-status-label\", 16);\n  }\n  if (rf & 2) {\n    const customer_r5 = ctx.item;\n    i0.ɵɵproperty(\"customer\", customer_r5);\n  }\n}\nfunction CustomerListComponent_ng_template_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const customer_r6 = ctx.item;\n    i0.ɵɵtextInterpolate1(\" \", customer_r6.emailAddress, \" \");\n  }\n}\nfunction CustomerListComponent_vdr_dt2_custom_field_column_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"vdr-dt2-custom-field-column\", 17);\n  }\n  if (rf & 2) {\n    const field_r7 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"customField\", field_r7)(\"sorts\", ctx_r7.sorts);\n  }\n}\nclass CustomerStatusLabelComponent {\n  static {\n    this.ɵfac = function CustomerStatusLabelComponent_Factory(t) {\n      return new (t || CustomerStatusLabelComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CustomerStatusLabelComponent,\n      selectors: [[\"vdr-customer-status-label\"]],\n      inputs: {\n        customer: \"customer\"\n      },\n      decls: 2,\n      vars: 2,\n      consts: [[4, \"ngIf\"], [\"shape\", \"check-circle\", 1, \"verified-user-icon\"], [\"shape\", \"check-circle\", 1, \"registered-user-icon\"]],\n      template: function CustomerStatusLabelComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, CustomerStatusLabelComponent_vdr_chip_0_Template, 3, 2, \"vdr-chip\", 0)(1, CustomerStatusLabelComponent_vdr_chip_1_Template, 3, 3, \"vdr-chip\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.customer.user == null ? null : ctx.customer.user.id);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !(ctx.customer.user == null ? null : ctx.customer.user.id));\n        }\n      },\n      dependencies: [i3.ClrIconCustomTag, i3$1.NgIf, i1.ChipComponent, i4.TranslatePipe],\n      styles: [\".registered-user-icon[_ngcontent-%COMP%]{color:var(--color-grey-300)}.verified-user-icon[_ngcontent-%COMP%]{color:var(--color-success-500)}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomerStatusLabelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'vdr-customer-status-label',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<vdr-chip *ngIf=\\\"customer.user?.id\\\">\\r\\n    <ng-container *ngIf=\\\"customer.user?.verified\\\">\\r\\n        <clr-icon shape=\\\"check-circle\\\" class=\\\"verified-user-icon\\\"></clr-icon>\\r\\n        {{ 'customer.verified' | translate }}\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"!customer.user?.verified\\\">\\r\\n        <clr-icon shape=\\\"check-circle\\\" class=\\\"registered-user-icon\\\"></clr-icon>\\r\\n        {{ 'customer.registered' | translate }}\\r\\n    </ng-container>\\r\\n</vdr-chip>\\r\\n<vdr-chip *ngIf=\\\"!customer.user?.id\\\">{{ 'customer.guest' | translate }}</vdr-chip>\\r\\n\",\n      styles: [\".registered-user-icon{color:var(--color-grey-300)}.verified-user-icon{color:var(--color-success-500)}\\n\"]\n    }]\n  }], null, {\n    customer: [{\n      type: Input\n    }]\n  });\n})();\nclass CustomerGroupMemberListComponent {\n  constructor(router, dataService) {\n    this.router = router;\n    this.dataService = dataService;\n    this.selectedMemberIds = [];\n    this.selectionChange = new EventEmitter();\n    this.fetchParamsChange = new EventEmitter();\n    this.filterTermControl = new FormControl('');\n    this.selectionManager = new SelectionManager({\n      multiSelect: true,\n      itemsAreEqual: (a, b) => a.id === b.id,\n      additiveMode: true\n    });\n    this.refresh$ = new BehaviorSubject(true);\n    this.destroy$ = new Subject();\n  }\n  ngOnInit() {\n    this.membersCurrentPage$ = this.route.paramMap.pipe(map(qpm => qpm.get('membersPage')), map(page => !page ? 1 : +page), startWith(1), distinctUntilChanged());\n    this.membersItemsPerPage$ = this.route.paramMap.pipe(map(qpm => qpm.get('membersPerPage')), map(perPage => !perPage ? 10 : +perPage), startWith(10), distinctUntilChanged());\n    const filterTerm$ = this.filterTermControl.valueChanges.pipe(debounceTime(250), tap(() => this.setContentsPageNumber(1)), startWith(''));\n    combineLatest(this.membersCurrentPage$, this.membersItemsPerPage$, filterTerm$, this.refresh$).pipe(takeUntil(this.destroy$)).subscribe(([currentPage, itemsPerPage, filterTerm]) => {\n      const take = itemsPerPage;\n      const skip = (currentPage - 1) * itemsPerPage;\n      this.fetchParamsChange.emit({\n        filterTerm: filterTerm ?? '',\n        skip,\n        take\n      });\n    });\n    this.selectionManager.setCurrentItems(this.members?.filter(m => this.selectedMemberIds.includes(m.id)) ?? []);\n    this.selectionManager.selectionChanges$.pipe(takeUntil(this.destroy$)).subscribe(selection => {\n      this.selectionChange.emit(selection.map(s => s.id));\n    });\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  setContentsPageNumber(page) {\n    this.setParam('membersPage', page);\n  }\n  setContentsItemsPerPage(perPage) {\n    this.setParam('membersPerPage', perPage);\n  }\n  refresh() {\n    this.refresh$.next(true);\n  }\n  setParam(key, value) {\n    this.router.navigate(['./', {\n      ...this.route.snapshot.params,\n      [key]: value\n    }], {\n      relativeTo: this.route,\n      queryParamsHandling: 'merge'\n    });\n  }\n  static {\n    this.ɵfac = function CustomerGroupMemberListComponent_Factory(t) {\n      return new (t || CustomerGroupMemberListComponent)(i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i1.DataService));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CustomerGroupMemberListComponent,\n      selectors: [[\"vdr-customer-group-member-list\"]],\n      inputs: {\n        locationId: \"locationId\",\n        members: \"members\",\n        totalItems: \"totalItems\",\n        route: \"route\",\n        selectedMemberIds: \"selectedMemberIds\",\n        activeGroup: \"activeGroup\"\n      },\n      outputs: {\n        selectionChange: \"selectionChange\",\n        fetchParamsChange: \"fetchParamsChange\"\n      },\n      decls: 24,\n      vars: 39,\n      consts: [[3, \"pageChange\", \"itemsPerPageChange\", \"id\", \"items\", \"itemsPerPage\", \"totalItems\", \"currentPage\"], [3, \"locationId\", \"hostComponent\", \"selectionManager\"], [3, \"searchTermControl\", \"searchTermPlaceholder\"], [\"id\", \"id\", 3, \"heading\", \"hiddenByDefault\"], [\"id\", \"created-at\", 3, \"heading\", \"hiddenByDefault\"], [\"id\", \"updated-at\", 3, \"heading\", \"hiddenByDefault\"], [\"id\", \"name\", 3, \"heading\", \"optional\"], [\"id\", \"status\", 3, \"heading\", \"hiddenByDefault\"], [\"id\", \"email-address\", 3, \"heading\"], [1, \"button-ghost\", 3, \"routerLink\"], [\"shape\", \"arrow right\"], [3, \"customer\"]],\n      template: function CustomerGroupMemberListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"vdr-data-table-2\", 0);\n          i0.ɵɵpipe(1, \"async\");\n          i0.ɵɵpipe(2, \"async\");\n          i0.ɵɵlistener(\"pageChange\", function CustomerGroupMemberListComponent_Template_vdr_data_table_2_pageChange_0_listener($event) {\n            return ctx.setContentsPageNumber($event);\n          })(\"itemsPerPageChange\", function CustomerGroupMemberListComponent_Template_vdr_data_table_2_itemsPerPageChange_0_listener($event) {\n            return ctx.setContentsItemsPerPage($event);\n          });\n          i0.ɵɵelement(3, \"vdr-bulk-action-menu\", 1)(4, \"vdr-dt2-search\", 2);\n          i0.ɵɵpipe(5, \"translate\");\n          i0.ɵɵelementStart(6, \"vdr-dt2-column\", 3);\n          i0.ɵɵpipe(7, \"translate\");\n          i0.ɵɵtemplate(8, CustomerGroupMemberListComponent_ng_template_8_Template, 1, 1, \"ng-template\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"vdr-dt2-column\", 4);\n          i0.ɵɵpipe(10, \"translate\");\n          i0.ɵɵtemplate(11, CustomerGroupMemberListComponent_ng_template_11_Template, 2, 4, \"ng-template\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"vdr-dt2-column\", 5);\n          i0.ɵɵpipe(13, \"translate\");\n          i0.ɵɵtemplate(14, CustomerGroupMemberListComponent_ng_template_14_Template, 2, 4, \"ng-template\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"vdr-dt2-column\", 6);\n          i0.ɵɵpipe(16, \"translate\");\n          i0.ɵɵtemplate(17, CustomerGroupMemberListComponent_ng_template_17_Template, 4, 6, \"ng-template\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"vdr-dt2-column\", 7);\n          i0.ɵɵpipe(19, \"translate\");\n          i0.ɵɵtemplate(20, CustomerGroupMemberListComponent_ng_template_20_Template, 1, 1, \"ng-template\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"vdr-dt2-column\", 8);\n          i0.ɵɵpipe(22, \"translate\");\n          i0.ɵɵtemplate(23, CustomerGroupMemberListComponent_ng_template_23_Template, 1, 1, \"ng-template\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"id\", ctx.locationId)(\"items\", ctx.members)(\"itemsPerPage\", i0.ɵɵpipeBind1(1, 21, ctx.membersItemsPerPage$))(\"totalItems\", ctx.totalItems)(\"currentPage\", i0.ɵɵpipeBind1(2, 23, ctx.membersCurrentPage$));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"locationId\", ctx.locationId)(\"hostComponent\", ctx)(\"selectionManager\", ctx.selectionManager);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"searchTermControl\", ctx.filterTermControl)(\"searchTermPlaceholder\", i0.ɵɵpipeBind1(5, 25, \"customer.search-customers-by-email\"));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(7, 27, \"common.id\"))(\"hiddenByDefault\", true);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(10, 29, \"common.created-at\"))(\"hiddenByDefault\", true);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(13, 31, \"common.updated-at\"))(\"hiddenByDefault\", true);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(16, 33, \"customer.name\"))(\"optional\", false);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(19, 35, \"common.status\"))(\"hiddenByDefault\", true);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(22, 37, \"customer.email-address\"));\n        }\n      },\n      dependencies: [i3.ClrIconCustomTag, i2.RouterLink, i1.BulkActionMenuComponent, i1.DataTable2Component, i1.DataTable2ColumnComponent, i1.DataTable2SearchComponent, CustomerStatusLabelComponent, i3$1.AsyncPipe, i4.TranslatePipe, i1.LocaleDatePipe],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomerGroupMemberListComponent, [{\n    type: Component,\n    args: [{\n      selector: 'vdr-customer-group-member-list',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<vdr-data-table-2\\r\\n    [id]=\\\"locationId\\\"\\r\\n    [items]=\\\"members\\\"\\r\\n    [itemsPerPage]=\\\"membersItemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems\\\"\\r\\n    [currentPage]=\\\"membersCurrentPage$ | async\\\"\\r\\n    (pageChange)=\\\"setContentsPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setContentsItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        [locationId]=\\\"locationId\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"filterTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'customer.search-customers-by-email' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-customerGroup=\\\"item\\\">\\r\\n            {{ customerGroup.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            {{ customer.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            {{ customer.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'customer.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/customer/customers', customer.id]\\\"\\r\\n                ><span> {{ customer.title }} {{ customer.firstName }} {{ customer.lastName }} </span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.status' | translate\\\" id=\\\"status\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            <vdr-customer-status-label [customer]=\\\"customer\\\" />\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'customer.email-address' | translate\\\" id=\\\"email-address\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            {{ customer.emailAddress }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-data-table-2>\\r\\n\"\n    }]\n  }], () => [{\n    type: i2.Router\n  }, {\n    type: i1.DataService\n  }], {\n    locationId: [{\n      type: Input\n    }],\n    members: [{\n      type: Input\n    }],\n    totalItems: [{\n      type: Input\n    }],\n    route: [{\n      type: Input\n    }],\n    selectedMemberIds: [{\n      type: Input\n    }],\n    activeGroup: [{\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    fetchParamsChange: [{\n      type: Output\n    }]\n  });\n})();\nclass AddCustomerToGroupDialogComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.selectedCustomerIds = [];\n    this.fetchGroupMembers$ = new BehaviorSubject({\n      skip: 0,\n      take: 10,\n      filterTerm: ''\n    });\n  }\n  ngOnInit() {\n    const customerResult$ = this.fetchGroupMembers$.pipe(switchMap(({\n      skip,\n      take,\n      filterTerm\n    }) => this.dataService.customer.getCustomerList(take, skip, filterTerm).mapStream(res => res.customers)));\n    this.customers$ = customerResult$.pipe(map(res => res.items));\n    this.customersTotal$ = customerResult$.pipe(map(res => res.totalItems));\n  }\n  cancel() {\n    this.resolveWith();\n  }\n  add() {\n    this.resolveWith(this.selectedCustomerIds);\n  }\n  static {\n    this.ɵfac = function AddCustomerToGroupDialogComponent_Factory(t) {\n      return new (t || AddCustomerToGroupDialogComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: AddCustomerToGroupDialogComponent,\n      selectors: [[\"vdr-add-customer-to-group-dialog\"]],\n      decls: 5,\n      vars: 8,\n      consts: [[\"vdrDialogTitle\", \"\"], [\"locationId\", \"customer-group-members-picker-list\", 3, \"fetchParamsChange\", \"selectionChange\", \"members\", \"totalItems\", \"route\", \"selectedMemberIds\"], [\"vdrDialogButtons\", \"\"], [\"type\", \"button\", 1, \"btn\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\", \"disabled\"]],\n      template: function AddCustomerToGroupDialogComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, AddCustomerToGroupDialogComponent_ng_template_0_Template, 2, 6, \"ng-template\", 0);\n          i0.ɵɵelementStart(1, \"vdr-customer-group-member-list\", 1);\n          i0.ɵɵpipe(2, \"async\");\n          i0.ɵɵpipe(3, \"async\");\n          i0.ɵɵlistener(\"fetchParamsChange\", function AddCustomerToGroupDialogComponent_Template_vdr_customer_group_member_list_fetchParamsChange_1_listener($event) {\n            return ctx.fetchGroupMembers$.next($event);\n          })(\"selectionChange\", function AddCustomerToGroupDialogComponent_Template_vdr_customer_group_member_list_selectionChange_1_listener($event) {\n            return ctx.selectedCustomerIds = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(4, AddCustomerToGroupDialogComponent_ng_template_4_Template, 6, 10, \"ng-template\", 2);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"members\", i0.ɵɵpipeBind1(2, 4, ctx.customers$))(\"totalItems\", i0.ɵɵpipeBind1(3, 6, ctx.customersTotal$))(\"route\", ctx.route)(\"selectedMemberIds\", ctx.selectedCustomerIds);\n        }\n      },\n      dependencies: [i1.DialogButtonsDirective, i1.DialogTitleDirective, CustomerGroupMemberListComponent, i3$1.AsyncPipe, i4.TranslatePipe],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AddCustomerToGroupDialogComponent, [{\n    type: Component,\n    args: [{\n      selector: 'vdr-add-customer-to-group-dialog',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'customer.add-customers-to-group-with-name' | translate: {groupName: group.name} }}\\r\\n</ng-template>\\r\\n\\r\\n<vdr-customer-group-member-list\\r\\n    locationId=\\\"customer-group-members-picker-list\\\"\\r\\n    [members]=\\\"customers$ | async\\\"\\r\\n    [totalItems]=\\\"customersTotal$ | async\\\"\\r\\n    [route]=\\\"route\\\"\\r\\n    [selectedMemberIds]=\\\"selectedCustomerIds\\\"\\r\\n    (fetchParamsChange)=\\\"fetchGroupMembers$.next($event)\\\"\\r\\n    (selectionChange)=\\\"selectedCustomerIds = $event\\\"\\r\\n/>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"add()\\\" [disabled]=\\\"!selectedCustomerIds.length\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'customer.add-customers-to-group-with-count' | translate: {count: selectedCustomerIds.length} }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\"\n    }]\n  }], () => [{\n    type: i1.DataService\n  }], null);\n})();\nclass AddressDetailDialogComponent {\n  constructor(changeDetector) {\n    this.changeDetector = changeDetector;\n    this.availableCountries = [];\n  }\n  ngOnInit() {\n    this.addressForm.valueChanges.subscribe(() => this.changeDetector.markForCheck());\n  }\n  cancel() {\n    this.resolveWith();\n  }\n  save() {\n    this.resolveWith(this.addressForm);\n  }\n  static {\n    this.ɵfac = function AddressDetailDialogComponent_Factory(t) {\n      return new (t || AddressDetailDialogComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: AddressDetailDialogComponent,\n      selectors: [[\"vdr-address-detail-dialog\"]],\n      decls: 3,\n      vars: 3,\n      consts: [[\"vdrDialogTitle\", \"\"], [3, \"formGroup\", \"availableCountries\", \"customFields\"], [\"vdrDialogButtons\", \"\"], [4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\", \"disabled\"]],\n      template: function AddressDetailDialogComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, AddressDetailDialogComponent_ng_template_0_Template, 2, 2, \"ng-template\", 0);\n          i0.ɵɵelement(1, \"vdr-address-form\", 1);\n          i0.ɵɵtemplate(2, AddressDetailDialogComponent_ng_template_2_Template, 6, 7, \"ng-template\", 2);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"formGroup\", ctx.addressForm)(\"availableCountries\", ctx.availableCountries)(\"customFields\", ctx.customFields);\n        }\n      },\n      dependencies: [i3$1.NgIf, i1$1.NgControlStatusGroup, i1$1.FormGroupDirective, i1.DialogButtonsDirective, i1.DialogTitleDirective, i1.AddressFormComponent, i4.TranslatePipe],\n      styles: [\"clr-input-container[_ngcontent-%COMP%]{margin-bottom:12px}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AddressDetailDialogComponent, [{\n    type: Component,\n    args: [{\n      selector: 'vdr-address-detail-dialog',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<ng-template vdrDialogTitle>\\r\\n    <span *ngIf=\\\"addressForm.get('streetLine1')?.value as streetLine1\\\">{{ streetLine1 }},</span>\\r\\n    <span *ngIf=\\\"addressForm.get('countryCode')?.value as countryCode\\\"> {{ countryCode }}</span>\\r\\n</ng-template>\\r\\n\\r\\n<vdr-address-form\\r\\n    [formGroup]=\\\"addressForm\\\"\\r\\n    [availableCountries]=\\\"availableCountries\\\"\\r\\n    [customFields]=\\\"customFields\\\"\\r\\n></vdr-address-form>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"save()\\\"\\r\\n        [disabled]=\\\"!addressForm.valid || !addressForm.touched\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'common.update' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\",\n      styles: [\"clr-input-container{margin-bottom:12px}\\n\"]\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }], null);\n})();\nclass AddressCardComponent {\n  constructor(modalService, changeDetector) {\n    this.modalService = modalService;\n    this.changeDetector = changeDetector;\n    this.availableCountries = [];\n    this.editable = true;\n    this.setAsDefaultShipping = new EventEmitter();\n    this.setAsDefaultBilling = new EventEmitter();\n    this.deleteAddress = new EventEmitter();\n    this.dataDependenciesPopulated = new BehaviorSubject(false);\n  }\n  ngOnInit() {\n    const streetLine1 = this.addressForm.get('streetLine1');\n    // Make the address dialog display automatically if there is no address line\n    // as is the case when adding a new address.\n    if (!streetLine1.value) {\n      this.dataDependenciesPopulated.pipe(filter(value => value), take(1)).subscribe(() => {\n        this.editAddress();\n      });\n    }\n  }\n  ngOnChanges(changes) {\n    if (this.customFields != null && this.availableCountries != null) {\n      this.dataDependenciesPopulated.next(true);\n    }\n  }\n  getCountryName(countryCode) {\n    if (!this.availableCountries) {\n      return '';\n    }\n    const match = this.availableCountries.find(c => c.code === countryCode);\n    return match ? match.name : '';\n  }\n  setAsDefaultBillingAddress() {\n    this.setAsDefaultBilling.emit(this.addressForm.value.id);\n    this.addressForm.markAsDirty();\n  }\n  setAsDefaultShippingAddress() {\n    this.setAsDefaultShipping.emit(this.addressForm.value.id);\n    this.addressForm.markAsDirty();\n  }\n  delete() {\n    this.deleteAddress.emit(this.addressForm.value.id);\n    this.addressForm.markAsDirty();\n  }\n  editAddress() {\n    this.modalService.fromComponent(AddressDetailDialogComponent, {\n      locals: {\n        addressForm: this.addressForm,\n        customFields: this.customFields,\n        availableCountries: this.availableCountries\n      },\n      size: 'md',\n      closable: true\n    }).subscribe(() => {\n      this.changeDetector.markForCheck();\n    });\n  }\n  static {\n    this.ɵfac = function AddressCardComponent_Factory(t) {\n      return new (t || AddressCardComponent)(i0.ɵɵdirectiveInject(i1.ModalService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: AddressCardComponent,\n      selectors: [[\"vdr-address-card\"]],\n      inputs: {\n        addressForm: \"addressForm\",\n        customFields: \"customFields\",\n        availableCountries: \"availableCountries\",\n        isDefaultBilling: \"isDefaultBilling\",\n        isDefaultShipping: \"isDefaultShipping\",\n        editable: \"editable\"\n      },\n      outputs: {\n        setAsDefaultShipping: \"setAsDefaultShipping\",\n        setAsDefaultBilling: \"setAsDefaultBilling\",\n        deleteAddress: \"deleteAddress\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 1,\n      vars: 1,\n      consts: [[\"class\", \"card\", 4, \"ngIf\"], [1, \"card\"], [1, \"card-header\"], [1, \"address-title\"], [\"class\", \"street-line\", 4, \"ngIf\"], [1, \"default-controls\"], [\"class\", \"is-default p8\", 4, \"ngIf\"], [1, \"card-block\"], [1, \"card-text\"], [3, \"address\"], [1, \"card-footer\"], [1, \"address-actions\"], [3, \"entity\"], [4, \"ngIf\"], [1, \"street-line\"], [1, \"is-default\", \"p8\"], [\"shape\", \"truck\"], [\"shape\", \"credit-card\"], [1, \"button-small\", 3, \"click\"], [\"type\", \"button\", \"vdrDropdownTrigger\", \"\", 1, \"button-small\"], [\"shape\", \"ellipsis-vertical\", \"size\", \"12\"], [\"vdrDropdownItem\", \"\", 3, \"click\", \"disabled\"], [1, \"dropdown-divider\"], [\"type\", \"button\", \"vdrDropdownItem\", \"\", 3, \"click\"], [\"shape\", \"trash\", 1, \"is-danger\"]],\n      template: function AddressCardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, AddressCardComponent_div_0_Template, 15, 7, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.addressForm.value);\n        }\n      },\n      dependencies: [i3.ClrIconCustomTag, i3$1.NgIf, i1.ChipComponent, i1.DropdownComponent, i1.DropdownMenuComponent, i1.DropdownTriggerDirective, i1.DropdownItemDirective, i1.FormattedAddressComponent, i1.EntityInfoComponent, i4.TranslatePipe],\n      styles: [\"[_nghost-%COMP%]{display:block;max-width:360px}clr-input-container[_ngcontent-%COMP%]{margin-bottom:12px}.defaul-controls[_ngcontent-%COMP%]{display:flex}.is-default[_ngcontent-%COMP%]{margin:0;color:var(--color-success-500)}.address-actions[_ngcontent-%COMP%]{display:flex;align-items:center;gap:var(--space-unit)}.address-actions[_ngcontent-%COMP%]   vdr-entity-info[_ngcontent-%COMP%]{margin-top:1px}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AddressCardComponent, [{\n    type: Component,\n    args: [{\n      selector: 'vdr-address-card',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div class=\\\"card\\\" *ngIf=\\\"addressForm.value as address\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        <div class=\\\"address-title\\\">\\r\\n            <span class=\\\"street-line\\\" *ngIf=\\\"address.streetLine1\\\">{{ address.streetLine1 }},</span>\\r\\n            {{ address.countryCode }}\\r\\n        </div>\\r\\n        <div class=\\\"default-controls\\\">\\r\\n            <vdr-chip class=\\\"is-default p8\\\" *ngIf=\\\"isDefaultShipping\\\">\\r\\n                <clr-icon shape=\\\"truck\\\"></clr-icon>\\r\\n                {{ 'customer.default-shipping-address' | translate }}\\r\\n            </vdr-chip>\\r\\n            <vdr-chip class=\\\"is-default p8\\\" *ngIf=\\\"isDefaultBilling\\\">\\r\\n                <clr-icon shape=\\\"credit-card\\\"></clr-icon>\\r\\n                {{ 'customer.default-billing-address' | translate }}\\r\\n            </vdr-chip>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <div class=\\\"card-text\\\">\\r\\n            <vdr-formatted-address [address]=\\\"address\\\"></vdr-formatted-address>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\">\\r\\n        <div class=\\\"address-actions\\\">\\r\\n            <vdr-entity-info [entity]=\\\"address\\\"></vdr-entity-info>\\r\\n            <ng-container *ngIf=\\\"editable\\\">\\r\\n                <button class=\\\"button-small\\\" (click)=\\\"editAddress()\\\">\\r\\n                    {{ 'common.edit' | translate }}\\r\\n                </button>\\r\\n                <vdr-dropdown>\\r\\n                    <button type=\\\"button\\\" class=\\\"button-small\\\" vdrDropdownTrigger>\\r\\n                        {{ 'common.more' | translate }}\\r\\n                        <clr-icon shape=\\\"ellipsis-vertical\\\" size=\\\"12\\\"></clr-icon>\\r\\n                    </button>\\r\\n                    <vdr-dropdown-menu>\\r\\n                        <button\\r\\n                            vdrDropdownItem\\r\\n                            [disabled]=\\\"isDefaultShipping\\\"\\r\\n                            (click)=\\\"setAsDefaultShippingAddress()\\\"\\r\\n                        >\\r\\n                            {{ 'customer.set-as-default-shipping-address' | translate }}\\r\\n                        </button>\\r\\n                        <button\\r\\n                            vdrDropdownItem\\r\\n                            [disabled]=\\\"isDefaultBilling\\\"\\r\\n                            (click)=\\\"setAsDefaultBillingAddress()\\\"\\r\\n                        >\\r\\n                            {{ 'customer.set-as-default-billing-address' | translate }}\\r\\n                        </button>\\r\\n                        <div class=\\\"dropdown-divider\\\"></div>\\r\\n                        <button type=\\\"button\\\" (click)=\\\"delete()\\\" vdrDropdownItem>\\r\\n                            <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                            {{ 'common.delete' | translate }}\\r\\n                        </button>\\r\\n                    </vdr-dropdown-menu>\\r\\n                </vdr-dropdown>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\",\n      styles: [\":host{display:block;max-width:360px}clr-input-container{margin-bottom:12px}.defaul-controls{display:flex}.is-default{margin:0;color:var(--color-success-500)}.address-actions{display:flex;align-items:center;gap:var(--space-unit)}.address-actions vdr-entity-info{margin-top:1px}\\n\"]\n    }]\n  }], () => [{\n    type: i1.ModalService\n  }, {\n    type: i0.ChangeDetectorRef\n  }], {\n    addressForm: [{\n      type: Input\n    }],\n    customFields: [{\n      type: Input\n    }],\n    availableCountries: [{\n      type: Input\n    }],\n    isDefaultBilling: [{\n      type: Input\n    }],\n    isDefaultShipping: [{\n      type: Input\n    }],\n    editable: [{\n      type: Input\n    }],\n    setAsDefaultShipping: [{\n      type: Output\n    }],\n    setAsDefaultBilling: [{\n      type: Output\n    }],\n    deleteAddress: [{\n      type: Output\n    }]\n  });\n})();\nclass SelectCustomerGroupDialogComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.selectedGroupIds = [];\n  }\n  ngOnInit() {\n    this.groups$ = this.dataService.customer.getCustomerGroupList().mapStream(res => res.customerGroups.items);\n  }\n  cancel() {\n    this.resolveWith();\n  }\n  add() {\n    this.resolveWith(this.selectedGroupIds);\n  }\n  static {\n    this.ɵfac = function SelectCustomerGroupDialogComponent_Factory(t) {\n      return new (t || SelectCustomerGroupDialogComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: SelectCustomerGroupDialogComponent,\n      selectors: [[\"vdr-select-customer-group-dialog\"]],\n      decls: 6,\n      vars: 8,\n      consts: [[\"vdrDialogTitle\", \"\"], [\"appendTo\", \"body\", \"bindValue\", \"id\", 3, \"ngModelChange\", \"items\", \"addTag\", \"multiple\", \"ngModel\", \"clearable\", \"searchable\"], [\"ng-label-tmp\", \"\"], [\"ng-option-tmp\", \"\"], [\"vdrDialogButtons\", \"\"], [\"aria-hidden\", \"true\", 1, \"ng-value-icon\", \"left\", 3, \"click\"], [3, \"colorFrom\"], [\"type\", \"button\", 1, \"btn\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\", \"disabled\"]],\n      template: function SelectCustomerGroupDialogComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, SelectCustomerGroupDialogComponent_ng_template_0_Template, 2, 3, \"ng-template\", 0);\n          i0.ɵɵelementStart(1, \"ng-select\", 1);\n          i0.ɵɵpipe(2, \"async\");\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function SelectCustomerGroupDialogComponent_Template_ng_select_ngModelChange_1_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.selectedGroupIds, $event) || (ctx.selectedGroupIds = $event);\n            return $event;\n          });\n          i0.ɵɵtemplate(3, SelectCustomerGroupDialogComponent_ng_template_3_Template, 4, 2, \"ng-template\", 2)(4, SelectCustomerGroupDialogComponent_ng_template_4_Template, 2, 2, \"ng-template\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(5, SelectCustomerGroupDialogComponent_ng_template_5_Template, 6, 10, \"ng-template\", 4);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"items\", i0.ɵɵpipeBind1(2, 6, ctx.groups$))(\"addTag\", false)(\"multiple\", true);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.selectedGroupIds);\n          i0.ɵɵproperty(\"clearable\", true)(\"searchable\", false);\n        }\n      },\n      dependencies: [i1$1.NgControlStatus, i1$1.NgModel, i3$2.NgSelectComponent, i3$2.NgOptionTemplateDirective, i3$2.NgLabelTemplateDirective, i1.ChipComponent, i1.DialogButtonsDirective, i1.DialogTitleDirective, i3$1.AsyncPipe, i4.TranslatePipe],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectCustomerGroupDialogComponent, [{\n    type: Component,\n    args: [{\n      selector: 'vdr-select-customer-group-dialog',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'customer.add-customer-to-group' | translate }}\\r\\n</ng-template>\\r\\n\\r\\n<ng-select\\r\\n    [items]=\\\"groups$ | async\\\"\\r\\n    appendTo=\\\"body\\\"\\r\\n    [addTag]=\\\"false\\\"\\r\\n    [multiple]=\\\"true\\\"\\r\\n    bindValue=\\\"id\\\"\\r\\n    [(ngModel)]=\\\"selectedGroupIds\\\"\\r\\n    [clearable]=\\\"true\\\"\\r\\n    [searchable]=\\\"false\\\"\\r\\n>\\r\\n    <ng-template ng-label-tmp let-item=\\\"item\\\" let-clear=\\\"clear\\\">\\r\\n        <span aria-hidden=\\\"true\\\" class=\\\"ng-value-icon left\\\" (click)=\\\"clear(item)\\\"> \\u00D7 </span>\\r\\n        <vdr-chip [colorFrom]=\\\"item.id\\\">{{ item.name }}</vdr-chip>\\r\\n    </ng-template>\\r\\n    <ng-template ng-option-tmp let-item=\\\"item\\\">\\r\\n        <vdr-chip [colorFrom]=\\\"item.id\\\">{{ item.name }}</vdr-chip>\\r\\n    </ng-template>\\r\\n</ng-select>\\r\\n\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"add()\\\" [disabled]=\\\"!selectedGroupIds.length\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'customer.add-customer-to-groups-with-count' | translate: {count: selectedGroupIds.length} }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\"\n    }]\n  }], () => [{\n    type: i1.DataService\n  }], null);\n})();\nclass CustomerHistoryEntryHostComponent {\n  constructor(historyEntryComponentService) {\n    this.historyEntryComponentService = historyEntryComponentService;\n    this.expandClick = new EventEmitter();\n  }\n  ngOnInit() {\n    const componentType = this.historyEntryComponentService.getComponent(this.entry.type);\n    const componentRef = this.portalRef.createComponent(componentType);\n    componentRef.instance.entry = this.entry;\n    componentRef.instance.customer = this.customer;\n    this.instance = componentRef.instance;\n    this.componentRef = componentRef;\n  }\n  ngOnDestroy() {\n    this.componentRef?.destroy();\n  }\n  static {\n    this.ɵfac = function CustomerHistoryEntryHostComponent_Factory(t) {\n      return new (t || CustomerHistoryEntryHostComponent)(i0.ɵɵdirectiveInject(i1.HistoryEntryComponentService));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CustomerHistoryEntryHostComponent,\n      selectors: [[\"vdr-customer-history-entry-host\"]],\n      viewQuery: function CustomerHistoryEntryHostComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c3, 7, ViewContainerRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.portalRef = _t.first);\n        }\n      },\n      inputs: {\n        entry: \"entry\",\n        customer: \"customer\",\n        expanded: \"expanded\"\n      },\n      outputs: {\n        expandClick: \"expandClick\"\n      },\n      exportAs: [\"historyEntry\"],\n      decls: 3,\n      vars: 6,\n      consts: [[\"portal\", \"\"], [3, \"expandClick\", \"displayType\", \"iconShape\", \"createdAt\", \"name\", \"featured\", \"collapsed\"]],\n      template: function CustomerHistoryEntryHostComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"vdr-timeline-entry\", 1);\n          i0.ɵɵlistener(\"expandClick\", function CustomerHistoryEntryHostComponent_Template_vdr_timeline_entry_expandClick_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.expandClick.emit());\n          });\n          i0.ɵɵelement(1, \"div\", null, 0);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"displayType\", ctx.instance.getDisplayType(ctx.entry))(\"iconShape\", ctx.instance.getIconShape && ctx.instance.getIconShape(ctx.entry))(\"createdAt\", ctx.entry.createdAt)(\"name\", ctx.instance.getName && ctx.instance.getName(ctx.entry))(\"featured\", ctx.instance.isFeatured(ctx.entry))(\"collapsed\", !ctx.expanded && !ctx.instance.isFeatured(ctx.entry));\n        }\n      },\n      dependencies: [i1.TimelineEntryComponent],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomerHistoryEntryHostComponent, [{\n    type: Component,\n    args: [{\n      selector: 'vdr-customer-history-entry-host',\n      template: ` <vdr-timeline-entry\n        [displayType]=\"instance.getDisplayType(entry)\"\n        [iconShape]=\"instance.getIconShape && instance.getIconShape(entry)\"\n        [createdAt]=\"entry.createdAt\"\n        [name]=\"instance.getName && instance.getName(entry)\"\n        [featured]=\"instance.isFeatured(entry)\"\n        [collapsed]=\"!expanded && !instance.isFeatured(entry)\"\n        (expandClick)=\"expandClick.emit()\"\n    >\n        <div #portal></div>\n    </vdr-timeline-entry>`,\n      exportAs: 'historyEntry'\n    }]\n  }], () => [{\n    type: i1.HistoryEntryComponentService\n  }], {\n    entry: [{\n      type: Input\n    }],\n    customer: [{\n      type: Input\n    }],\n    expanded: [{\n      type: Input\n    }],\n    expandClick: [{\n      type: Output\n    }],\n    portalRef: [{\n      type: ViewChild,\n      args: ['portal', {\n        static: true,\n        read: ViewContainerRef\n      }]\n    }]\n  });\n})();\nclass CustomerHistoryComponent {\n  constructor(historyEntryComponentService) {\n    this.historyEntryComponentService = historyEntryComponentService;\n    this.addNote = new EventEmitter();\n    this.updateNote = new EventEmitter();\n    this.deleteNote = new EventEmitter();\n    this.note = '';\n    this.expanded = false;\n    this.type = HistoryEntryType;\n  }\n  hasCustomComponent(type) {\n    return !!this.historyEntryComponentService.getComponent(type);\n  }\n  getDisplayType(entry) {\n    switch (entry.type) {\n      case HistoryEntryType.CUSTOMER_VERIFIED:\n      case HistoryEntryType.CUSTOMER_EMAIL_UPDATE_VERIFIED:\n      case HistoryEntryType.CUSTOMER_PASSWORD_RESET_VERIFIED:\n        return 'success';\n      case HistoryEntryType.CUSTOMER_REGISTERED:\n        return 'muted';\n      case HistoryEntryType.CUSTOMER_REMOVED_FROM_GROUP:\n        return 'error';\n      default:\n        return 'default';\n    }\n  }\n  getTimelineIcon(entry) {\n    switch (entry.type) {\n      case HistoryEntryType.CUSTOMER_REGISTERED:\n        return 'user';\n      case HistoryEntryType.CUSTOMER_VERIFIED:\n        return ['assign-user', 'is-solid'];\n      case HistoryEntryType.CUSTOMER_NOTE:\n        return 'note';\n      case HistoryEntryType.CUSTOMER_ADDED_TO_GROUP:\n      case HistoryEntryType.CUSTOMER_REMOVED_FROM_GROUP:\n        return 'users';\n    }\n  }\n  isFeatured(entry) {\n    switch (entry.type) {\n      case HistoryEntryType.CUSTOMER_REGISTERED:\n      case HistoryEntryType.CUSTOMER_VERIFIED:\n        return true;\n      default:\n        return false;\n    }\n  }\n  getName(entry) {\n    const {\n      administrator\n    } = entry;\n    if (administrator) {\n      return `${administrator.firstName} ${administrator.lastName}`;\n    } else {\n      return `${this.customer.firstName} ${this.customer.lastName}`;\n    }\n  }\n  addNoteToCustomer() {\n    this.addNote.emit({\n      note: this.note\n    });\n    this.note = '';\n  }\n  static {\n    this.ɵfac = function CustomerHistoryComponent_Factory(t) {\n      return new (t || CustomerHistoryComponent)(i0.ɵɵdirectiveInject(i1.HistoryEntryComponentService));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CustomerHistoryComponent,\n      selectors: [[\"vdr-customer-history\"]],\n      inputs: {\n        customer: \"customer\",\n        history: \"history\"\n      },\n      outputs: {\n        addNote: \"addNote\",\n        updateNote: \"updateNote\",\n        deleteNote: \"deleteNote\"\n      },\n      decls: 4,\n      vars: 3,\n      consts: [[\"defaultComponents\", \"\"], [\"namedStrategy\", \"\"], [1, \"entry-list\"], [\"iconShape\", \"note\", \"displayType\", \"muted\", 3, \"featured\", \"isFirst\", 4, \"vdrIfPermissions\"], [4, \"ngFor\", \"ngForOf\"], [3, \"isLast\"], [\"iconShape\", \"note\", \"displayType\", \"muted\", 3, \"featured\", \"isFirst\"], [1, \"note-entry\"], [\"name\", \"note\", 1, \"note\", 3, \"ngModelChange\", \"ngModel\"], [1, \"btn\", \"btn-secondary\", 3, \"click\", \"disabled\"], [3, \"customer\", \"entry\", \"expanded\", \"expandClick\", 4, \"ngIf\", \"ngIfElse\"], [3, \"expandClick\", \"customer\", \"entry\", \"expanded\"], [3, \"displayType\", \"iconShape\", \"createdAt\", \"name\", \"featured\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [1, \"title\"], [4, \"ngIf\", \"ngIfElse\"], [1, \"flex\"], [3, \"value\"], [1, \"address-string\"], [3, \"label\"], [1, \"note-text\"], [1, \"flex-spacer\"], [\"vdrDropdownTrigger\", \"\", 1, \"button-small\", \"ml-1\"], [\"shape\", \"ellipsis-vertical\", \"size\", \"12\"], [\"vdrPosition\", \"bottom-right\"], [\"vdrDropdownItem\", \"\", 3, \"click\", \"disabled\"], [\"shape\", \"edit\"], [1, \"dropdown-divider\"], [\"shape\", \"trash\", 1, \"is-danger\"], [4, \"ngIf\"]],\n      template: function CustomerHistoryComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 2);\n          i0.ɵɵtemplate(1, CustomerHistoryComponent_vdr_timeline_entry_1_Template, 6, 7, \"vdr-timeline-entry\", 3)(2, CustomerHistoryComponent_ng_container_2_Template, 4, 2, \"ng-container\", 4);\n          i0.ɵɵelement(3, \"vdr-timeline-entry\", 5);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"vdrIfPermissions\", \"UpdateCustomer\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.history);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"isLast\", true);\n        }\n      },\n      dependencies: [i3.ClrIconCustomTag, i3$1.NgForOf, i3$1.NgIf, i3$1.NgSwitch, i3$1.NgSwitchCase, i3$1.NgSwitchDefault, i1$1.DefaultValueAccessor, i1$1.NgControlStatus, i1$1.NgModel, i1.FormFieldControlDirective, i1.DropdownComponent, i1.DropdownMenuComponent, i1.DropdownTriggerDirective, i1.DropdownItemDirective, i1.LabeledDataComponent, i1.ObjectTreeComponent, i1.IfPermissionsDirective, i1.TimelineEntryComponent, i1.HistoryEntryDetailComponent, CustomerHistoryEntryHostComponent, i4.TranslatePipe, i1.HasPermissionPipe],\n      styles: [\".entry-list[_ngcontent-%COMP%]{margin:24px 12px 24px 24px}.note-entry[_ngcontent-%COMP%]{display:flex;align-items:center}.note-entry[_ngcontent-%COMP%]   .note[_ngcontent-%COMP%]{flex:1}.note-entry[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:0}textarea.note[_ngcontent-%COMP%]{flex:1;height:36px;border-radius:3px;margin-inline-end:6px}.note-text[_ngcontent-%COMP%]{color:var(--color-text-100);white-space:pre-wrap}.address-string[_ngcontent-%COMP%]{font-size:smaller;color:var(--color-text-200)}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomerHistoryComponent, [{\n    type: Component,\n    args: [{\n      selector: 'vdr-customer-history',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div class=\\\"entry-list\\\">\\r\\n    <vdr-timeline-entry iconShape=\\\"note\\\" displayType=\\\"muted\\\" [featured]=\\\"true\\\" *vdrIfPermissions=\\\"'UpdateCustomer'\\\"\\r\\n                        [isFirst]=\\\"true\\\">\\r\\n        <div class=\\\"note-entry\\\">\\r\\n            <textarea [(ngModel)]=\\\"note\\\" name=\\\"note\\\" class=\\\"note\\\"></textarea>\\r\\n            <button class=\\\"btn btn-secondary\\\" [disabled]=\\\"!note\\\" (click)=\\\"addNoteToCustomer()\\\">\\r\\n                {{ 'order.add-note' | translate }}\\r\\n            </button>\\r\\n        </div>\\r\\n    </vdr-timeline-entry>\\r\\n    <ng-container *ngFor=\\\"let entry of history\\\">\\r\\n        <vdr-customer-history-entry-host\\r\\n            *ngIf=\\\"hasCustomComponent(entry.type); else defaultComponents\\\"\\r\\n            [customer]=\\\"customer\\\"\\r\\n            [entry]=\\\"entry\\\"\\r\\n            [expanded]=\\\"expanded\\\"\\r\\n            (expandClick)=\\\"expanded = !expanded\\\"\\r\\n        ></vdr-customer-history-entry-host>\\r\\n        <ng-template #defaultComponents>\\r\\n            <vdr-timeline-entry\\r\\n                [displayType]=\\\"getDisplayType(entry)\\\"\\r\\n                [iconShape]=\\\"getTimelineIcon(entry)\\\"\\r\\n                [createdAt]=\\\"entry.createdAt\\\"\\r\\n                [name]=\\\"getName(entry)\\\"\\r\\n                [featured]=\\\"isFeatured(entry)\\\"\\r\\n            >\\r\\n                <ng-container [ngSwitch]=\\\"entry.type\\\">\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_REGISTERED\\\">\\r\\n                        <div class=\\\"title\\\">\\r\\n                            {{ 'customer.history-customer-registered' | translate }}\\r\\n                        </div>\\r\\n                        <ng-container *ngIf=\\\"entry.data.strategy === 'native'; else namedStrategy\\\">\\r\\n                            {{ 'customer.history-using-native-auth-strategy' | translate }}\\r\\n                        </ng-container>\\r\\n                        <ng-template #namedStrategy>\\r\\n                            {{\\r\\n                                'customer.history-using-external-auth-strategy'\\r\\n                                    | translate: { strategy: entry.data.strategy }\\r\\n                            }}\\r\\n                        </ng-template>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_VERIFIED\\\">\\r\\n                        <div class=\\\"title\\\">\\r\\n                            {{ 'customer.history-customer-verified' | translate }}\\r\\n                        </div>\\r\\n                        <ng-container *ngIf=\\\"entry.data.strategy === 'native'; else namedStrategy\\\">\\r\\n                            {{ 'customer.history-using-native-auth-strategy' | translate }}\\r\\n                        </ng-container>\\r\\n                        <ng-template #namedStrategy>\\r\\n                            {{\\r\\n                                'customer.history-using-external-auth-strategy'\\r\\n                                    | translate: { strategy: entry.data.strategy }\\r\\n                            }}\\r\\n                        </ng-template>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_DETAIL_UPDATED\\\">\\r\\n                        <div class=\\\"flex\\\">\\r\\n                            {{ 'customer.history-customer-detail-updated' | translate }}\\r\\n                            <vdr-history-entry-detail>\\r\\n                                <vdr-object-tree [value]=\\\"entry.data.input\\\"></vdr-object-tree>\\r\\n                            </vdr-history-entry-detail>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_ADDED_TO_GROUP\\\">\\r\\n                        {{\\r\\n                            'customer.history-customer-added-to-group'\\r\\n                                | translate: { groupName: entry.data.groupName }\\r\\n                        }}\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_REMOVED_FROM_GROUP\\\">\\r\\n                        {{\\r\\n                            'customer.history-customer-removed-from-group'\\r\\n                                | translate: { groupName: entry.data.groupName }\\r\\n                        }}\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_ADDRESS_CREATED\\\">\\r\\n                        {{ 'customer.history-customer-address-created' | translate }}\\r\\n                        <div class=\\\"flex\\\">\\r\\n                            <div class=\\\"address-string\\\">{{ entry.data.address }}</div>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_ADDRESS_UPDATED\\\">\\r\\n                        {{ 'customer.history-customer-address-updated' | translate }}\\r\\n                        <div class=\\\"flex\\\">\\r\\n                            <div class=\\\"address-string\\\">{{ entry.data.address }}</div>\\r\\n                            <vdr-history-entry-detail>\\r\\n                                <vdr-object-tree [value]=\\\"entry.data.input\\\"></vdr-object-tree>\\r\\n                            </vdr-history-entry-detail>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_ADDRESS_DELETED\\\">\\r\\n                        {{ 'customer.history-customer-address-deleted' | translate }}\\r\\n                        <div class=\\\"address-string\\\">{{ entry.data.address }}</div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_PASSWORD_UPDATED\\\">\\r\\n                        {{ 'customer.history-customer-password-updated' | translate }}\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_PASSWORD_RESET_REQUESTED\\\">\\r\\n                        {{ 'customer.history-customer-password-reset-requested' | translate }}\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_PASSWORD_RESET_VERIFIED\\\">\\r\\n                        {{ 'customer.history-customer-password-reset-verified' | translate }}\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_EMAIL_UPDATE_REQUESTED\\\">\\r\\n                        <div class=\\\"flex\\\">\\r\\n                            {{ 'customer.history-customer-email-update-requested' | translate }}\\r\\n                            <vdr-history-entry-detail>\\r\\n                                <vdr-labeled-data [label]=\\\"'customer.old-email-address' | translate\\\">{{\\r\\n                                        entry.data.oldEmailAddress\\r\\n                                    }}\\r\\n                                </vdr-labeled-data>\\r\\n                                <vdr-labeled-data [label]=\\\"'customer.new-email-address' | translate\\\">{{\\r\\n                                        entry.data.newEmailAddress\\r\\n                                    }}\\r\\n                                </vdr-labeled-data>\\r\\n                            </vdr-history-entry-detail>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_EMAIL_UPDATE_VERIFIED\\\">\\r\\n                        <div class=\\\"flex\\\">\\r\\n                            {{ 'customer.history-customer-email-update-verified' | translate }}\\r\\n                            <vdr-history-entry-detail>\\r\\n                                <vdr-labeled-data [label]=\\\"'customer.old-email-address' | translate\\\">{{\\r\\n                                        entry.data.oldEmailAddress\\r\\n                                    }}\\r\\n                                </vdr-labeled-data>\\r\\n                                <vdr-labeled-data [label]=\\\"'customer.new-email-address' | translate\\\">{{\\r\\n                                        entry.data.newEmailAddress\\r\\n                                    }}\\r\\n                                </vdr-labeled-data>\\r\\n                            </vdr-history-entry-detail>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_NOTE\\\">\\r\\n                        <div class=\\\"flex\\\">\\r\\n                            <div class=\\\"note-text\\\">\\r\\n                                {{ entry.data.note }}\\r\\n                            </div>\\r\\n                            <div class=\\\"flex-spacer\\\"></div>\\r\\n                            <vdr-dropdown>\\r\\n                                <button class=\\\"button-small ml-1\\\" vdrDropdownTrigger>\\r\\n                                    <clr-icon shape=\\\"ellipsis-vertical\\\" size=\\\"12\\\"></clr-icon>\\r\\n                                </button>\\r\\n                                <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                                    <button\\r\\n                                        vdrDropdownItem\\r\\n                                        (click)=\\\"updateNote.emit(entry)\\\"\\r\\n                                        [disabled]=\\\"!('UpdateCustomer' | hasPermission)\\\"\\r\\n                                    >\\r\\n                                        <clr-icon shape=\\\"edit\\\"></clr-icon>\\r\\n                                        {{ 'common.edit' | translate }}\\r\\n                                    </button>\\r\\n                                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                                    <button\\r\\n                                        vdrDropdownItem\\r\\n                                        (click)=\\\"deleteNote.emit(entry)\\\"\\r\\n                                        [disabled]=\\\"!('UpdateCustomer' | hasPermission)\\\"\\r\\n                                    >\\r\\n                                        <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                                        {{ 'common.delete' | translate }}\\r\\n                                    </button>\\r\\n                                </vdr-dropdown-menu>\\r\\n                            </vdr-dropdown>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchDefault>\\r\\n                        <div class=\\\"title\\\">\\r\\n                            {{ entry.type | translate }}\\r\\n                        </div>\\r\\n                        <vdr-history-entry-detail *ngIf=\\\"entry.data\\\">\\r\\n                            <vdr-object-tree [value]=\\\"entry.data\\\"></vdr-object-tree>\\r\\n                        </vdr-history-entry-detail>\\r\\n                    </ng-container>\\r\\n                </ng-container>\\r\\n            </vdr-timeline-entry>\\r\\n        </ng-template>\\r\\n    </ng-container>\\r\\n    <vdr-timeline-entry [isLast]=\\\"true\\\"></vdr-timeline-entry>\\r\\n</div>\\r\\n\",\n      styles: [\".entry-list{margin:24px 12px 24px 24px}.note-entry{display:flex;align-items:center}.note-entry .note{flex:1}.note-entry button{margin:0}textarea.note{flex:1;height:36px;border-radius:3px;margin-inline-end:6px}.note-text{color:var(--color-text-100);white-space:pre-wrap}.address-string{font-size:smaller;color:var(--color-text-200)}\\n\"]\n    }]\n  }], () => [{\n    type: i1.HistoryEntryComponentService\n  }], {\n    customer: [{\n      type: Input\n    }],\n    history: [{\n      type: Input\n    }],\n    addNote: [{\n      type: Output\n    }],\n    updateNote: [{\n      type: Output\n    }],\n    deleteNote: [{\n      type: Output\n    }]\n  });\n})();\nconst CUSTOMER_DETAIL_QUERY = gql`\n    query CustomerDetailQuery($id: ID!, $orderListOptions: OrderListOptions) {\n        customer(id: $id) {\n            ...Customer\n            groups {\n                id\n                name\n            }\n            orders(options: $orderListOptions) {\n                items {\n                    id\n                    code\n                    type\n                    state\n                    total\n                    totalWithTax\n                    currencyCode\n                    createdAt\n                    updatedAt\n                    orderPlacedAt\n                }\n                totalItems\n            }\n        }\n    }\n    ${CUSTOMER_FRAGMENT}\n`;\nclass CustomerDetailComponent extends TypedBaseDetailComponent {\n  constructor(changeDetector, formBuilder, dataService, modalService, notificationService) {\n    super();\n    this.changeDetector = changeDetector;\n    this.formBuilder = formBuilder;\n    this.dataService = dataService;\n    this.modalService = modalService;\n    this.notificationService = notificationService;\n    this.customFields = this.getCustomFieldConfig('Customer');\n    this.addressCustomFields = this.getCustomFieldConfig('Address');\n    this.detailForm = this.formBuilder.group({\n      customer: this.formBuilder.group({\n        title: '',\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        phoneNumber: '',\n        emailAddress: ['', [Validators.required, Validators.email]],\n        password: '',\n        customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields))\n      }),\n      addresses: new UntypedFormArray([])\n    });\n    this.fetchHistory = new Subject();\n    this.addressesToDeleteIds = new Set();\n    this.addressDefaultsUpdated = false;\n    this.ordersPerPage = 10;\n    this.currentOrdersPage = 1;\n    this.orderListUpdates$ = new Subject();\n  }\n  ngOnInit() {\n    this.init();\n    this.availableCountries$ = this.dataService.settings.getAvailableCountries().mapSingle(result => result.countries.items).pipe(shareReplay(1));\n    const customerWithUpdates$ = this.entity$.pipe(merge(this.orderListUpdates$));\n    this.orders$ = customerWithUpdates$.pipe(map(customer => customer.orders.items));\n    this.ordersCount$ = this.entity$.pipe(map(customer => customer.orders.totalItems));\n    this.history$ = this.fetchHistory.pipe(startWith(null), switchMap(() => this.dataService.customer.getCustomerHistory(this.id, {\n      sort: {\n        createdAt: SortOrder.DESC\n      }\n    }).mapStream(data => data.customer?.history.items)));\n  }\n  ngOnDestroy() {\n    this.destroy();\n    this.orderListUpdates$.complete();\n  }\n  getAddressFormControls() {\n    const formArray = this.detailForm.get(['addresses']);\n    return formArray.controls;\n  }\n  setDefaultBillingAddressId(id) {\n    this.defaultBillingAddressId = id;\n    this.addressDefaultsUpdated = true;\n  }\n  setDefaultShippingAddressId(id) {\n    this.defaultShippingAddressId = id;\n    this.addressDefaultsUpdated = true;\n  }\n  toggleDeleteAddress(id) {\n    if (this.addressesToDeleteIds.has(id)) {\n      this.addressesToDeleteIds.delete(id);\n    } else {\n      this.addressesToDeleteIds.add(id);\n    }\n  }\n  addAddress() {\n    const addressFormArray = this.detailForm.get('addresses');\n    const newAddress = this.formBuilder.group({\n      fullName: '',\n      company: '',\n      streetLine1: ['', Validators.required],\n      streetLine2: '',\n      city: '',\n      province: '',\n      postalCode: '',\n      countryCode: ['', Validators.required],\n      phoneNumber: '',\n      defaultShippingAddress: false,\n      defaultBillingAddress: false,\n      customFields: this.formBuilder.group(this.addressCustomFields.reduce((hash, field) => ({\n        ...hash,\n        [field.name]: ''\n      }), {}))\n    });\n    addressFormArray.push(newAddress);\n  }\n  setOrderItemsPerPage(itemsPerPage) {\n    this.ordersPerPage = +itemsPerPage;\n    this.fetchOrdersList();\n  }\n  setOrderCurrentPage(page) {\n    this.currentOrdersPage = +page;\n    this.fetchOrdersList();\n  }\n  create() {\n    const customerForm = this.detailForm.get('customer');\n    if (!customerForm) {\n      return;\n    }\n    const {\n      title,\n      emailAddress,\n      firstName,\n      lastName,\n      phoneNumber,\n      password\n    } = customerForm.value;\n    const customFields = customerForm.get('customFields')?.value;\n    if (!emailAddress || !firstName || !lastName) {\n      return;\n    }\n    const customer = {\n      title,\n      emailAddress,\n      firstName,\n      lastName,\n      phoneNumber,\n      customFields\n    };\n    this.dataService.customer.createCustomer(customer, password).subscribe(({\n      createCustomer\n    }) => {\n      switch (createCustomer.__typename) {\n        case 'Customer':\n          this.notificationService.success(marker('common.notify-create-success'), {\n            entity: 'Customer'\n          });\n          if (createCustomer.emailAddress && !password) {\n            this.notificationService.notify({\n              message: marker('customer.email-verification-sent'),\n              translationVars: {\n                emailAddress\n              },\n              type: 'info',\n              duration: 10000\n            });\n          }\n          this.detailForm.markAsPristine();\n          this.addressDefaultsUpdated = false;\n          this.changeDetector.markForCheck();\n          this.router.navigate(['../', createCustomer.id], {\n            relativeTo: this.route\n          });\n          break;\n        case 'EmailAddressConflictError':\n          this.notificationService.error(createCustomer.message);\n      }\n    });\n  }\n  save() {\n    this.entity$.pipe(take(1), mergeMap(({\n      id\n    }) => {\n      const saveOperations = [];\n      const customerForm = this.detailForm.get('customer');\n      if (customerForm && customerForm.dirty) {\n        const formValue = customerForm.value;\n        const customFields = customerForm.get('customFields')?.value;\n        const customer = {\n          id,\n          title: formValue.title,\n          emailAddress: formValue.emailAddress,\n          firstName: formValue.firstName,\n          lastName: formValue.lastName,\n          phoneNumber: formValue.phoneNumber,\n          customFields\n        };\n        saveOperations.push(this.dataService.customer.updateCustomer(customer).pipe(map(res => res.updateCustomer)));\n      }\n      const addressFormArray = this.detailForm.get('addresses');\n      if (addressFormArray && addressFormArray.dirty || this.addressDefaultsUpdated) {\n        for (const addressControl of addressFormArray.controls) {\n          if (addressControl.dirty || this.addressDefaultsUpdated) {\n            const address = addressControl.value;\n            const input = {\n              fullName: address.fullName,\n              company: address.company,\n              streetLine1: address.streetLine1,\n              streetLine2: address.streetLine2,\n              city: address.city,\n              province: address.province,\n              postalCode: address.postalCode,\n              countryCode: address.countryCode,\n              phoneNumber: address.phoneNumber,\n              defaultShippingAddress: this.defaultShippingAddressId === address.id,\n              defaultBillingAddress: this.defaultBillingAddressId === address.id,\n              customFields: address.customFields\n            };\n            if (!address.id) {\n              saveOperations.push(this.dataService.customer.createCustomerAddress(id, input).pipe(map(res => res.createCustomerAddress)));\n            } else {\n              if (this.addressesToDeleteIds.has(address.id)) {\n                saveOperations.push(this.dataService.customer.deleteCustomerAddress(address.id).pipe(map(res => res.deleteCustomerAddress)));\n              } else {\n                saveOperations.push(this.dataService.customer.updateCustomerAddress({\n                  ...input,\n                  id: address.id\n                }).pipe(map(res => res.updateCustomerAddress)));\n              }\n            }\n          }\n        }\n      }\n      return forkJoin(saveOperations);\n    })).subscribe(data => {\n      let notified = false;\n      for (const result of data) {\n        switch (result.__typename) {\n          case 'Customer':\n          case 'Address':\n          case 'Success':\n            if (!notified) {\n              this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'Customer'\n              });\n              notified = true;\n              this.detailForm.markAsPristine();\n              this.addressDefaultsUpdated = false;\n              this.changeDetector.markForCheck();\n              this.fetchHistory.next();\n              this.refreshCustomer().subscribe();\n            }\n            break;\n          case 'EmailAddressConflictError':\n            this.notificationService.error(result.message);\n            break;\n        }\n      }\n    }, err => {\n      this.notificationService.error(marker('common.notify-update-error'), {\n        entity: 'Customer'\n      });\n    });\n  }\n  addToGroup() {\n    this.modalService.fromComponent(SelectCustomerGroupDialogComponent, {\n      size: 'md'\n    }).pipe(switchMap(groupIds => groupIds ? from(groupIds) : EMPTY), concatMap(groupId => this.dataService.customer.addCustomersToGroup(groupId, [this.id]))).subscribe({\n      next: res => {\n        this.notificationService.success(marker(`customer.add-customers-to-group-success`), {\n          customerCount: 1,\n          groupName: res.addCustomersToGroup.name\n        });\n      },\n      complete: () => {\n        this.refreshCustomer().subscribe();\n        this.fetchHistory.next();\n      }\n    });\n  }\n  removeFromGroup(group) {\n    this.modalService.dialog({\n      title: marker('customer.confirm-remove-customer-from-group'),\n      buttons: [{\n        type: 'secondary',\n        label: marker('common.cancel')\n      }, {\n        type: 'danger',\n        label: marker('common.delete'),\n        returnValue: true\n      }]\n    }).pipe(switchMap(response => response ? this.dataService.customer.removeCustomersFromGroup(group.id, [this.id]) : EMPTY), switchMap(() => this.refreshCustomer())).subscribe(result => {\n      this.notificationService.success(marker(`customer.remove-customers-from-group-success`), {\n        customerCount: 1,\n        groupName: group.name\n      });\n      this.fetchHistory.next();\n    });\n  }\n  addNoteToCustomer({\n    note\n  }) {\n    this.dataService.customer.addNoteToCustomer(this.id, note).subscribe(() => {\n      this.fetchHistory.next();\n      this.notificationService.success(marker('common.notify-create-success'), {\n        entity: 'Note'\n      });\n    });\n  }\n  updateNote(entry) {\n    this.modalService.fromComponent(EditNoteDialogComponent, {\n      closable: true,\n      locals: {\n        displayPrivacyControls: false,\n        note: entry.data.note\n      }\n    }).pipe(switchMap(result => {\n      if (result) {\n        return this.dataService.customer.updateCustomerNote({\n          noteId: entry.id,\n          note: result.note\n        });\n      } else {\n        return EMPTY;\n      }\n    })).subscribe(result => {\n      this.fetchHistory.next();\n      this.notificationService.success(marker('common.notify-update-success'), {\n        entity: 'Note'\n      });\n    });\n  }\n  deleteNote(entry) {\n    return this.modalService.dialog({\n      title: marker('common.confirm-delete-note'),\n      body: entry.data.note,\n      buttons: [{\n        type: 'secondary',\n        label: marker('common.cancel')\n      }, {\n        type: 'danger',\n        label: marker('common.delete'),\n        returnValue: true\n      }]\n    }).pipe(switchMap(res => res ? this.dataService.customer.deleteCustomerNote(entry.id) : EMPTY)).subscribe(() => {\n      this.fetchHistory.next();\n      this.notificationService.success(marker('common.notify-delete-success'), {\n        entity: 'Note'\n      });\n    });\n  }\n  setFormValues(entity) {\n    const customerGroup = this.detailForm.get('customer');\n    if (customerGroup) {\n      customerGroup.patchValue({\n        title: entity.title ?? null,\n        firstName: entity.firstName,\n        lastName: entity.lastName,\n        phoneNumber: entity.phoneNumber ?? null,\n        emailAddress: entity.emailAddress,\n        password: '',\n        customFields: {}\n      });\n    }\n    if (entity.addresses) {\n      const addressesArray = new UntypedFormArray([]);\n      for (const address of entity.addresses) {\n        const {\n          customFields,\n          ...rest\n        } = address;\n        const addressGroup = this.formBuilder.group({\n          ...rest,\n          countryCode: address.country.code,\n          customFields: this.formBuilder.group(this.addressCustomFields.reduce((hash, field) => ({\n            ...hash,\n            [field.name]: address['customFields'][field.name]\n          }), {}))\n        });\n        addressesArray.push(addressGroup);\n        if (address.defaultShippingAddress) {\n          this.defaultShippingAddressId = address.id;\n        }\n        if (address.defaultBillingAddress) {\n          this.defaultBillingAddressId = address.id;\n        }\n      }\n      this.detailForm.setControl('addresses', addressesArray);\n    }\n    if (this.customFields.length) {\n      this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customer', 'customFields']), entity);\n    }\n    this.changeDetector.markForCheck();\n  }\n  /**\n   * Refetch the customer with the current order list settings.\n   */\n  fetchOrdersList() {\n    this.dataService.query(CustomerDetailQueryDocument, {\n      id: this.id,\n      orderListOptions: {\n        take: this.ordersPerPage,\n        skip: (this.currentOrdersPage - 1) * this.ordersPerPage,\n        sort: {\n          orderPlacedAt: SortOrder.DESC\n        }\n      }\n    }).single$.pipe(map(data => data.customer), filter(notNullOrUndefined)).subscribe(result => this.orderListUpdates$.next(result));\n  }\n  refreshCustomer() {\n    return this.dataService.query(CustomerDetailQueryDocument, {\n      id: this.id,\n      orderListOptions: {\n        take: 0\n      }\n    }).single$;\n  }\n  static {\n    this.ɵfac = function CustomerDetailComponent_Factory(t) {\n      return new (t || CustomerDetailComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.FormBuilder), i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i1.ModalService), i0.ɵɵdirectiveInject(i1.NotificationService));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CustomerDetailComponent,\n      selectors: [[\"vdr-customer-detail\"]],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 50,\n      vars: 53,\n      consts: [[\"updateButton\", \"\"], [\"noGroups\", \"\"], [\"locationId\", \"customer-detail\"], [\"class\", \"btn btn-primary\", 3, \"disabled\", \"click\", 4, \"ngIf\", \"ngIfElse\"], [4, \"ngIf\"], [3, \"title\", 4, \"ngIf\"], [3, \"entity\", 4, \"ngIf\"], [1, \"form\", 3, \"formGroup\"], [1, \"form-grid\"], [\"for\", \"title\", 3, \"label\", \"readOnlyToggle\"], [\"id\", \"title\", \"type\", \"text\", \"formControlName\", \"title\"], [\"for\", \"firstName\", 3, \"label\", \"readOnlyToggle\"], [\"id\", \"firstName\", \"type\", \"text\", \"formControlName\", \"firstName\"], [\"for\", \"lastName\", 3, \"label\", \"readOnlyToggle\"], [\"id\", \"lastName\", \"type\", \"text\", \"formControlName\", \"lastName\"], [\"for\", \"emailAddress\", 3, \"label\", \"readOnlyToggle\"], [\"id\", \"emailAddress\", \"type\", \"text\", \"formControlName\", \"emailAddress\"], [\"for\", \"phoneNumber\", 3, \"label\", \"readOnlyToggle\"], [\"id\", \"phoneNumber\", \"type\", \"text\", \"formControlName\", \"phoneNumber\"], [\"for\", \"password\", 3, \"label\", 4, \"ngIf\"], [\"formGroupName\", \"customFields\", 3, \"title\", 4, \"ngIf\"], [\"locationId\", \"customer-detail\", 3, \"entity$\", \"detailForm\"], [1, \"btn\", \"btn-primary\", 3, \"click\", \"disabled\"], [\"class\", \"btn btn-primary\", 3, \"disabled\", \"click\", 4, \"vdrIfPermissions\"], [3, \"customer\"], [\"class\", \"last-login\", 3, \"label\", 4, \"ngIf\"], [1, \"last-login\", 3, \"label\"], [3, \"dateTime\"], [3, \"title\"], [4, \"ngIf\", \"ngIfElse\"], [\"class\", \"button-small mt-1\", 3, \"click\", 4, \"vdrIfPermissions\"], [\"icon\", \"times\", 3, \"colorFrom\", \"iconClick\", 4, \"ngFor\", \"ngForOf\"], [\"icon\", \"times\", 3, \"iconClick\", \"colorFrom\"], [1, \"color-weight-400\"], [1, \"button-small\", \"mt-1\", 3, \"click\"], [\"shape\", \"plus\"], [3, \"entity\"], [\"for\", \"password\", 3, \"label\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\"], [\"formGroupName\", \"customFields\", 3, \"title\"], [\"entityName\", \"Customer\", 3, \"customFields\", \"customFieldsFormGroup\"], [3, \"to-delete\", \"availableCountries\", \"isDefaultBilling\", \"isDefaultShipping\", \"addressForm\", \"customFields\", \"editable\", \"setAsDefaultBilling\", \"setAsDefaultShipping\", \"deleteAddress\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"btn btn-secondary mt-2\", 3, \"click\", 4, \"vdrIfPermissions\"], [3, \"title\", \"paddingX\"], [\"id\", \"customer-order-list\", 3, \"itemsPerPageChange\", \"pageChange\", \"items\", \"itemsPerPage\", \"totalItems\", \"currentPage\", \"emptyStateLabel\"], [\"id\", \"id\", 3, \"heading\", \"hiddenByDefault\"], [\"id\", \"created-at\", 3, \"heading\", \"hiddenByDefault\"], [\"id\", \"code\", 3, \"heading\", \"optional\"], [\"id\", \"order-type\", 3, \"heading\", \"hiddenByDefault\"], [\"id\", \"state\", 3, \"heading\"], [\"id\", \"total\", 3, \"heading\"], [\"id\", \"updated-at\", 3, \"heading\"], [\"id\", \"placed-at\", 3, \"heading\"], [3, \"customField\", 4, \"ngFor\", \"ngForOf\"], [3, \"addNote\", \"updateNote\", \"deleteNote\", \"customer\", \"history\"], [3, \"setAsDefaultBilling\", \"setAsDefaultShipping\", \"deleteAddress\", \"availableCountries\", \"isDefaultBilling\", \"isDefaultShipping\", \"addressForm\", \"customFields\", \"editable\"], [1, \"btn\", \"btn-secondary\", \"mt-2\", 3, \"click\"], [1, \"button-ghost\", 3, \"routerLink\"], [\"shape\", \"arrow right\"], [3, \"state\"], [3, \"customField\"]],\n      template: function CustomerDetailComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"vdr-page-block\")(1, \"vdr-action-bar\");\n          i0.ɵɵelement(2, \"vdr-ab-left\");\n          i0.ɵɵelementStart(3, \"vdr-ab-right\");\n          i0.ɵɵelement(4, \"vdr-action-bar-items\", 2);\n          i0.ɵɵtemplate(5, CustomerDetailComponent_button_5_Template, 3, 4, \"button\", 3);\n          i0.ɵɵpipe(6, \"async\");\n          i0.ɵɵtemplate(7, CustomerDetailComponent_ng_template_7_Template, 1, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelement(9, \"vdr-action-bar-dropdown-menu\", 2);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(10, \"vdr-page-detail-layout\")(11, \"vdr-page-detail-sidebar\");\n          i0.ɵɵtemplate(12, CustomerDetailComponent_vdr_card_12_Template, 3, 2, \"vdr-card\", 4);\n          i0.ɵɵpipe(13, \"async\");\n          i0.ɵɵtemplate(14, CustomerDetailComponent_vdr_card_14_Template, 7, 6, \"vdr-card\", 5);\n          i0.ɵɵpipe(15, \"async\");\n          i0.ɵɵelementStart(16, \"vdr-card\");\n          i0.ɵɵtemplate(17, CustomerDetailComponent_vdr_page_entity_info_17_Template, 1, 1, \"vdr-page-entity-info\", 6);\n          i0.ɵɵpipe(18, \"async\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"vdr-page-block\")(20, \"form\", 7)(21, \"vdr-card\")(22, \"div\", 8)(23, \"vdr-form-field\", 9);\n          i0.ɵɵpipe(24, \"translate\");\n          i0.ɵɵpipe(25, \"async\");\n          i0.ɵɵelement(26, \"input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(27, \"div\");\n          i0.ɵɵelementStart(28, \"vdr-form-field\", 11);\n          i0.ɵɵpipe(29, \"translate\");\n          i0.ɵɵpipe(30, \"async\");\n          i0.ɵɵelement(31, \"input\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"vdr-form-field\", 13);\n          i0.ɵɵpipe(33, \"translate\");\n          i0.ɵɵpipe(34, \"async\");\n          i0.ɵɵelement(35, \"input\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"vdr-form-field\", 15);\n          i0.ɵɵpipe(37, \"translate\");\n          i0.ɵɵpipe(38, \"async\");\n          i0.ɵɵelement(39, \"input\", 16);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(40, \"vdr-form-field\", 17);\n          i0.ɵɵpipe(41, \"translate\");\n          i0.ɵɵpipe(42, \"async\");\n          i0.ɵɵelement(43, \"input\", 18);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(44, CustomerDetailComponent_vdr_form_field_44_Template, 3, 3, \"vdr-form-field\", 19);\n          i0.ɵɵpipe(45, \"async\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(46, CustomerDetailComponent_vdr_card_46_Template, 3, 5, \"vdr-card\", 20);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(47, \"vdr-custom-detail-component-host\", 21);\n          i0.ɵɵtemplate(48, CustomerDetailComponent_ng_container_48_Template, 42, 58, \"ng-container\", 4);\n          i0.ɵɵpipe(49, \"async\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          let tmp_4_0;\n          const updateButton_r25 = i0.ɵɵreference(8);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(6, 21, ctx.isNew$))(\"ngIfElse\", updateButton_r25);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(13, 23, ctx.entity$));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = i0.ɵɵpipeBind1(15, 25, ctx.entity$)) == null ? null : tmp_4_0.groups);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(18, 27, ctx.entity$));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.detailForm.get(\"customer\"));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"label\", i0.ɵɵpipeBind1(24, 29, \"customer.title\"))(\"readOnlyToggle\", !i0.ɵɵpipeBind1(25, 31, ctx.isNew$));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"label\", i0.ɵɵpipeBind1(29, 33, \"customer.first-name\"))(\"readOnlyToggle\", !i0.ɵɵpipeBind1(30, 35, ctx.isNew$));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"label\", i0.ɵɵpipeBind1(33, 37, \"customer.last-name\"))(\"readOnlyToggle\", !i0.ɵɵpipeBind1(34, 39, ctx.isNew$));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"label\", i0.ɵɵpipeBind1(37, 41, \"customer.email-address\"))(\"readOnlyToggle\", !i0.ɵɵpipeBind1(38, 43, ctx.isNew$));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"label\", i0.ɵɵpipeBind1(41, 45, \"customer.phone-number\"))(\"readOnlyToggle\", !i0.ɵɵpipeBind1(42, 47, ctx.isNew$));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(45, 49, ctx.isNew$));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.customFields.length);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"entity$\", ctx.entity$)(\"detailForm\", ctx.detailForm);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !i0.ɵɵpipeBind1(49, 51, ctx.isNew$));\n        }\n      },\n      dependencies: [i3.ClrIconCustomTag, i3$1.NgForOf, i3$1.NgIf, i1$1.ɵNgNoValidate, i1$1.DefaultValueAccessor, i1$1.NgControlStatus, i1$1.NgControlStatusGroup, i1$1.FormGroupDirective, i1$1.FormControlName, i1$1.FormGroupName, i2.RouterLink, i1.ActionBarComponent, i1.ActionBarLeftComponent, i1.ActionBarRightComponent, i1.ActionBarDropdownMenuComponent, i1.ChipComponent, i1.FormFieldComponent, i1.FormFieldControlDirective, i1.OrderStateLabelComponent, i1.LabeledDataComponent, i1.IfPermissionsDirective, i1.ActionBarItemsComponent, i1.TabbedCustomFieldsComponent, i1.CustomDetailComponentHostComponent, i1.DataTable2Component, i1.DataTable2ColumnComponent, i1.DataTableCustomFieldColumnComponent, i1.PageBlockComponent, i1.PageEntityInfoComponent, i1.PageDetailLayoutComponent, i1.PageDetailSidebarComponent, i1.CardComponent, CustomerStatusLabelComponent, AddressCardComponent, CustomerHistoryComponent, i3$1.AsyncPipe, i4.TranslatePipe, i1.HasPermissionPipe, i1.TimeAgoPipe, i1.LocaleDatePipe, i1.LocaleCurrencyPipe],\n      styles: [\".last-login[_ngcontent-%COMP%]{margin-inline-start:6px;color:var(--color-grey-500)}.to-delete[_ngcontent-%COMP%]{opacity:.5}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomerDetailComponent, [{\n    type: Component,\n    args: [{\n      selector: 'vdr-customer-detail',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"customer-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!(addressDefaultsUpdated || (detailForm.valid && detailForm.dirty))\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"'UpdateCustomer'\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!(addressDefaultsUpdated || (detailForm.valid && detailForm.dirty))\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"customer-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-page-detail-layout>\\r\\n    <vdr-page-detail-sidebar>\\r\\n        <vdr-card *ngIf=\\\"entity$ | async as customer\\\">\\r\\n            <vdr-customer-status-label [customer]=\\\"customer\\\"></vdr-customer-status-label>\\r\\n            <vdr-labeled-data\\r\\n                class=\\\"last-login\\\"\\r\\n                *ngIf=\\\"customer.user?.lastLogin as lastLogin\\\"\\r\\n                [label]=\\\"'customer.last-login' | translate\\\"\\r\\n            >\\r\\n                <time [dateTime]=\\\"lastLogin\\\">{{ lastLogin | timeAgo }}</time>\\r\\n            </vdr-labeled-data>\\r\\n        </vdr-card>\\r\\n        <vdr-card\\r\\n            [title]=\\\"'customer.customer-groups' | translate\\\"\\r\\n            *ngIf=\\\"(entity$ | async)?.groups as groups\\\"\\r\\n        >\\r\\n            <div *ngIf=\\\"groups.length; else noGroups\\\">\\r\\n                <vdr-chip\\r\\n                    *ngFor=\\\"let group of groups\\\"\\r\\n                    [colorFrom]=\\\"group.id\\\"\\r\\n                    icon=\\\"times\\\"\\r\\n                    (iconClick)=\\\"removeFromGroup(group)\\\"\\r\\n                    >{{ group.name }}</vdr-chip\\r\\n                >\\r\\n            </div>\\r\\n            <ng-template #noGroups>\\r\\n                <span class=\\\"color-weight-400\\\">\\r\\n                    {{ 'customer.not-a-member-of-any-groups' | translate }}\\r\\n                </span>\\r\\n            </ng-template>\\r\\n            <div>\\r\\n                <button\\r\\n                    class=\\\"button-small mt-1\\\"\\r\\n                    (click)=\\\"addToGroup()\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateCustomerGroup'\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                    {{ 'customer.add-customer-to-group' | translate }}\\r\\n                </button>\\r\\n            </div>\\r\\n        </vdr-card>\\r\\n        <vdr-card>\\r\\n            <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n        </vdr-card>\\r\\n    </vdr-page-detail-sidebar>\\r\\n    <vdr-page-block>\\r\\n        <form class=\\\"form\\\" [formGroup]=\\\"detailForm.get('customer')\\\">\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'customer.title' | translate\\\"\\r\\n                        for=\\\"title\\\"\\r\\n                        [readOnlyToggle]=\\\"!(isNew$ | async)\\\"\\r\\n                    >\\r\\n                        <input id=\\\"title\\\" type=\\\"text\\\" formControlName=\\\"title\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <div><!-- spacer --></div>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'customer.first-name' | translate\\\"\\r\\n                        for=\\\"firstName\\\"\\r\\n                        [readOnlyToggle]=\\\"!(isNew$ | async)\\\"\\r\\n                    >\\r\\n                        <input id=\\\"firstName\\\" type=\\\"text\\\" formControlName=\\\"firstName\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'customer.last-name' | translate\\\"\\r\\n                        for=\\\"lastName\\\"\\r\\n                        [readOnlyToggle]=\\\"!(isNew$ | async)\\\"\\r\\n                    >\\r\\n                        <input id=\\\"lastName\\\" type=\\\"text\\\" formControlName=\\\"lastName\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'customer.email-address' | translate\\\"\\r\\n                        for=\\\"emailAddress\\\"\\r\\n                        [readOnlyToggle]=\\\"!(isNew$ | async)\\\"\\r\\n                    >\\r\\n                        <input id=\\\"emailAddress\\\" type=\\\"text\\\" formControlName=\\\"emailAddress\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'customer.phone-number' | translate\\\"\\r\\n                        for=\\\"phoneNumber\\\"\\r\\n                        [readOnlyToggle]=\\\"!(isNew$ | async)\\\"\\r\\n                    >\\r\\n                        <input id=\\\"phoneNumber\\\" type=\\\"text\\\" formControlName=\\\"phoneNumber\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'customer.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                        *ngIf=\\\"isNew$ | async\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Customer\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customer.customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n        </form>\\r\\n        <vdr-custom-detail-component-host\\r\\n            locationId=\\\"customer-detail\\\"\\r\\n            [entity$]=\\\"entity$\\\"\\r\\n            [detailForm]=\\\"detailForm\\\"\\r\\n        ></vdr-custom-detail-component-host>\\r\\n        <ng-container *ngIf=\\\"!(isNew$ | async)\\\">\\r\\n            <vdr-card [title]=\\\"'customer.addresses' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-address-card\\r\\n                        *ngFor=\\\"let addressForm of getAddressFormControls()\\\"\\r\\n                        [class.to-delete]=\\\"addressesToDeleteIds.has(addressForm.value.id)\\\"\\r\\n                        [availableCountries]=\\\"availableCountries$ | async\\\"\\r\\n                        [isDefaultBilling]=\\\"defaultBillingAddressId === addressForm.value.id\\\"\\r\\n                        [isDefaultShipping]=\\\"defaultShippingAddressId === addressForm.value.id\\\"\\r\\n                        [addressForm]=\\\"addressForm\\\"\\r\\n                        [customFields]=\\\"addressCustomFields\\\"\\r\\n                        [editable]=\\\"\\r\\n                            (['UpdateCustomer'] | hasPermission) &&\\r\\n                            !addressesToDeleteIds.has(addressForm.value.id)\\r\\n                        \\\"\\r\\n                        (setAsDefaultBilling)=\\\"setDefaultBillingAddressId($event)\\\"\\r\\n                        (setAsDefaultShipping)=\\\"setDefaultShippingAddressId($event)\\\"\\r\\n                        (deleteAddress)=\\\"toggleDeleteAddress($event)\\\"\\r\\n                    ></vdr-address-card>\\r\\n                </div>\\r\\n                <button\\r\\n                    class=\\\"btn btn-secondary mt-2\\\"\\r\\n                    (click)=\\\"addAddress()\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateCustomer'\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                    {{ 'customer.create-new-address' | translate }}\\r\\n                </button>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'customer.orders' | translate\\\" [paddingX]=\\\"false\\\">\\r\\n                <vdr-data-table-2\\r\\n                    id=\\\"customer-order-list\\\"\\r\\n                    [items]=\\\"orders$ | async\\\"\\r\\n                    [itemsPerPage]=\\\"ordersPerPage\\\"\\r\\n                    [totalItems]=\\\"ordersCount$ | async\\\"\\r\\n                    [currentPage]=\\\"currentOrdersPage\\\"\\r\\n                    [emptyStateLabel]=\\\"'customer.no-orders-placed' | translate\\\"\\r\\n                    (itemsPerPageChange)=\\\"setOrderItemsPerPage($event)\\\"\\r\\n                    (pageChange)=\\\"setOrderCurrentPage($event)\\\"\\r\\n                >\\r\\n                    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            {{ order.id }}\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-column\\r\\n                        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n                        id=\\\"created-at\\\"\\r\\n                        [hiddenByDefault]=\\\"true\\\"\\r\\n                    >\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            {{ order.createdAt | localeDate : 'short' }}\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [optional]=\\\"false\\\">\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/orders', order.id]\\\"\\r\\n                                ><span>{{ order.code }}</span>\\r\\n                                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                            </a>\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-column\\r\\n                        [heading]=\\\"'order.order-type' | translate\\\"\\r\\n                        id=\\\"order-type\\\"\\r\\n                        [hiddenByDefault]=\\\"true\\\"\\r\\n                    >\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            <vdr-chip>{{ order.type }}</vdr-chip>\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-column [heading]=\\\"'order.state' | translate\\\" id=\\\"state\\\">\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            <vdr-order-state-label [state]=\\\"order.state\\\"></vdr-order-state-label>\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-column [heading]=\\\"'order.total' | translate\\\" id=\\\"total\\\">\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            {{ order.totalWithTax | localeCurrency : order.currencyCode }}\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\">\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            {{ order.updatedAt | timeAgo }}\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-column [heading]=\\\"'order.placed-at' | translate\\\" id=\\\"placed-at\\\">\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            {{ order.orderPlacedAt | localeDate : 'short' }}\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-custom-field-column\\r\\n                        *ngFor=\\\"let customField of customFields\\\"\\r\\n                        [customField]=\\\"customField\\\"\\r\\n                    />\\r\\n                </vdr-data-table-2>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'customer.customer-history' | translate\\\">\\r\\n                <vdr-customer-history\\r\\n                    [customer]=\\\"entity$ | async\\\"\\r\\n                    [history]=\\\"history$ | async\\\"\\r\\n                    (addNote)=\\\"addNoteToCustomer($event)\\\"\\r\\n                    (updateNote)=\\\"updateNote($event)\\\"\\r\\n                    (deleteNote)=\\\"deleteNote($event)\\\"\\r\\n                ></vdr-customer-history>\\r\\n            </vdr-card>\\r\\n        </ng-container>\\r\\n    </vdr-page-block>\\r\\n</vdr-page-detail-layout>\\r\\n\",\n      styles: [\".last-login{margin-inline-start:6px;color:var(--color-grey-500)}.to-delete{opacity:.5}\\n\"]\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i1$1.FormBuilder\n  }, {\n    type: i1.DataService\n  }, {\n    type: i1.ModalService\n  }, {\n    type: i1.NotificationService\n  }], null);\n})();\nconst CUSTOMER_GROUP_DETAIL_QUERY = gql`\n    query GetCustomerGroupDetail($id: ID!) {\n        customerGroup(id: $id) {\n            ...CustomerGroupDetail\n        }\n    }\n    fragment CustomerGroupDetail on CustomerGroup {\n        id\n        createdAt\n        updatedAt\n        name\n    }\n`;\nclass CustomerGroupDetailComponent extends TypedBaseDetailComponent {\n  constructor(formBuilder, dataService, modalService, notificationService) {\n    super();\n    this.formBuilder = formBuilder;\n    this.dataService = dataService;\n    this.modalService = modalService;\n    this.notificationService = notificationService;\n    this.customFields = this.getCustomFieldConfig('CustomerGroup');\n    this.detailForm = this.formBuilder.group({\n      name: '',\n      customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields))\n    });\n  }\n  ngOnInit() {\n    super.init();\n  }\n  create() {\n    const formvalue = this.detailForm.value;\n    if (formvalue.name) {\n      this.dataService.customer.createCustomerGroup({\n        name: formvalue.name,\n        customFields: formvalue.customFields,\n        customerIds: []\n      }).subscribe(({\n        createCustomerGroup\n      }) => {\n        this.notificationService.success(marker('common.notify-create-success'), {\n          entity: 'CustomerGroup'\n        });\n        this.detailForm.markAsPristine();\n        this.router.navigate(['../', createCustomerGroup.id], {\n          relativeTo: this.route\n        });\n      }, err => {\n        this.notificationService.error(marker('common.notify-create-error'), {\n          entity: 'CustomerGroup'\n        });\n      });\n    }\n  }\n  save() {\n    const formValue = this.detailForm.value;\n    this.dataService.customer.updateCustomerGroup({\n      id: this.id,\n      ...formValue\n    }).subscribe(() => {\n      this.notificationService.success(marker('common.notify-update-success'), {\n        entity: 'CustomerGroup'\n      });\n      this.detailForm.markAsPristine();\n    }, err => {\n      this.notificationService.error(marker('common.notify-update-error'), {\n        entity: 'CustomerGroup'\n      });\n    });\n  }\n  setFormValues(entity) {\n    this.detailForm.patchValue({\n      name: entity.name\n    });\n    if (this.customFields.length) {\n      const customFieldsGroup = this.detailForm.get(['customFields']);\n      this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\n    }\n  }\n  static {\n    this.ɵfac = function CustomerGroupDetailComponent_Factory(t) {\n      return new (t || CustomerGroupDetailComponent)(i0.ɵɵdirectiveInject(i1$1.FormBuilder), i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i1.ModalService), i0.ɵɵdirectiveInject(i1.NotificationService));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CustomerGroupDetailComponent,\n      selectors: [[\"vdr-customer-group-detail\"]],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 23,\n      vars: 14,\n      consts: [[\"updateButton\", \"\"], [\"locationId\", \"customer-group-detail\"], [\"class\", \"btn btn-primary\", 3, \"disabled\", \"click\", 4, \"ngIf\", \"ngIfElse\"], [1, \"form\", 3, \"formGroup\"], [4, \"ngIf\"], [1, \"form-grid\"], [\"for\", \"name\", 3, \"label\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\"], [\"formGroupName\", \"customFields\", 3, \"title\", 4, \"ngIf\"], [\"locationId\", \"customer-group-detail\", 3, \"entity$\", \"detailForm\"], [1, \"btn\", \"btn-primary\", 3, \"click\", \"disabled\"], [\"class\", \"btn btn-primary\", 3, \"disabled\", \"click\", 4, \"vdrIfPermissions\"], [3, \"entity\"], [\"formGroupName\", \"customFields\", 3, \"title\"], [\"entityName\", \"CustomerGroup\", 3, \"customFields\", \"customFieldsFormGroup\"]],\n      template: function CustomerGroupDetailComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"vdr-page-block\")(1, \"vdr-action-bar\");\n          i0.ɵɵelement(2, \"vdr-ab-left\");\n          i0.ɵɵelementStart(3, \"vdr-ab-right\");\n          i0.ɵɵelement(4, \"vdr-action-bar-items\", 1);\n          i0.ɵɵtemplate(5, CustomerGroupDetailComponent_button_5_Template, 3, 4, \"button\", 2);\n          i0.ɵɵpipe(6, \"async\");\n          i0.ɵɵtemplate(7, CustomerGroupDetailComponent_ng_template_7_Template, 1, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelement(9, \"vdr-action-bar-dropdown-menu\", 1);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(10, \"form\", 3)(11, \"vdr-page-detail-layout\")(12, \"vdr-page-detail-sidebar\");\n          i0.ɵɵtemplate(13, CustomerGroupDetailComponent_vdr_card_13_Template, 2, 1, \"vdr-card\", 4);\n          i0.ɵɵpipe(14, \"async\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"vdr-page-block\")(16, \"vdr-card\")(17, \"div\", 5)(18, \"vdr-form-field\", 6);\n          i0.ɵɵpipe(19, \"translate\");\n          i0.ɵɵelement(20, \"input\", 7);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(21, CustomerGroupDetailComponent_vdr_card_21_Template, 3, 5, \"vdr-card\", 8);\n          i0.ɵɵelement(22, \"vdr-custom-detail-component-host\", 9);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          const updateButton_r5 = i0.ɵɵreference(8);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(6, 8, ctx.isNew$))(\"ngIfElse\", updateButton_r5);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.detailForm);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(14, 10, ctx.entity$));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"label\", i0.ɵɵpipeBind1(19, 12, \"common.name\"));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.customFields.length);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"entity$\", ctx.entity$)(\"detailForm\", ctx.detailForm);\n        }\n      },\n      dependencies: [i3$1.NgIf, i1$1.ɵNgNoValidate, i1$1.DefaultValueAccessor, i1$1.NgControlStatus, i1$1.NgControlStatusGroup, i1$1.FormGroupDirective, i1$1.FormControlName, i1$1.FormGroupName, i1.ActionBarComponent, i1.ActionBarLeftComponent, i1.ActionBarRightComponent, i1.ActionBarDropdownMenuComponent, i1.FormFieldComponent, i1.FormFieldControlDirective, i1.IfPermissionsDirective, i1.ActionBarItemsComponent, i1.TabbedCustomFieldsComponent, i1.CustomDetailComponentHostComponent, i1.PageBlockComponent, i1.PageEntityInfoComponent, i1.PageDetailLayoutComponent, i1.PageDetailSidebarComponent, i1.CardComponent, i3$1.AsyncPipe, i4.TranslatePipe],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomerGroupDetailComponent, [{\n    type: Component,\n    args: [{\n      selector: 'vdr-customer-group-detail',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"customer-group-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!(detailForm.valid && detailForm.dirty)\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"'UpdateCustomer'\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!(detailForm.valid && detailForm.dirty)\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"customer-group-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"CustomerGroup\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"customer-group-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\"\n    }]\n  }], () => [{\n    type: i1$1.FormBuilder\n  }, {\n    type: i1.DataService\n  }, {\n    type: i1.ModalService\n  }, {\n    type: i1.NotificationService\n  }], null);\n})();\nclass CustomerGroupDetailDialogComponent {\n  constructor(serverConfigService, formBuilder) {\n    this.serverConfigService = serverConfigService;\n    this.formBuilder = formBuilder;\n    this.customFields = this.serverConfigService.getCustomFieldsFor('CustomerGroup');\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      name: [this.group.name, Validators.required],\n      customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields))\n    });\n    if (this.customFields.length) {\n      const customFieldsGroup = this.form.get('customFields');\n      for (const fieldDef of this.customFields) {\n        const key = fieldDef.name;\n        const value = this.group.customFields?.[key];\n        const control = customFieldsGroup.get(key);\n        if (control) {\n          control.patchValue(value);\n        }\n      }\n    }\n  }\n  cancel() {\n    this.resolveWith();\n  }\n  save() {\n    this.resolveWith(this.form.value);\n  }\n  static {\n    this.ɵfac = function CustomerGroupDetailDialogComponent_Factory(t) {\n      return new (t || CustomerGroupDetailDialogComponent)(i0.ɵɵdirectiveInject(i1.ServerConfigService), i0.ɵɵdirectiveInject(i1$1.UntypedFormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CustomerGroupDetailDialogComponent,\n      selectors: [[\"vdr-customer-group-detail-dialog\"]],\n      decls: 8,\n      vars: 9,\n      consts: [[\"vdrDialogTitle\", \"\"], [3, \"formGroup\"], [\"for\", \"name\", 3, \"label\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\", 3, \"readonly\"], [\"formGroupName\", \"customFields\", 4, \"ngIf\"], [\"vdrDialogButtons\", \"\"], [4, \"ngIf\"], [\"formGroupName\", \"customFields\"], [\"entityName\", \"CustomerGroup\", 3, \"customFields\", \"customFieldsFormGroup\"], [\"type\", \"button\", 1, \"btn\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\", \"disabled\"]],\n      template: function CustomerGroupDetailDialogComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, CustomerGroupDetailDialogComponent_ng_template_0_Template, 2, 2, \"ng-template\", 0);\n          i0.ɵɵelementStart(1, \"form\", 1)(2, \"vdr-form-field\", 2);\n          i0.ɵɵpipe(3, \"translate\");\n          i0.ɵɵelement(4, \"input\", 3);\n          i0.ɵɵpipe(5, \"hasPermission\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(6, CustomerGroupDetailDialogComponent_section_6_Template, 5, 5, \"section\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(7, CustomerGroupDetailDialogComponent_ng_template_7_Template, 6, 6, \"ng-template\", 5);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"label\", i0.ɵɵpipeBind1(3, 4, \"common.name\"));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"readonly\", !i0.ɵɵpipeBind1(5, 6, i0.ɵɵpureFunction0(8, _c7)));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.customFields.length);\n        }\n      },\n      dependencies: [i3.ClrLabel, i3$1.NgIf, i1$1.ɵNgNoValidate, i1$1.DefaultValueAccessor, i1$1.NgControlStatus, i1$1.NgControlStatusGroup, i1$1.FormGroupDirective, i1$1.FormControlName, i1$1.FormGroupName, i1.FormFieldComponent, i1.FormFieldControlDirective, i1.DialogButtonsDirective, i1.DialogTitleDirective, i1.TabbedCustomFieldsComponent, i4.TranslatePipe, i1.HasPermissionPipe],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomerGroupDetailDialogComponent, [{\n    type: Component,\n    args: [{\n      selector: 'vdr-customer-group-detail-dialog',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<ng-template vdrDialogTitle>\\r\\n    <span *ngIf=\\\"group.id\\\">{{ 'customer.update-customer-group' | translate }}</span>\\r\\n    <span *ngIf=\\\"!group.id\\\">{{ 'customer.create-customer-group' | translate }}</span>\\r\\n</ng-template>\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n        <input\\r\\n            id=\\\"name\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"name\\\"\\r\\n            [readonly]=\\\"!(['CreateCustomerGroup', 'UpdateCustomerGroup'] | hasPermission)\\\"\\r\\n        />\\r\\n    </vdr-form-field>\\r\\n    <section formGroupName=\\\"customFields\\\" *ngIf=\\\"customFields.length\\\">\\r\\n        <label>{{ 'common.custom-fields' | translate }}</label>\\r\\n        <vdr-tabbed-custom-fields\\r\\n            entityName=\\\"CustomerGroup\\\"\\r\\n            [customFields]=\\\"customFields\\\"\\r\\n            [customFieldsFormGroup]=\\\"form.get('customFields')\\\"\\r\\n        ></vdr-tabbed-custom-fields>\\r\\n    </section>\\r\\n</form>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"save()\\\" [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-primary\\\">\\r\\n        <span *ngIf=\\\"group.id\\\">{{ 'customer.update-customer-group' | translate }}</span>\\r\\n        <span *ngIf=\\\"!group.id\\\">{{ 'customer.create-customer-group' | translate }}</span>\\r\\n    </button>\\r\\n</ng-template>\\r\\n\"\n    }]\n  }], () => [{\n    type: i1.ServerConfigService\n  }, {\n    type: i1$1.UntypedFormBuilder\n  }], null);\n})();\nconst deleteCustomerGroupsBulkAction = createBulkDeleteAction({\n  location: 'customer-group-list',\n  requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteCustomerGroup),\n  getItemName: item => item.name,\n  bulkDelete: (dataService, ids) => dataService.customer.deleteCustomerGroups(ids).pipe(map(res => res.deleteCustomerGroups))\n});\nconst GET_CUSTOMER_GROUP_LIST = gql`\n    query GetCustomerGroupList($options: CustomerGroupListOptions) {\n        customerGroups(options: $options) {\n            items {\n                ...CustomerGroup\n            }\n            totalItems\n        }\n    }\n    ${CUSTOMER_GROUP_FRAGMENT}\n`;\nclass CustomerGroupListComponent extends TypedBaseListComponent {\n  constructor(dataService, notificationService, modalService, route, router) {\n    super();\n    this.dataService = dataService;\n    this.notificationService = notificationService;\n    this.modalService = modalService;\n    this.route = route;\n    this.router = router;\n    this.dataTableListId = 'customer-group-list';\n    this.customFields = this.getCustomFieldConfig('CustomerGroup');\n    this.fetchGroupMembers$ = new BehaviorSubject({\n      skip: 0,\n      take: 0,\n      filterTerm: ''\n    });\n    this.filters = this.createFilterCollection().addIdFilter().addDateFilters().addFilter({\n      name: 'name',\n      type: {\n        kind: 'text'\n      },\n      label: marker('common.name'),\n      filterField: 'name'\n    }).connectToRoute(this.route);\n    this.sorts = this.createSortCollection().defaultSort('createdAt', 'DESC').addSort({\n      name: 'createdAt'\n    }).addSort({\n      name: 'updatedAt'\n    }).addSort({\n      name: 'name'\n    }).connectToRoute(this.route);\n    this.refreshActiveGroupMembers$ = new BehaviorSubject(undefined);\n    super.configure({\n      document: GetCustomerGroupListDocument,\n      getItems: data => data.customerGroups,\n      setVariables: (skip, take) => ({\n        options: {\n          skip,\n          take,\n          filter: {\n            name: {\n              contains: this.searchTermControl.value\n            },\n            ...this.filters.createFilterInput()\n          },\n          sort: this.sorts.createSortInput()\n        }\n      }),\n      refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges]\n    });\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    const activeGroupId$ = this.route.paramMap.pipe(map(pm => pm.get('contents')), distinctUntilChanged());\n    this.listIsEmpty$ = this.items$.pipe(map(groups => groups.length === 0));\n    this.activeGroup$ = combineLatest(this.items$, activeGroupId$).pipe(map(([groups, activeGroupId]) => {\n      if (activeGroupId) {\n        return groups.find(g => g.id === activeGroupId);\n      }\n    }));\n    this.activeIndex$ = combineLatest(this.items$, activeGroupId$).pipe(map(([groups, activeGroupId]) => {\n      if (activeGroupId) {\n        return groups.findIndex(g => g.id === activeGroupId);\n      } else {\n        return -1;\n      }\n    }));\n    const membersResult$ = combineLatest(this.activeGroup$, this.fetchGroupMembers$, this.refreshActiveGroupMembers$).pipe(switchMap(([activeGroup, {\n      skip,\n      take,\n      filterTerm\n    }]) => {\n      if (activeGroup) {\n        return this.dataService.customer.getCustomerGroupWithCustomers(activeGroup.id, {\n          skip,\n          take,\n          filter: {\n            emailAddress: {\n              contains: filterTerm\n            }\n          }\n        }).mapStream(res => res.customerGroup?.customers);\n      } else {\n        return of(undefined);\n      }\n    }));\n    this.members$ = membersResult$.pipe(map(res => res?.items ?? []));\n    this.membersTotal$ = membersResult$.pipe(map(res => res?.totalItems ?? 0));\n  }\n  closeMembers() {\n    const params = {\n      ...this.route.snapshot.params\n    };\n    delete params.contents;\n    this.router.navigate(['./', params], {\n      relativeTo: this.route,\n      queryParamsHandling: 'preserve'\n    });\n  }\n  addToGroup(group) {\n    this.modalService.fromComponent(AddCustomerToGroupDialogComponent, {\n      locals: {\n        group,\n        route: this.route\n      },\n      size: 'md',\n      verticalAlign: 'top'\n    }).pipe(switchMap(customerIds => customerIds ? this.dataService.customer.addCustomersToGroup(group.id, customerIds).pipe(mapTo(customerIds)) : EMPTY)).subscribe({\n      next: result => {\n        this.notificationService.success(marker(`customer.add-customers-to-group-success`), {\n          customerCount: result.length,\n          groupName: group.name\n        });\n        this.refreshActiveGroupMembers$.next();\n      }\n    });\n  }\n  static {\n    this.ɵfac = function CustomerGroupListComponent_Factory(t) {\n      return new (t || CustomerGroupListComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i1.NotificationService), i0.ɵɵdirectiveInject(i1.ModalService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CustomerGroupListComponent,\n      selectors: [[\"vdr-customer-group-list\"]],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 12,\n      vars: 7,\n      consts: [[\"locationId\", \"customer-group-list\"], [\"class\", \"btn btn-primary\", 3, \"routerLink\", 4, \"vdrIfPermissions\"], [3, \"closeClicked\", \"rightPanelOpen\"], [\"vdrSplitViewLeft\", \"\"], [\"vdrSplitViewRight\", \"\", 3, \"splitViewTitle\"], [1, \"btn\", \"btn-primary\", 3, \"routerLink\"], [\"shape\", \"plus\"], [1, \"mt-2\", 3, \"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\", \"id\", \"items\", \"itemsPerPage\", \"totalItems\", \"currentPage\", \"filters\", \"activeIndex\"], [\"locationId\", \"customer-group-list\", 3, \"hostComponent\", \"selectionManager\"], [3, \"searchTermControl\", \"searchTermPlaceholder\"], [\"id\", \"id\", 3, \"heading\", \"hiddenByDefault\"], [\"id\", \"created-at\", 3, \"heading\", \"hiddenByDefault\", \"sort\"], [\"id\", \"updated-at\", 3, \"heading\", \"hiddenByDefault\", \"sort\"], [\"id\", \"name\", 3, \"heading\", \"optional\", \"sort\"], [3, \"customField\", \"sorts\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"view-contents\", 3, \"heading\", \"optional\"], [1, \"button-ghost\", 3, \"routerLink\"], [\"shape\", \"arrow right\"], [3, \"customField\", \"sorts\"], [\"queryParamsHandling\", \"preserve\", 1, \"button-small\", \"bg-weight-150\", 3, \"routerLink\"], [\"shape\", \"file-group\"], [4, \"ngIf\"], [1, \"button-ghost\", \"ml-4\", 3, \"click\"], [\"locationId\", \"customer-group-members-list\", 3, \"fetchParamsChange\", \"members\", \"route\", \"totalItems\", \"activeGroup\"]],\n      template: function CustomerGroupListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"vdr-page-block\")(1, \"vdr-action-bar\");\n          i0.ɵɵelement(2, \"vdr-ab-left\");\n          i0.ɵɵelementStart(3, \"vdr-ab-right\");\n          i0.ɵɵelement(4, \"vdr-action-bar-items\", 0);\n          i0.ɵɵtemplate(5, CustomerGroupListComponent_a_5_Template, 4, 5, \"a\", 1);\n          i0.ɵɵelement(6, \"vdr-action-bar-dropdown-menu\", 0);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(7, \"vdr-split-view\", 2);\n          i0.ɵɵpipe(8, \"async\");\n          i0.ɵɵlistener(\"closeClicked\", function CustomerGroupListComponent_Template_vdr_split_view_closeClicked_7_listener() {\n            return ctx.closeMembers();\n          });\n          i0.ɵɵtemplate(9, CustomerGroupListComponent_ng_template_9_Template, 25, 47, \"ng-template\", 3)(10, CustomerGroupListComponent_ng_template_10_Template, 2, 3, \"ng-template\", 4);\n          i0.ɵɵpipe(11, \"async\");\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"vdrIfPermissions\", \"CreateCustomerGroup\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"rightPanelOpen\", i0.ɵɵpipeBind1(8, 3, ctx.activeGroup$));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"splitViewTitle\", (tmp_2_0 = i0.ɵɵpipeBind1(11, 5, ctx.activeGroup$)) == null ? null : tmp_2_0.name);\n        }\n      },\n      dependencies: [i3.ClrIconCustomTag, i3$1.NgForOf, i3$1.NgIf, i2.RouterLink, i1.ActionBarComponent, i1.ActionBarLeftComponent, i1.ActionBarRightComponent, i1.ActionBarDropdownMenuComponent, i1.IfPermissionsDirective, i1.ActionBarItemsComponent, i1.BulkActionMenuComponent, i1.DataTable2Component, i1.DataTable2ColumnComponent, i1.DataTable2SearchComponent, i1.DataTableCustomFieldColumnComponent, i1.SplitViewComponent, i1.SplitViewLeftDirective, i1.SplitViewRightDirective, i1.PageBlockComponent, CustomerGroupMemberListComponent, i3$1.AsyncPipe, i4.TranslatePipe, i1.LocaleDatePipe],\n      styles: [\"vdr-empty-placeholder[_ngcontent-%COMP%]{flex:1}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomerGroupListComponent, [{\n    type: Component,\n    args: [{\n      selector: 'vdr-customer-group-list',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"customer-group-list\\\"></vdr-action-bar-items>\\r\\n            <a class=\\\"btn btn-primary\\\" *vdrIfPermissions=\\\"'CreateCustomerGroup'\\\" [routerLink]=\\\"['./', 'create']\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'customer.create-new-customer-group' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"customer-group-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-split-view [rightPanelOpen]=\\\"activeGroup$ | async\\\" (closeClicked)=\\\"closeMembers()\\\">\\r\\n    <ng-template vdrSplitViewLeft>\\r\\n        <vdr-data-table-2\\r\\n            class=\\\"mt-2\\\"\\r\\n            [id]=\\\"dataTableListId\\\"\\r\\n            [items]=\\\"items$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [filters]=\\\"filters\\\"\\r\\n            [activeIndex]=\\\"activeIndex$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n            (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n        >\\r\\n            <vdr-bulk-action-menu\\r\\n                locationId=\\\"customer-group-list\\\"\\r\\n                [hostComponent]=\\\"this\\\"\\r\\n                [selectionManager]=\\\"selectionManager\\\"\\r\\n            ></vdr-bulk-action-menu>\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n            ></vdr-dt2-search>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\"\\r\\n                [optional]=\\\"false\\\"\\r\\n                [sort]=\\\"sorts.get('name')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', customerGroup.id]\\\"\\r\\n                        ><span>{{ customerGroup.name }}</span>\\r\\n                        <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-custom-field-column *ngFor=\\\"let field of customFields\\\" [customField]=\\\"field\\\" [sorts]=\\\"sorts\\\" />\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.view-contents' | translate\\\" id=\\\"view-contents\\\"\\r\\n                [optional]=\\\"false\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    <a\\r\\n                        class=\\\"button-small bg-weight-150\\\"\\r\\n                        [routerLink]=\\\"['./', { contents: customerGroup.id }]\\\"\\r\\n                        queryParamsHandling=\\\"preserve\\\"\\r\\n                    >\\r\\n                        <span>{{ 'customer.view-group-members' | translate }}</span>\\r\\n                        <clr-icon shape=\\\"file-group\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n        </vdr-data-table-2>\\r\\n    </ng-template>\\r\\n    <ng-template vdrSplitViewRight [splitViewTitle]=\\\"(activeGroup$ | async)?.name\\\">\\r\\n        <ng-container *ngIf=\\\"activeGroup$ | async as activeGroup\\\">\\r\\n            <button class=\\\"button-ghost ml-4\\\" (click)=\\\"addToGroup(activeGroup)\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                <span>{{\\r\\n                    'customer.add-customers-to-group' | translate : { groupName: activeGroup.name }\\r\\n                }}</span>\\r\\n            </button>\\r\\n            <vdr-customer-group-member-list\\r\\n                locationId=\\\"customer-group-members-list\\\"\\r\\n                [members]=\\\"members$ | async\\\"\\r\\n                [route]=\\\"route\\\"\\r\\n                [totalItems]=\\\"membersTotal$ | async\\\"\\r\\n                [activeGroup]=\\\"activeGroup$ | async\\\"\\r\\n                (fetchParamsChange)=\\\"fetchGroupMembers$.next($event)\\\"\\r\\n            />\\r\\n        </ng-container>\\r\\n    </ng-template>\\r\\n</vdr-split-view>\\r\\n\",\n      styles: [\"vdr-empty-placeholder{flex:1}\\n\"]\n    }]\n  }], () => [{\n    type: i1.DataService\n  }, {\n    type: i1.NotificationService\n  }, {\n    type: i1.ModalService\n  }, {\n    type: i2.ActivatedRoute\n  }, {\n    type: i2.Router\n  }], null);\n})();\nconst removeCustomerGroupMembersBulkAction = {\n  location: 'customer-group-members-list',\n  label: marker('customer.remove-from-group'),\n  icon: 'trash',\n  iconClass: 'is-danger',\n  requiresPermission: Permission.UpdateCustomerGroup,\n  onClick: ({\n    injector,\n    selection,\n    hostComponent,\n    clearSelection\n  }) => {\n    const modalService = injector.get(ModalService);\n    const dataService = injector.get(DataService);\n    const notificationService = injector.get(NotificationService);\n    const group = hostComponent.activeGroup;\n    const customerIds = selection.map(s => s.id);\n    dataService.customer.removeCustomersFromGroup(group.id, customerIds).subscribe({\n      complete: () => {\n        notificationService.success(marker(`customer.remove-customers-from-group-success`), {\n          customerCount: customerIds.length,\n          groupName: group.name\n        });\n        clearSelection();\n        hostComponent.refresh();\n      }\n    });\n  }\n};\nconst deleteCustomersBulkAction = createBulkDeleteAction({\n  location: 'customer-list',\n  requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteCustomer),\n  getItemName: item => item.firstName + ' ' + item.lastName,\n  bulkDelete: (dataService, ids) => dataService.customer.deleteCustomers(ids).pipe(map(res => res.deleteCustomers))\n});\nconst CUSTOMER_LIST_QUERY = gql`\n    query CustomerListQuery($options: CustomerListOptions) {\n        customers(options: $options) {\n            items {\n                ...CustomerListItem\n            }\n            totalItems\n        }\n    }\n\n    fragment CustomerListItem on Customer {\n        id\n        createdAt\n        updatedAt\n        title\n        firstName\n        lastName\n        emailAddress\n        user {\n            id\n            verified\n        }\n    }\n`;\nclass CustomerListComponent extends TypedBaseListComponent {\n  constructor() {\n    super();\n    this.dataTableListId = 'customer-list';\n    this.customFields = this.getCustomFieldConfig('Customer');\n    this.filters = this.createFilterCollection().addIdFilter().addDateFilters().addFilter({\n      name: 'firstName',\n      type: {\n        kind: 'text'\n      },\n      label: marker('customer.first-name'),\n      filterField: 'firstName'\n    }).addFilter({\n      name: 'lastName',\n      type: {\n        kind: 'text'\n      },\n      label: marker('customer.last-name'),\n      filterField: 'lastName'\n    }).addFilter({\n      name: 'emailAddress',\n      type: {\n        kind: 'text'\n      },\n      label: marker('customer.email-address'),\n      filterField: 'emailAddress'\n    }).addCustomFieldFilters(this.customFields).connectToRoute(this.route);\n    this.sorts = this.createSortCollection().defaultSort('createdAt', 'DESC').addSort({\n      name: 'createdAt'\n    }).addSort({\n      name: 'updatedAt'\n    }).addSort({\n      name: 'lastName'\n    }).addSort({\n      name: 'emailAddress'\n    }).addCustomFieldSorts(this.customFields).connectToRoute(this.route);\n    this.configure({\n      document: CustomerListQueryDocument,\n      getItems: data => data.customers,\n      setVariables: (skip, take) => ({\n        options: {\n          skip,\n          take,\n          filter: {\n            ...(this.searchTermControl.value ? {\n              emailAddress: {\n                contains: this.searchTermControl.value\n              },\n              lastName: {\n                contains: this.searchTermControl.value\n              },\n              postalCode: {\n                contains: this.searchTermControl.value\n              }\n            } : {}),\n            ...this.filters.createFilterInput()\n          },\n          filterOperator: this.searchTermControl.value ? LogicalOperator.OR : LogicalOperator.AND,\n          sort: this.sorts.createSortInput()\n        }\n      }),\n      refreshListOnChanges: [this.sorts.valueChanges, this.filters.valueChanges]\n    });\n  }\n  static {\n    this.ɵfac = function CustomerListComponent_Factory(t) {\n      return new (t || CustomerListComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CustomerListComponent,\n      selectors: [[\"vdr-customer-list\"]],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 34,\n      vars: 48,\n      consts: [[\"locationId\", \"customer-list\"], [\"class\", \"btn btn-primary\", 3, \"routerLink\", 4, \"vdrIfPermissions\"], [1, \"mt-2\", 3, \"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\", \"id\", \"items\", \"itemsPerPage\", \"totalItems\", \"currentPage\", \"filters\"], [\"locationId\", \"customer-list\", 3, \"hostComponent\", \"selectionManager\"], [3, \"searchTermControl\", \"searchTermPlaceholder\"], [\"id\", \"id\", 3, \"heading\", \"hiddenByDefault\"], [\"id\", \"created-at\", 3, \"heading\", \"hiddenByDefault\", \"sort\"], [\"id\", \"updated-at\", 3, \"heading\", \"hiddenByDefault\", \"sort\"], [\"id\", \"name\", 3, \"heading\", \"optional\", \"sort\"], [\"id\", \"status\", 3, \"heading\"], [\"id\", \"email-address\", 3, \"heading\", \"sort\"], [3, \"customField\", \"sorts\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", 3, \"routerLink\"], [\"shape\", \"plus\"], [1, \"button-ghost\", 3, \"routerLink\"], [\"shape\", \"arrow right\"], [3, \"customer\"], [3, \"customField\", \"sorts\"]],\n      template: function CustomerListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"vdr-page-block\")(1, \"vdr-action-bar\");\n          i0.ɵɵelement(2, \"vdr-ab-left\");\n          i0.ɵɵelementStart(3, \"vdr-ab-right\");\n          i0.ɵɵelement(4, \"vdr-action-bar-items\", 0);\n          i0.ɵɵtemplate(5, CustomerListComponent_a_5_Template, 4, 5, \"a\", 1);\n          i0.ɵɵelement(6, \"vdr-action-bar-dropdown-menu\", 0);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(7, \"vdr-data-table-2\", 2);\n          i0.ɵɵpipe(8, \"async\");\n          i0.ɵɵpipe(9, \"async\");\n          i0.ɵɵpipe(10, \"async\");\n          i0.ɵɵpipe(11, \"async\");\n          i0.ɵɵlistener(\"pageChange\", function CustomerListComponent_Template_vdr_data_table_2_pageChange_7_listener($event) {\n            return ctx.setPageNumber($event);\n          })(\"itemsPerPageChange\", function CustomerListComponent_Template_vdr_data_table_2_itemsPerPageChange_7_listener($event) {\n            return ctx.setItemsPerPage($event);\n          })(\"visibleColumnsChange\", function CustomerListComponent_Template_vdr_data_table_2_visibleColumnsChange_7_listener($event) {\n            return ctx.setVisibleColumns($event);\n          });\n          i0.ɵɵelement(12, \"vdr-bulk-action-menu\", 3)(13, \"vdr-dt2-search\", 4);\n          i0.ɵɵpipe(14, \"translate\");\n          i0.ɵɵelementStart(15, \"vdr-dt2-column\", 5);\n          i0.ɵɵpipe(16, \"translate\");\n          i0.ɵɵtemplate(17, CustomerListComponent_ng_template_17_Template, 1, 1, \"ng-template\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"vdr-dt2-column\", 6);\n          i0.ɵɵpipe(19, \"translate\");\n          i0.ɵɵtemplate(20, CustomerListComponent_ng_template_20_Template, 2, 4, \"ng-template\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"vdr-dt2-column\", 7);\n          i0.ɵɵpipe(22, \"translate\");\n          i0.ɵɵtemplate(23, CustomerListComponent_ng_template_23_Template, 2, 4, \"ng-template\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"vdr-dt2-column\", 8);\n          i0.ɵɵpipe(25, \"translate\");\n          i0.ɵɵtemplate(26, CustomerListComponent_ng_template_26_Template, 4, 6, \"ng-template\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"vdr-dt2-column\", 9);\n          i0.ɵɵpipe(28, \"translate\");\n          i0.ɵɵtemplate(29, CustomerListComponent_ng_template_29_Template, 1, 1, \"ng-template\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"vdr-dt2-column\", 10);\n          i0.ɵɵpipe(31, \"translate\");\n          i0.ɵɵtemplate(32, CustomerListComponent_ng_template_32_Template, 1, 1, \"ng-template\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(33, CustomerListComponent_vdr_dt2_custom_field_column_33_Template, 1, 2, \"vdr-dt2-custom-field-column\", 11);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"vdrIfPermissions\", \"CreateCustomer\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"id\", ctx.dataTableListId)(\"items\", i0.ɵɵpipeBind1(8, 26, ctx.items$))(\"itemsPerPage\", i0.ɵɵpipeBind1(9, 28, ctx.itemsPerPage$))(\"totalItems\", i0.ɵɵpipeBind1(10, 30, ctx.totalItems$))(\"currentPage\", i0.ɵɵpipeBind1(11, 32, ctx.currentPage$))(\"filters\", ctx.filters);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"hostComponent\", ctx)(\"selectionManager\", ctx.selectionManager);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"searchTermControl\", ctx.searchTermControl)(\"searchTermPlaceholder\", i0.ɵɵpipeBind1(14, 34, \"customer.search-customers-by-email-last-name-postal-code\"));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(16, 36, \"common.id\"))(\"hiddenByDefault\", true);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(19, 38, \"common.created-at\"))(\"hiddenByDefault\", true)(\"sort\", ctx.sorts.get(\"createdAt\"));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(22, 40, \"common.updated-at\"))(\"hiddenByDefault\", true)(\"sort\", ctx.sorts.get(\"updatedAt\"));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(25, 42, \"customer.name\"))(\"optional\", false)(\"sort\", ctx.sorts.get(\"lastName\"));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(28, 44, \"common.status\"));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"heading\", i0.ɵɵpipeBind1(31, 46, \"customer.email-address\"))(\"sort\", ctx.sorts.get(\"emailAddress\"));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.customFields);\n        }\n      },\n      dependencies: [i3.ClrIconCustomTag, i3$1.NgForOf, i2.RouterLink, i1.ActionBarComponent, i1.ActionBarLeftComponent, i1.ActionBarRightComponent, i1.ActionBarDropdownMenuComponent, i1.IfPermissionsDirective, i1.ActionBarItemsComponent, i1.BulkActionMenuComponent, i1.DataTable2Component, i1.DataTable2ColumnComponent, i1.DataTable2SearchComponent, i1.DataTableCustomFieldColumnComponent, i1.PageBlockComponent, CustomerStatusLabelComponent, i3$1.AsyncPipe, i4.TranslatePipe, i1.LocaleDatePipe],\n      styles: [\".search-input[_ngcontent-%COMP%]{margin-top:6px;min-width:300px}\"]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomerListComponent, [{\n    type: Component,\n    args: [{\n      selector: 'vdr-customer-list',\n      template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"customer-list\\\"></vdr-action-bar-items>\\r\\n            <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['./create']\\\" *vdrIfPermissions=\\\"'CreateCustomer'\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'customer.create-new-customer' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"customer-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"customer-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'customer.search-customers-by-email-last-name-postal-code' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            {{ customer.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            {{ customer.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            {{ customer.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'customer.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('lastName')\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', customer.id]\\\"\\r\\n                ><span> {{ customer.title }} {{ customer.firstName }} {{ customer.lastName }} </span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.status' | translate\\\" id=\\\"status\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            <vdr-customer-status-label [customer]=\\\"customer\\\" />\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'customer.email-address' | translate\\\" id=\\\"email-address\\\" [sort]=\\\"sorts.get('emailAddress')\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            {{ customer.emailAddress }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let field of customFields\\\" [customField]=\\\"field\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\",\n      styles: [\".search-input{margin-top:6px;min-width:300px}\\n\"]\n    }]\n  }], () => [], null);\n})();\nconst createRoutes = pageService => [{\n  path: 'customers',\n  component: PageComponent,\n  data: {\n    locationId: 'customer-list',\n    breadcrumb: marker('breadcrumb.customers')\n  },\n  children: pageService.getPageTabRoutes('customer-list')\n}, {\n  path: 'customers/:id',\n  component: PageComponent,\n  data: {\n    locationId: 'customer-detail',\n    breadcrumb: {\n      label: marker('breadcrumb.customers'),\n      link: ['../', 'customers']\n    }\n  },\n  children: pageService.getPageTabRoutes('customer-detail')\n}, {\n  path: 'groups',\n  component: PageComponent,\n  data: {\n    locationId: 'customer-group-list',\n    breadcrumb: marker('breadcrumb.customer-groups')\n  },\n  children: pageService.getPageTabRoutes('customer-group-list')\n}, {\n  path: 'groups/:id',\n  component: PageComponent,\n  data: {\n    locationId: 'customer-group-detail',\n    breadcrumb: {\n      label: marker('breadcrumb.customer-groups'),\n      link: ['../', 'groups']\n    }\n  },\n  children: pageService.getPageTabRoutes('customer-group-detail')\n}];\nfunction customerBreadcrumb(data, params) {\n  return detailBreadcrumb({\n    entity: data.entity,\n    id: params.id,\n    breadcrumbKey: 'breadcrumb.customers',\n    getName: customer => `${customer.firstName} ${customer.lastName}`,\n    route: 'customers'\n  });\n}\nclass CustomerModule {\n  static {\n    this.hasRegisteredTabsAndBulkActions = false;\n  }\n  constructor(bulkActionRegistryService, pageService) {\n    if (CustomerModule.hasRegisteredTabsAndBulkActions) {\n      return;\n    }\n    bulkActionRegistryService.registerBulkAction(deleteCustomersBulkAction);\n    bulkActionRegistryService.registerBulkAction(deleteCustomerGroupsBulkAction);\n    bulkActionRegistryService.registerBulkAction(removeCustomerGroupMembersBulkAction);\n    pageService.registerPageTab({\n      priority: 0,\n      location: 'customer-list',\n      tab: marker('customer.customers'),\n      route: '',\n      component: CustomerListComponent\n    });\n    pageService.registerPageTab({\n      priority: 0,\n      location: 'customer-detail',\n      tab: marker('customer.customer'),\n      route: '',\n      component: detailComponentWithResolver({\n        component: CustomerDetailComponent,\n        query: CustomerDetailQueryDocument,\n        entityKey: 'customer',\n        variables: {\n          orderListOptions: {\n            sort: {\n              orderPlacedAt: SortOrder.DESC\n            }\n          }\n        },\n        getBreadcrumbs: entity => [{\n          label: entity ? `${entity?.firstName} ${entity?.lastName}` : marker('customer.create-new-customer'),\n          link: [entity?.id]\n        }]\n      })\n    });\n    pageService.registerPageTab({\n      priority: 0,\n      location: 'customer-group-list',\n      tab: marker('customer.customer-groups'),\n      route: '',\n      component: CustomerGroupListComponent\n    });\n    pageService.registerPageTab({\n      priority: 0,\n      location: 'customer-group-detail',\n      tab: marker('customer.customer-group'),\n      route: '',\n      component: detailComponentWithResolver({\n        component: CustomerGroupDetailComponent,\n        query: GetCustomerGroupDetailDocument,\n        entityKey: 'customerGroup',\n        getBreadcrumbs: entity => [{\n          label: entity ? entity.name : marker('customer.create-new-customer-group'),\n          link: [entity?.id]\n        }]\n      })\n    });\n    CustomerModule.hasRegisteredTabsAndBulkActions = true;\n  }\n  static {\n    this.ɵfac = function CustomerModule_Factory(t) {\n      return new (t || CustomerModule)(i0.ɵɵinject(i1.BulkActionRegistryService), i0.ɵɵinject(i1.PageService));\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: CustomerModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [{\n        provide: ROUTES,\n        useFactory: pageService => createRoutes(pageService),\n        multi: true,\n        deps: [PageService]\n      }],\n      imports: [SharedModule, RouterModule.forChild([])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [SharedModule, RouterModule.forChild([])],\n      providers: [{\n        provide: ROUTES,\n        useFactory: pageService => createRoutes(pageService),\n        multi: true,\n        deps: [PageService]\n      }],\n      declarations: [CustomerListComponent, CustomerDetailComponent, CustomerStatusLabelComponent, AddressCardComponent, CustomerGroupListComponent, CustomerGroupDetailDialogComponent, AddCustomerToGroupDialogComponent, CustomerGroupMemberListComponent, SelectCustomerGroupDialogComponent, CustomerHistoryComponent, AddressDetailDialogComponent, CustomerHistoryEntryHostComponent, CustomerGroupDetailComponent],\n      exports: [AddressCardComponent]\n    }]\n  }], () => [{\n    type: i1.BulkActionRegistryService\n  }, {\n    type: i1.PageService\n  }], null);\n})();\n\n// This file was generated by the build-public-api.ts script\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AddCustomerToGroupDialogComponent, AddressCardComponent, AddressDetailDialogComponent, CUSTOMER_DETAIL_QUERY, CUSTOMER_GROUP_DETAIL_QUERY, CUSTOMER_LIST_QUERY, CustomerDetailComponent, CustomerGroupDetailComponent, CustomerGroupDetailDialogComponent, CustomerGroupListComponent, CustomerGroupMemberListComponent, CustomerHistoryComponent, CustomerHistoryEntryHostComponent, CustomerListComponent, CustomerModule, CustomerStatusLabelComponent, GET_CUSTOMER_GROUP_LIST, SelectCustomerGroupDialogComponent, createRoutes, customerBreadcrumb, deleteCustomerGroupsBulkAction, deleteCustomersBulkAction, removeCustomerGroupMembersBulkAction };","map":{"version":3,"names":["i0","Component","ChangeDetectionStrategy","Input","EventEmitter","Output","ViewContainerRef","ViewChild","NgModule","BehaviorSubject","Subject","combineLatest","forkJoin","from","EMPTY","of","map","startWith","distinctUntilChanged","debounceTime","tap","takeUntil","switchMap","filter","take","shareReplay","merge","mergeMap","concatMap","mapTo","i1","SelectionManager","HistoryEntryType","CUSTOMER_FRAGMENT","TypedBaseDetailComponent","getCustomFieldsDefaults","SortOrder","EditNoteDialogComponent","CustomerDetailQueryDocument","createBulkDeleteAction","Permission","CUSTOMER_GROUP_FRAGMENT","TypedBaseListComponent","GetCustomerGroupListDocument","ModalService","DataService","NotificationService","CustomerListQueryDocument","LogicalOperator","PageComponent","detailBreadcrumb","detailComponentWithResolver","GetCustomerGroupDetailDocument","SharedModule","PageService","i1$1","FormControl","Validators","UntypedFormArray","i2","ROUTES","RouterModule","i3","i3$1","i4","marker","notNullOrUndefined","gql","i3$2","CustomerStatusLabelComponent_vdr_chip_0_ng_container_1_Template","rf","ctx","ɵɵelementContainerStart","ɵɵelement","ɵɵtext","ɵɵpipe","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","CustomerStatusLabelComponent_vdr_chip_0_ng_container_2_Template","CustomerStatusLabelComponent_vdr_chip_0_Template","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵproperty","customer","user","verified","CustomerStatusLabelComponent_vdr_chip_1_Template","ɵɵtextInterpolate","_c0","a0","CustomerGroupMemberListComponent_ng_template_8_Template","customerGroup_r1","item","id","CustomerGroupMemberListComponent_ng_template_11_Template","customer_r2","ɵɵpipeBind2","createdAt","CustomerGroupMemberListComponent_ng_template_14_Template","customer_r3","CustomerGroupMemberListComponent_ng_template_17_Template","customer_r4","ɵɵpureFunction1","ɵɵtextInterpolate3","title","firstName","lastName","CustomerGroupMemberListComponent_ng_template_20_Template","customer_r5","CustomerGroupMemberListComponent_ng_template_23_Template","customer_r6","emailAddress","_c1","groupName","_c2","count","AddCustomerToGroupDialogComponent_ng_template_0_Template","group","name","AddCustomerToGroupDialogComponent_ng_template_4_Template","_r2","ɵɵgetCurrentView","ɵɵlistener","AddCustomerToGroupDialogComponent_ng_template_4_Template_button_click_0_listener","ɵɵrestoreView","ɵɵresetView","cancel","AddCustomerToGroupDialogComponent_ng_template_4_Template_button_click_3_listener","add","selectedCustomerIds","length","AddressDetailDialogComponent_ng_template_0_span_0_Template","streetLine1_r1","ngIf","AddressDetailDialogComponent_ng_template_0_span_1_Template","countryCode_r2","AddressDetailDialogComponent_ng_template_0_Template","tmp_1_0","tmp_2_0","ctx_r2","addressForm","get","value","AddressDetailDialogComponent_ng_template_2_Template","_r4","AddressDetailDialogComponent_ng_template_2_Template_button_click_0_listener","AddressDetailDialogComponent_ng_template_2_Template_button_click_3_listener","save","valid","touched","AddressCardComponent_div_0_span_3_Template","address_r1","streetLine1","AddressCardComponent_div_0_vdr_chip_6_Template","AddressCardComponent_div_0_vdr_chip_7_Template","AddressCardComponent_div_0_ng_container_14_Template","AddressCardComponent_div_0_ng_container_14_Template_button_click_1_listener","editAddress","AddressCardComponent_div_0_ng_container_14_Template_button_click_10_listener","setAsDefaultShippingAddress","AddressCardComponent_div_0_ng_container_14_Template_button_click_13_listener","setAsDefaultBillingAddress","AddressCardComponent_div_0_ng_container_14_Template_button_click_17_listener","delete","isDefaultShipping","isDefaultBilling","AddressCardComponent_div_0_Template","countryCode","editable","SelectCustomerGroupDialogComponent_ng_template_0_Template","SelectCustomerGroupDialogComponent_ng_template_3_Template","_r1","SelectCustomerGroupDialogComponent_ng_template_3_Template_span_click_0_listener","ctx_r1","item_r3","clear_r4","clear","SelectCustomerGroupDialogComponent_ng_template_4_Template","item_r5","SelectCustomerGroupDialogComponent_ng_template_5_Template","_r6","SelectCustomerGroupDialogComponent_ng_template_5_Template_button_click_0_listener","ctx_r6","SelectCustomerGroupDialogComponent_ng_template_5_Template_button_click_3_listener","selectedGroupIds","_c3","_c4","strategy","CustomerHistoryComponent_vdr_timeline_entry_1_Template","ɵɵtwoWayListener","CustomerHistoryComponent_vdr_timeline_entry_1_Template_textarea_ngModelChange_2_listener","$event","ɵɵtwoWayBindingSet","note","CustomerHistoryComponent_vdr_timeline_entry_1_Template_button_click_3_listener","addNoteToCustomer","ɵɵtwoWayProperty","CustomerHistoryComponent_ng_container_2_vdr_customer_history_entry_host_1_Template","_r3","CustomerHistoryComponent_ng_container_2_vdr_customer_history_entry_host_1_Template_vdr_customer_history_entry_host_expandClick_0_listener","expanded","entry_r4","$implicit","CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_2_ng_container_4_Template","CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_2_ng_template_5_Template","data","CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_2_Template","ɵɵtemplateRefExtractor","namedStrategy_r5","ɵɵreference","CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_3_ng_container_4_Template","CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_3_ng_template_5_Template","CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_3_Template","namedStrategy_r6","CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_4_Template","input","CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_5_Template","CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_6_Template","CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_7_Template","address","CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_8_Template","CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_9_Template","CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_10_Template","CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_11_Template","CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_12_Template","CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_13_Template","oldEmailAddress","newEmailAddress","CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_14_Template","CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_15_Template","_r7","CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_15_Template_button_click_9_listener","updateNote","emit","CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_15_Template_button_click_15_listener","deleteNote","CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_16_vdr_history_entry_detail_4_Template","CustomerHistoryComponent_ng_container_2_ng_template_2_ng_container_16_Template","type","CustomerHistoryComponent_ng_container_2_ng_template_2_Template","getDisplayType","getTimelineIcon","getName","isFeatured","CUSTOMER_REGISTERED","CUSTOMER_VERIFIED","CUSTOMER_DETAIL_UPDATED","CUSTOMER_ADDED_TO_GROUP","CUSTOMER_REMOVED_FROM_GROUP","CUSTOMER_ADDRESS_CREATED","CUSTOMER_ADDRESS_UPDATED","CUSTOMER_ADDRESS_DELETED","CUSTOMER_PASSWORD_UPDATED","CUSTOMER_PASSWORD_RESET_REQUESTED","CUSTOMER_PASSWORD_RESET_VERIFIED","CUSTOMER_EMAIL_UPDATE_REQUESTED","CUSTOMER_EMAIL_UPDATE_VERIFIED","CUSTOMER_NOTE","CustomerHistoryComponent_ng_container_2_Template","defaultComponents_r8","hasCustomComponent","_c5","_c6","CustomerDetailComponent_button_5_Template","CustomerDetailComponent_button_5_Template_button_click_0_listener","create","addressDefaultsUpdated","detailForm","dirty","CustomerDetailComponent_ng_template_7_button_0_Template","CustomerDetailComponent_ng_template_7_button_0_Template_button_click_0_listener","CustomerDetailComponent_ng_template_7_Template","CustomerDetailComponent_vdr_card_12_vdr_labeled_data_2_Template","lastLogin_r4","CustomerDetailComponent_vdr_card_12_Template","lastLogin","CustomerDetailComponent_vdr_card_14_div_2_vdr_chip_1_Template","CustomerDetailComponent_vdr_card_14_div_2_vdr_chip_1_Template_vdr_chip_iconClick_0_listener","group_r7","removeFromGroup","CustomerDetailComponent_vdr_card_14_div_2_Template","groups_r8","CustomerDetailComponent_vdr_card_14_ng_template_3_Template","CustomerDetailComponent_vdr_card_14_button_6_Template","_r9","CustomerDetailComponent_vdr_card_14_button_6_Template_button_click_0_listener","addToGroup","CustomerDetailComponent_vdr_card_14_Template","noGroups_r10","CustomerDetailComponent_vdr_page_entity_info_17_Template","entity_r11","CustomerDetailComponent_vdr_form_field_44_Template","CustomerDetailComponent_vdr_card_46_Template","customFields","CustomerDetailComponent_ng_container_48_vdr_address_card_4_Template","_r13","CustomerDetailComponent_ng_container_48_vdr_address_card_4_Template_vdr_address_card_setAsDefaultBilling_0_listener","setDefaultBillingAddressId","CustomerDetailComponent_ng_container_48_vdr_address_card_4_Template_vdr_address_card_setAsDefaultShipping_0_listener","setDefaultShippingAddressId","CustomerDetailComponent_ng_container_48_vdr_address_card_4_Template_vdr_address_card_deleteAddress_0_listener","toggleDeleteAddress","addressForm_r14","ɵɵclassProp","addressesToDeleteIds","has","availableCountries$","defaultBillingAddressId","defaultShippingAddressId","addressCustomFields","ɵɵpureFunction0","CustomerDetailComponent_ng_container_48_button_5_Template","_r15","CustomerDetailComponent_ng_container_48_button_5_Template_button_click_0_listener","addAddress","CustomerDetailComponent_ng_container_48_ng_template_14_Template","order_r16","CustomerDetailComponent_ng_container_48_ng_template_17_Template","order_r17","CustomerDetailComponent_ng_container_48_ng_template_20_Template","order_r18","code","CustomerDetailComponent_ng_container_48_ng_template_23_Template","order_r19","CustomerDetailComponent_ng_container_48_ng_template_26_Template","order_r20","state","CustomerDetailComponent_ng_container_48_ng_template_29_Template","order_r21","totalWithTax","currencyCode","CustomerDetailComponent_ng_container_48_ng_template_32_Template","order_r22","updatedAt","CustomerDetailComponent_ng_container_48_ng_template_35_Template","order_r23","orderPlacedAt","CustomerDetailComponent_ng_container_48_vdr_dt2_custom_field_column_36_Template","customField_r24","CustomerDetailComponent_ng_container_48_Template","_r12","CustomerDetailComponent_ng_container_48_Template_vdr_data_table_2_itemsPerPageChange_8_listener","setOrderItemsPerPage","CustomerDetailComponent_ng_container_48_Template_vdr_data_table_2_pageChange_8_listener","setOrderCurrentPage","CustomerDetailComponent_ng_container_48_Template_vdr_customer_history_addNote_39_listener","CustomerDetailComponent_ng_container_48_Template_vdr_customer_history_updateNote_39_listener","CustomerDetailComponent_ng_container_48_Template_vdr_customer_history_deleteNote_39_listener","getAddressFormControls","orders$","ordersPerPage","ordersCount$","currentOrdersPage","entity$","history$","CustomerGroupDetailComponent_button_5_Template","CustomerGroupDetailComponent_button_5_Template_button_click_0_listener","CustomerGroupDetailComponent_ng_template_7_button_0_Template","CustomerGroupDetailComponent_ng_template_7_button_0_Template_button_click_0_listener","CustomerGroupDetailComponent_ng_template_7_Template","CustomerGroupDetailComponent_vdr_card_13_Template","entity_r4","CustomerGroupDetailComponent_vdr_card_21_Template","_c7","CustomerGroupDetailDialogComponent_ng_template_0_span_0_Template","CustomerGroupDetailDialogComponent_ng_template_0_span_1_Template","CustomerGroupDetailDialogComponent_ng_template_0_Template","CustomerGroupDetailDialogComponent_section_6_Template","form","CustomerGroupDetailDialogComponent_ng_template_7_span_4_Template","CustomerGroupDetailDialogComponent_ng_template_7_span_5_Template","CustomerGroupDetailDialogComponent_ng_template_7_Template","CustomerGroupDetailDialogComponent_ng_template_7_Template_button_click_0_listener","CustomerGroupDetailDialogComponent_ng_template_7_Template_button_click_3_listener","_c8","_c9","_c10","contents","CustomerGroupListComponent_a_5_Template","CustomerGroupListComponent_ng_template_9_ng_template_11_Template","customerGroup_r3","CustomerGroupListComponent_ng_template_9_ng_template_14_Template","customerGroup_r4","CustomerGroupListComponent_ng_template_9_ng_template_17_Template","customerGroup_r5","CustomerGroupListComponent_ng_template_9_ng_template_20_Template","customerGroup_r6","CustomerGroupListComponent_ng_template_9_vdr_dt2_custom_field_column_21_Template","field_r7","sorts","CustomerGroupListComponent_ng_template_9_ng_template_24_Template","customerGroup_r8","CustomerGroupListComponent_ng_template_9_Template","CustomerGroupListComponent_ng_template_9_Template_vdr_data_table_2_pageChange_0_listener","setPageNumber","CustomerGroupListComponent_ng_template_9_Template_vdr_data_table_2_itemsPerPageChange_0_listener","setItemsPerPage","CustomerGroupListComponent_ng_template_9_Template_vdr_data_table_2_visibleColumnsChange_0_listener","setVisibleColumns","dataTableListId","items$","itemsPerPage$","totalItems$","currentPage$","filters","activeIndex$","selectionManager","searchTermControl","CustomerGroupListComponent_ng_template_10_ng_container_0_Template","CustomerGroupListComponent_ng_template_10_ng_container_0_Template_button_click_1_listener","activeGroup_r10","CustomerGroupListComponent_ng_template_10_ng_container_0_Template_vdr_customer_group_member_list_fetchParamsChange_6_listener","fetchGroupMembers$","next","members$","route","membersTotal$","activeGroup$","CustomerGroupListComponent_ng_template_10_Template","_c11","CustomerListComponent_a_5_Template","CustomerListComponent_ng_template_17_Template","customer_r1","CustomerListComponent_ng_template_20_Template","CustomerListComponent_ng_template_23_Template","CustomerListComponent_ng_template_26_Template","CustomerListComponent_ng_template_29_Template","CustomerListComponent_ng_template_32_Template","CustomerListComponent_vdr_dt2_custom_field_column_33_Template","ctx_r7","CustomerStatusLabelComponent","ɵfac","CustomerStatusLabelComponent_Factory","t","ɵcmp","ɵɵdefineComponent","selectors","inputs","decls","vars","consts","template","CustomerStatusLabelComponent_Template","dependencies","ClrIconCustomTag","NgIf","ChipComponent","TranslatePipe","styles","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","OnPush","CustomerGroupMemberListComponent","constructor","router","dataService","selectedMemberIds","selectionChange","fetchParamsChange","filterTermControl","multiSelect","itemsAreEqual","a","b","additiveMode","refresh$","destroy$","ngOnInit","membersCurrentPage$","paramMap","pipe","qpm","page","membersItemsPerPage$","perPage","filterTerm$","valueChanges","setContentsPageNumber","subscribe","currentPage","itemsPerPage","filterTerm","skip","setCurrentItems","members","m","includes","selectionChanges$","selection","s","ngOnDestroy","complete","setParam","setContentsItemsPerPage","refresh","key","navigate","snapshot","params","relativeTo","queryParamsHandling","CustomerGroupMemberListComponent_Factory","ɵɵdirectiveInject","Router","locationId","totalItems","activeGroup","outputs","CustomerGroupMemberListComponent_Template","CustomerGroupMemberListComponent_Template_vdr_data_table_2_pageChange_0_listener","CustomerGroupMemberListComponent_Template_vdr_data_table_2_itemsPerPageChange_0_listener","RouterLink","BulkActionMenuComponent","DataTable2Component","DataTable2ColumnComponent","DataTable2SearchComponent","AsyncPipe","LocaleDatePipe","AddCustomerToGroupDialogComponent","customerResult$","getCustomerList","mapStream","res","customers","customers$","items","customersTotal$","resolveWith","AddCustomerToGroupDialogComponent_Factory","AddCustomerToGroupDialogComponent_Template","AddCustomerToGroupDialogComponent_Template_vdr_customer_group_member_list_fetchParamsChange_1_listener","AddCustomerToGroupDialogComponent_Template_vdr_customer_group_member_list_selectionChange_1_listener","DialogButtonsDirective","DialogTitleDirective","AddressDetailDialogComponent","changeDetector","availableCountries","markForCheck","AddressDetailDialogComponent_Factory","ChangeDetectorRef","AddressDetailDialogComponent_Template","NgControlStatusGroup","FormGroupDirective","AddressFormComponent","AddressCardComponent","modalService","setAsDefaultShipping","setAsDefaultBilling","deleteAddress","dataDependenciesPopulated","ngOnChanges","changes","getCountryName","match","find","c","markAsDirty","fromComponent","locals","size","closable","AddressCardComponent_Factory","features","ɵɵNgOnChangesFeature","AddressCardComponent_Template","DropdownComponent","DropdownMenuComponent","DropdownTriggerDirective","DropdownItemDirective","FormattedAddressComponent","EntityInfoComponent","SelectCustomerGroupDialogComponent","groups$","getCustomerGroupList","customerGroups","SelectCustomerGroupDialogComponent_Factory","SelectCustomerGroupDialogComponent_Template","SelectCustomerGroupDialogComponent_Template_ng_select_ngModelChange_1_listener","NgControlStatus","NgModel","NgSelectComponent","NgOptionTemplateDirective","NgLabelTemplateDirective","CustomerHistoryEntryHostComponent","historyEntryComponentService","expandClick","componentType","getComponent","entry","componentRef","portalRef","createComponent","instance","destroy","CustomerHistoryEntryHostComponent_Factory","HistoryEntryComponentService","viewQuery","CustomerHistoryEntryHostComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","exportAs","CustomerHistoryEntryHostComponent_Template","CustomerHistoryEntryHostComponent_Template_vdr_timeline_entry_expandClick_0_listener","getIconShape","TimelineEntryComponent","encapsulation","static","read","CustomerHistoryComponent","addNote","administrator","CustomerHistoryComponent_Factory","history","CustomerHistoryComponent_Template","NgForOf","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","FormFieldControlDirective","LabeledDataComponent","ObjectTreeComponent","IfPermissionsDirective","HistoryEntryDetailComponent","HasPermissionPipe","CUSTOMER_DETAIL_QUERY","CustomerDetailComponent","formBuilder","notificationService","getCustomFieldConfig","required","phoneNumber","email","password","addresses","fetchHistory","Set","orderListUpdates$","init","settings","getAvailableCountries","mapSingle","result","countries","customerWithUpdates$","orders","getCustomerHistory","sort","DESC","formArray","controls","addressFormArray","newAddress","fullName","company","streetLine2","city","province","postalCode","defaultShippingAddress","defaultBillingAddress","reduce","hash","field","push","fetchOrdersList","customerForm","createCustomer","__typename","success","entity","notify","message","translationVars","duration","markAsPristine","error","saveOperations","formValue","updateCustomer","addressControl","createCustomerAddress","deleteCustomerAddress","updateCustomerAddress","notified","refreshCustomer","err","groupIds","groupId","addCustomersToGroup","customerCount","dialog","buttons","label","returnValue","response","removeCustomersFromGroup","displayPrivacyControls","updateCustomerNote","noteId","body","deleteCustomerNote","setFormValues","customerGroup","patchValue","addressesArray","rest","addressGroup","country","setControl","setCustomFieldFormValues","query","orderListOptions","single$","CustomerDetailComponent_Factory","FormBuilder","ɵɵInheritDefinitionFeature","CustomerDetailComponent_Template","tmp_4_0","updateButton_r25","isNew$","groups","ɵNgNoValidate","FormControlName","FormGroupName","ActionBarComponent","ActionBarLeftComponent","ActionBarRightComponent","ActionBarDropdownMenuComponent","FormFieldComponent","OrderStateLabelComponent","ActionBarItemsComponent","TabbedCustomFieldsComponent","CustomDetailComponentHostComponent","DataTableCustomFieldColumnComponent","PageBlockComponent","PageEntityInfoComponent","PageDetailLayoutComponent","PageDetailSidebarComponent","CardComponent","TimeAgoPipe","LocaleCurrencyPipe","CUSTOMER_GROUP_DETAIL_QUERY","CustomerGroupDetailComponent","formvalue","createCustomerGroup","customerIds","updateCustomerGroup","customFieldsGroup","CustomerGroupDetailComponent_Factory","CustomerGroupDetailComponent_Template","updateButton_r5","CustomerGroupDetailDialogComponent","serverConfigService","getCustomFieldsFor","fieldDef","control","CustomerGroupDetailDialogComponent_Factory","ServerConfigService","UntypedFormBuilder","CustomerGroupDetailDialogComponent_Template","ClrLabel","deleteCustomerGroupsBulkAction","location","requiresPermission","userPermissions","DeleteCustomerGroup","getItemName","bulkDelete","ids","deleteCustomerGroups","GET_CUSTOMER_GROUP_LIST","CustomerGroupListComponent","createFilterCollection","addIdFilter","addDateFilters","addFilter","kind","filterField","connectToRoute","createSortCollection","defaultSort","addSort","refreshActiveGroupMembers$","undefined","configure","document","getItems","setVariables","options","contains","createFilterInput","createSortInput","refreshListOnChanges","activeGroupId$","pm","listIsEmpty$","activeGroupId","g","findIndex","membersResult$","getCustomerGroupWithCustomers","closeMembers","verticalAlign","CustomerGroupListComponent_Factory","ActivatedRoute","CustomerGroupListComponent_Template","CustomerGroupListComponent_Template_vdr_split_view_closeClicked_7_listener","SplitViewComponent","SplitViewLeftDirective","SplitViewRightDirective","removeCustomerGroupMembersBulkAction","icon","iconClass","UpdateCustomerGroup","onClick","injector","hostComponent","clearSelection","deleteCustomersBulkAction","DeleteCustomer","deleteCustomers","CUSTOMER_LIST_QUERY","CustomerListComponent","addCustomFieldFilters","addCustomFieldSorts","filterOperator","OR","AND","CustomerListComponent_Factory","CustomerListComponent_Template","CustomerListComponent_Template_vdr_data_table_2_pageChange_7_listener","CustomerListComponent_Template_vdr_data_table_2_itemsPerPageChange_7_listener","CustomerListComponent_Template_vdr_data_table_2_visibleColumnsChange_7_listener","createRoutes","pageService","path","component","breadcrumb","children","getPageTabRoutes","link","customerBreadcrumb","breadcrumbKey","CustomerModule","hasRegisteredTabsAndBulkActions","bulkActionRegistryService","registerBulkAction","registerPageTab","priority","tab","entityKey","variables","getBreadcrumbs","CustomerModule_Factory","ɵɵinject","BulkActionRegistryService","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","provide","useFactory","multi","deps","imports","forChild","declarations","exports"],"sources":["/Users/peluche/Documents/NoursStuffs/CerisePeyi/dev/2k24/last/vendure-one-click-deploy/node_modules/@vendure/admin-ui/fesm2022/vendure-admin-ui-customer.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, Input, EventEmitter, Output, ViewContainerRef, ViewChild, NgModule } from '@angular/core';\nimport { BehaviorSubject, Subject, combineLatest, forkJoin, from, EMPTY, of } from 'rxjs';\nimport { map, startWith, distinctUntilChanged, debounceTime, tap, takeUntil, switchMap, filter, take, shareReplay, merge, mergeMap, concatMap, mapTo } from 'rxjs/operators';\nimport * as i1 from '@vendure/admin-ui/core';\nimport { SelectionManager, HistoryEntryType, CUSTOMER_FRAGMENT, TypedBaseDetailComponent, getCustomFieldsDefaults, SortOrder, EditNoteDialogComponent, CustomerDetailQueryDocument, createBulkDeleteAction, Permission, CUSTOMER_GROUP_FRAGMENT, TypedBaseListComponent, GetCustomerGroupListDocument, ModalService, DataService, NotificationService, CustomerListQueryDocument, LogicalOperator, PageComponent, detailBreadcrumb, detailComponentWithResolver, GetCustomerGroupDetailDocument, SharedModule, PageService } from '@vendure/admin-ui/core';\nimport * as i1$1 from '@angular/forms';\nimport { FormControl, Validators, UntypedFormArray } from '@angular/forms';\nimport * as i2 from '@angular/router';\nimport { ROUTES, RouterModule } from '@angular/router';\nimport * as i3 from '@clr/angular';\nimport * as i3$1 from '@angular/common';\nimport * as i4 from '@ngx-translate/core';\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\nimport { gql } from 'apollo-angular';\nimport * as i3$2 from '@ng-select/ng-select';\n\nclass CustomerStatusLabelComponent {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CustomerStatusLabelComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: CustomerStatusLabelComponent, selector: \"vdr-customer-status-label\", inputs: { customer: \"customer\" }, ngImport: i0, template: \"<vdr-chip *ngIf=\\\"customer.user?.id\\\">\\r\\n    <ng-container *ngIf=\\\"customer.user?.verified\\\">\\r\\n        <clr-icon shape=\\\"check-circle\\\" class=\\\"verified-user-icon\\\"></clr-icon>\\r\\n        {{ 'customer.verified' | translate }}\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"!customer.user?.verified\\\">\\r\\n        <clr-icon shape=\\\"check-circle\\\" class=\\\"registered-user-icon\\\"></clr-icon>\\r\\n        {{ 'customer.registered' | translate }}\\r\\n    </ng-container>\\r\\n</vdr-chip>\\r\\n<vdr-chip *ngIf=\\\"!customer.user?.id\\\">{{ 'customer.guest' | translate }}</vdr-chip>\\r\\n\", styles: [\".registered-user-icon{color:var(--color-grey-300)}.verified-user-icon{color:var(--color-success-500)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CustomerStatusLabelComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-customer-status-label', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-chip *ngIf=\\\"customer.user?.id\\\">\\r\\n    <ng-container *ngIf=\\\"customer.user?.verified\\\">\\r\\n        <clr-icon shape=\\\"check-circle\\\" class=\\\"verified-user-icon\\\"></clr-icon>\\r\\n        {{ 'customer.verified' | translate }}\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"!customer.user?.verified\\\">\\r\\n        <clr-icon shape=\\\"check-circle\\\" class=\\\"registered-user-icon\\\"></clr-icon>\\r\\n        {{ 'customer.registered' | translate }}\\r\\n    </ng-container>\\r\\n</vdr-chip>\\r\\n<vdr-chip *ngIf=\\\"!customer.user?.id\\\">{{ 'customer.guest' | translate }}</vdr-chip>\\r\\n\", styles: [\".registered-user-icon{color:var(--color-grey-300)}.verified-user-icon{color:var(--color-success-500)}\\n\"] }]\n        }], propDecorators: { customer: [{\n                type: Input\n            }] } });\n\nclass CustomerGroupMemberListComponent {\n    constructor(router, dataService) {\n        this.router = router;\n        this.dataService = dataService;\n        this.selectedMemberIds = [];\n        this.selectionChange = new EventEmitter();\n        this.fetchParamsChange = new EventEmitter();\n        this.filterTermControl = new FormControl('');\n        this.selectionManager = new SelectionManager({\n            multiSelect: true,\n            itemsAreEqual: (a, b) => a.id === b.id,\n            additiveMode: true,\n        });\n        this.refresh$ = new BehaviorSubject(true);\n        this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n        this.membersCurrentPage$ = this.route.paramMap.pipe(map(qpm => qpm.get('membersPage')), map(page => (!page ? 1 : +page)), startWith(1), distinctUntilChanged());\n        this.membersItemsPerPage$ = this.route.paramMap.pipe(map(qpm => qpm.get('membersPerPage')), map(perPage => (!perPage ? 10 : +perPage)), startWith(10), distinctUntilChanged());\n        const filterTerm$ = this.filterTermControl.valueChanges.pipe(debounceTime(250), tap(() => this.setContentsPageNumber(1)), startWith(''));\n        combineLatest(this.membersCurrentPage$, this.membersItemsPerPage$, filterTerm$, this.refresh$)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(([currentPage, itemsPerPage, filterTerm]) => {\n            const take = itemsPerPage;\n            const skip = (currentPage - 1) * itemsPerPage;\n            this.fetchParamsChange.emit({\n                filterTerm: filterTerm ?? '',\n                skip,\n                take,\n            });\n        });\n        this.selectionManager.setCurrentItems(this.members?.filter(m => this.selectedMemberIds.includes(m.id)) ?? []);\n        this.selectionManager.selectionChanges$.pipe(takeUntil(this.destroy$)).subscribe(selection => {\n            this.selectionChange.emit(selection.map(s => s.id));\n        });\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    setContentsPageNumber(page) {\n        this.setParam('membersPage', page);\n    }\n    setContentsItemsPerPage(perPage) {\n        this.setParam('membersPerPage', perPage);\n    }\n    refresh() {\n        this.refresh$.next(true);\n    }\n    setParam(key, value) {\n        this.router.navigate(['./', { ...this.route.snapshot.params, [key]: value }], {\n            relativeTo: this.route,\n            queryParamsHandling: 'merge',\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CustomerGroupMemberListComponent, deps: [{ token: i2.Router }, { token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: CustomerGroupMemberListComponent, selector: \"vdr-customer-group-member-list\", inputs: { locationId: \"locationId\", members: \"members\", totalItems: \"totalItems\", route: \"route\", selectedMemberIds: \"selectedMemberIds\", activeGroup: \"activeGroup\" }, outputs: { selectionChange: \"selectionChange\", fetchParamsChange: \"fetchParamsChange\" }, ngImport: i0, template: \"<vdr-data-table-2\\r\\n    [id]=\\\"locationId\\\"\\r\\n    [items]=\\\"members\\\"\\r\\n    [itemsPerPage]=\\\"membersItemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems\\\"\\r\\n    [currentPage]=\\\"membersCurrentPage$ | async\\\"\\r\\n    (pageChange)=\\\"setContentsPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setContentsItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        [locationId]=\\\"locationId\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"filterTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'customer.search-customers-by-email' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-customerGroup=\\\"item\\\">\\r\\n            {{ customerGroup.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            {{ customer.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            {{ customer.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'customer.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/customer/customers', customer.id]\\\"\\r\\n                ><span> {{ customer.title }} {{ customer.firstName }} {{ customer.lastName }} </span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.status' | translate\\\" id=\\\"status\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            <vdr-customer-status-label [customer]=\\\"customer\\\" />\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'customer.email-address' | translate\\\" id=\\\"email-address\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            {{ customer.emailAddress }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: CustomerStatusLabelComponent, selector: \"vdr-customer-status-label\", inputs: [\"customer\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CustomerGroupMemberListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-customer-group-member-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-data-table-2\\r\\n    [id]=\\\"locationId\\\"\\r\\n    [items]=\\\"members\\\"\\r\\n    [itemsPerPage]=\\\"membersItemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems\\\"\\r\\n    [currentPage]=\\\"membersCurrentPage$ | async\\\"\\r\\n    (pageChange)=\\\"setContentsPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setContentsItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        [locationId]=\\\"locationId\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"filterTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'customer.search-customers-by-email' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-customerGroup=\\\"item\\\">\\r\\n            {{ customerGroup.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            {{ customer.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            {{ customer.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'customer.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/customer/customers', customer.id]\\\"\\r\\n                ><span> {{ customer.title }} {{ customer.firstName }} {{ customer.lastName }} </span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.status' | translate\\\" id=\\\"status\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            <vdr-customer-status-label [customer]=\\\"customer\\\" />\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'customer.email-address' | translate\\\" id=\\\"email-address\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            {{ customer.emailAddress }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-data-table-2>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i2.Router }, { type: i1.DataService }], propDecorators: { locationId: [{\n                type: Input\n            }], members: [{\n                type: Input\n            }], totalItems: [{\n                type: Input\n            }], route: [{\n                type: Input\n            }], selectedMemberIds: [{\n                type: Input\n            }], activeGroup: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], fetchParamsChange: [{\n                type: Output\n            }] } });\n\nclass AddCustomerToGroupDialogComponent {\n    constructor(dataService) {\n        this.dataService = dataService;\n        this.selectedCustomerIds = [];\n        this.fetchGroupMembers$ = new BehaviorSubject({\n            skip: 0,\n            take: 10,\n            filterTerm: '',\n        });\n    }\n    ngOnInit() {\n        const customerResult$ = this.fetchGroupMembers$.pipe(switchMap(({ skip, take, filterTerm }) => this.dataService.customer\n            .getCustomerList(take, skip, filterTerm)\n            .mapStream(res => res.customers)));\n        this.customers$ = customerResult$.pipe(map(res => res.items));\n        this.customersTotal$ = customerResult$.pipe(map(res => res.totalItems));\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    add() {\n        this.resolveWith(this.selectedCustomerIds);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: AddCustomerToGroupDialogComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: AddCustomerToGroupDialogComponent, selector: \"vdr-add-customer-to-group-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'customer.add-customers-to-group-with-name' | translate: {groupName: group.name} }}\\r\\n</ng-template>\\r\\n\\r\\n<vdr-customer-group-member-list\\r\\n    locationId=\\\"customer-group-members-picker-list\\\"\\r\\n    [members]=\\\"customers$ | async\\\"\\r\\n    [totalItems]=\\\"customersTotal$ | async\\\"\\r\\n    [route]=\\\"route\\\"\\r\\n    [selectedMemberIds]=\\\"selectedCustomerIds\\\"\\r\\n    (fetchParamsChange)=\\\"fetchGroupMembers$.next($event)\\\"\\r\\n    (selectionChange)=\\\"selectedCustomerIds = $event\\\"\\r\\n/>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"add()\\\" [disabled]=\\\"!selectedCustomerIds.length\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'customer.add-customers-to-group-with-count' | translate: {count: selectedCustomerIds.length} }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: CustomerGroupMemberListComponent, selector: \"vdr-customer-group-member-list\", inputs: [\"locationId\", \"members\", \"totalItems\", \"route\", \"selectedMemberIds\", \"activeGroup\"], outputs: [\"selectionChange\", \"fetchParamsChange\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: AddCustomerToGroupDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-add-customer-to-group-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'customer.add-customers-to-group-with-name' | translate: {groupName: group.name} }}\\r\\n</ng-template>\\r\\n\\r\\n<vdr-customer-group-member-list\\r\\n    locationId=\\\"customer-group-members-picker-list\\\"\\r\\n    [members]=\\\"customers$ | async\\\"\\r\\n    [totalItems]=\\\"customersTotal$ | async\\\"\\r\\n    [route]=\\\"route\\\"\\r\\n    [selectedMemberIds]=\\\"selectedCustomerIds\\\"\\r\\n    (fetchParamsChange)=\\\"fetchGroupMembers$.next($event)\\\"\\r\\n    (selectionChange)=\\\"selectedCustomerIds = $event\\\"\\r\\n/>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"add()\\\" [disabled]=\\\"!selectedCustomerIds.length\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'customer.add-customers-to-group-with-count' | translate: {count: selectedCustomerIds.length} }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i1.DataService }] });\n\nclass AddressDetailDialogComponent {\n    constructor(changeDetector) {\n        this.changeDetector = changeDetector;\n        this.availableCountries = [];\n    }\n    ngOnInit() {\n        this.addressForm.valueChanges.subscribe(() => this.changeDetector.markForCheck());\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    save() {\n        this.resolveWith(this.addressForm);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: AddressDetailDialogComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: AddressDetailDialogComponent, selector: \"vdr-address-detail-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    <span *ngIf=\\\"addressForm.get('streetLine1')?.value as streetLine1\\\">{{ streetLine1 }},</span>\\r\\n    <span *ngIf=\\\"addressForm.get('countryCode')?.value as countryCode\\\"> {{ countryCode }}</span>\\r\\n</ng-template>\\r\\n\\r\\n<vdr-address-form\\r\\n    [formGroup]=\\\"addressForm\\\"\\r\\n    [availableCountries]=\\\"availableCountries\\\"\\r\\n    [customFields]=\\\"customFields\\\"\\r\\n></vdr-address-form>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"save()\\\"\\r\\n        [disabled]=\\\"!addressForm.valid || !addressForm.touched\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'common.update' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"clr-input-container{margin-bottom:12px}\\n\"], dependencies: [{ kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i1$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: i1.AddressFormComponent, selector: \"vdr-address-form\", inputs: [\"customFields\", \"formGroup\", \"availableCountries\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: AddressDetailDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-address-detail-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    <span *ngIf=\\\"addressForm.get('streetLine1')?.value as streetLine1\\\">{{ streetLine1 }},</span>\\r\\n    <span *ngIf=\\\"addressForm.get('countryCode')?.value as countryCode\\\"> {{ countryCode }}</span>\\r\\n</ng-template>\\r\\n\\r\\n<vdr-address-form\\r\\n    [formGroup]=\\\"addressForm\\\"\\r\\n    [availableCountries]=\\\"availableCountries\\\"\\r\\n    [customFields]=\\\"customFields\\\"\\r\\n></vdr-address-form>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"save()\\\"\\r\\n        [disabled]=\\\"!addressForm.valid || !addressForm.touched\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'common.update' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"clr-input-container{margin-bottom:12px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }] });\n\nclass AddressCardComponent {\n    constructor(modalService, changeDetector) {\n        this.modalService = modalService;\n        this.changeDetector = changeDetector;\n        this.availableCountries = [];\n        this.editable = true;\n        this.setAsDefaultShipping = new EventEmitter();\n        this.setAsDefaultBilling = new EventEmitter();\n        this.deleteAddress = new EventEmitter();\n        this.dataDependenciesPopulated = new BehaviorSubject(false);\n    }\n    ngOnInit() {\n        const streetLine1 = this.addressForm.get('streetLine1');\n        // Make the address dialog display automatically if there is no address line\n        // as is the case when adding a new address.\n        if (!streetLine1.value) {\n            this.dataDependenciesPopulated\n                .pipe(filter(value => value), take(1))\n                .subscribe(() => {\n                this.editAddress();\n            });\n        }\n    }\n    ngOnChanges(changes) {\n        if (this.customFields != null && this.availableCountries != null) {\n            this.dataDependenciesPopulated.next(true);\n        }\n    }\n    getCountryName(countryCode) {\n        if (!this.availableCountries) {\n            return '';\n        }\n        const match = this.availableCountries.find(c => c.code === countryCode);\n        return match ? match.name : '';\n    }\n    setAsDefaultBillingAddress() {\n        this.setAsDefaultBilling.emit(this.addressForm.value.id);\n        this.addressForm.markAsDirty();\n    }\n    setAsDefaultShippingAddress() {\n        this.setAsDefaultShipping.emit(this.addressForm.value.id);\n        this.addressForm.markAsDirty();\n    }\n    delete() {\n        this.deleteAddress.emit(this.addressForm.value.id);\n        this.addressForm.markAsDirty();\n    }\n    editAddress() {\n        this.modalService\n            .fromComponent(AddressDetailDialogComponent, {\n            locals: {\n                addressForm: this.addressForm,\n                customFields: this.customFields,\n                availableCountries: this.availableCountries,\n            },\n            size: 'md',\n            closable: true,\n        })\n            .subscribe(() => {\n            this.changeDetector.markForCheck();\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: AddressCardComponent, deps: [{ token: i1.ModalService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: AddressCardComponent, selector: \"vdr-address-card\", inputs: { addressForm: \"addressForm\", customFields: \"customFields\", availableCountries: \"availableCountries\", isDefaultBilling: \"isDefaultBilling\", isDefaultShipping: \"isDefaultShipping\", editable: \"editable\" }, outputs: { setAsDefaultShipping: \"setAsDefaultShipping\", setAsDefaultBilling: \"setAsDefaultBilling\", deleteAddress: \"deleteAddress\" }, usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"card\\\" *ngIf=\\\"addressForm.value as address\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        <div class=\\\"address-title\\\">\\r\\n            <span class=\\\"street-line\\\" *ngIf=\\\"address.streetLine1\\\">{{ address.streetLine1 }},</span>\\r\\n            {{ address.countryCode }}\\r\\n        </div>\\r\\n        <div class=\\\"default-controls\\\">\\r\\n            <vdr-chip class=\\\"is-default p8\\\" *ngIf=\\\"isDefaultShipping\\\">\\r\\n                <clr-icon shape=\\\"truck\\\"></clr-icon>\\r\\n                {{ 'customer.default-shipping-address' | translate }}\\r\\n            </vdr-chip>\\r\\n            <vdr-chip class=\\\"is-default p8\\\" *ngIf=\\\"isDefaultBilling\\\">\\r\\n                <clr-icon shape=\\\"credit-card\\\"></clr-icon>\\r\\n                {{ 'customer.default-billing-address' | translate }}\\r\\n            </vdr-chip>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <div class=\\\"card-text\\\">\\r\\n            <vdr-formatted-address [address]=\\\"address\\\"></vdr-formatted-address>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\">\\r\\n        <div class=\\\"address-actions\\\">\\r\\n            <vdr-entity-info [entity]=\\\"address\\\"></vdr-entity-info>\\r\\n            <ng-container *ngIf=\\\"editable\\\">\\r\\n                <button class=\\\"button-small\\\" (click)=\\\"editAddress()\\\">\\r\\n                    {{ 'common.edit' | translate }}\\r\\n                </button>\\r\\n                <vdr-dropdown>\\r\\n                    <button type=\\\"button\\\" class=\\\"button-small\\\" vdrDropdownTrigger>\\r\\n                        {{ 'common.more' | translate }}\\r\\n                        <clr-icon shape=\\\"ellipsis-vertical\\\" size=\\\"12\\\"></clr-icon>\\r\\n                    </button>\\r\\n                    <vdr-dropdown-menu>\\r\\n                        <button\\r\\n                            vdrDropdownItem\\r\\n                            [disabled]=\\\"isDefaultShipping\\\"\\r\\n                            (click)=\\\"setAsDefaultShippingAddress()\\\"\\r\\n                        >\\r\\n                            {{ 'customer.set-as-default-shipping-address' | translate }}\\r\\n                        </button>\\r\\n                        <button\\r\\n                            vdrDropdownItem\\r\\n                            [disabled]=\\\"isDefaultBilling\\\"\\r\\n                            (click)=\\\"setAsDefaultBillingAddress()\\\"\\r\\n                        >\\r\\n                            {{ 'customer.set-as-default-billing-address' | translate }}\\r\\n                        </button>\\r\\n                        <div class=\\\"dropdown-divider\\\"></div>\\r\\n                        <button type=\\\"button\\\" (click)=\\\"delete()\\\" vdrDropdownItem>\\r\\n                            <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                            {{ 'common.delete' | translate }}\\r\\n                        </button>\\r\\n                    </vdr-dropdown-menu>\\r\\n                </vdr-dropdown>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block;max-width:360px}clr-input-container{margin-bottom:12px}.defaul-controls{display:flex}.is-default{margin:0;color:var(--color-success-500)}.address-actions{display:flex;align-items:center;gap:var(--space-unit)}.address-actions vdr-entity-info{margin-top:1px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"component\", type: i1.FormattedAddressComponent, selector: \"vdr-formatted-address\", inputs: [\"address\"] }, { kind: \"component\", type: i1.EntityInfoComponent, selector: \"vdr-entity-info\", inputs: [\"small\", \"entity\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: AddressCardComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-address-card', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"card\\\" *ngIf=\\\"addressForm.value as address\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        <div class=\\\"address-title\\\">\\r\\n            <span class=\\\"street-line\\\" *ngIf=\\\"address.streetLine1\\\">{{ address.streetLine1 }},</span>\\r\\n            {{ address.countryCode }}\\r\\n        </div>\\r\\n        <div class=\\\"default-controls\\\">\\r\\n            <vdr-chip class=\\\"is-default p8\\\" *ngIf=\\\"isDefaultShipping\\\">\\r\\n                <clr-icon shape=\\\"truck\\\"></clr-icon>\\r\\n                {{ 'customer.default-shipping-address' | translate }}\\r\\n            </vdr-chip>\\r\\n            <vdr-chip class=\\\"is-default p8\\\" *ngIf=\\\"isDefaultBilling\\\">\\r\\n                <clr-icon shape=\\\"credit-card\\\"></clr-icon>\\r\\n                {{ 'customer.default-billing-address' | translate }}\\r\\n            </vdr-chip>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <div class=\\\"card-text\\\">\\r\\n            <vdr-formatted-address [address]=\\\"address\\\"></vdr-formatted-address>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\">\\r\\n        <div class=\\\"address-actions\\\">\\r\\n            <vdr-entity-info [entity]=\\\"address\\\"></vdr-entity-info>\\r\\n            <ng-container *ngIf=\\\"editable\\\">\\r\\n                <button class=\\\"button-small\\\" (click)=\\\"editAddress()\\\">\\r\\n                    {{ 'common.edit' | translate }}\\r\\n                </button>\\r\\n                <vdr-dropdown>\\r\\n                    <button type=\\\"button\\\" class=\\\"button-small\\\" vdrDropdownTrigger>\\r\\n                        {{ 'common.more' | translate }}\\r\\n                        <clr-icon shape=\\\"ellipsis-vertical\\\" size=\\\"12\\\"></clr-icon>\\r\\n                    </button>\\r\\n                    <vdr-dropdown-menu>\\r\\n                        <button\\r\\n                            vdrDropdownItem\\r\\n                            [disabled]=\\\"isDefaultShipping\\\"\\r\\n                            (click)=\\\"setAsDefaultShippingAddress()\\\"\\r\\n                        >\\r\\n                            {{ 'customer.set-as-default-shipping-address' | translate }}\\r\\n                        </button>\\r\\n                        <button\\r\\n                            vdrDropdownItem\\r\\n                            [disabled]=\\\"isDefaultBilling\\\"\\r\\n                            (click)=\\\"setAsDefaultBillingAddress()\\\"\\r\\n                        >\\r\\n                            {{ 'customer.set-as-default-billing-address' | translate }}\\r\\n                        </button>\\r\\n                        <div class=\\\"dropdown-divider\\\"></div>\\r\\n                        <button type=\\\"button\\\" (click)=\\\"delete()\\\" vdrDropdownItem>\\r\\n                            <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                            {{ 'common.delete' | translate }}\\r\\n                        </button>\\r\\n                    </vdr-dropdown-menu>\\r\\n                </vdr-dropdown>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block;max-width:360px}clr-input-container{margin-bottom:12px}.defaul-controls{display:flex}.is-default{margin:0;color:var(--color-success-500)}.address-actions{display:flex;align-items:center;gap:var(--space-unit)}.address-actions vdr-entity-info{margin-top:1px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.ModalService }, { type: i0.ChangeDetectorRef }], propDecorators: { addressForm: [{\n                type: Input\n            }], customFields: [{\n                type: Input\n            }], availableCountries: [{\n                type: Input\n            }], isDefaultBilling: [{\n                type: Input\n            }], isDefaultShipping: [{\n                type: Input\n            }], editable: [{\n                type: Input\n            }], setAsDefaultShipping: [{\n                type: Output\n            }], setAsDefaultBilling: [{\n                type: Output\n            }], deleteAddress: [{\n                type: Output\n            }] } });\n\nclass SelectCustomerGroupDialogComponent {\n    constructor(dataService) {\n        this.dataService = dataService;\n        this.selectedGroupIds = [];\n    }\n    ngOnInit() {\n        this.groups$ = this.dataService.customer\n            .getCustomerGroupList()\n            .mapStream(res => res.customerGroups.items);\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    add() {\n        this.resolveWith(this.selectedGroupIds);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: SelectCustomerGroupDialogComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: SelectCustomerGroupDialogComponent, selector: \"vdr-select-customer-group-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'customer.add-customer-to-group' | translate }}\\r\\n</ng-template>\\r\\n\\r\\n<ng-select\\r\\n    [items]=\\\"groups$ | async\\\"\\r\\n    appendTo=\\\"body\\\"\\r\\n    [addTag]=\\\"false\\\"\\r\\n    [multiple]=\\\"true\\\"\\r\\n    bindValue=\\\"id\\\"\\r\\n    [(ngModel)]=\\\"selectedGroupIds\\\"\\r\\n    [clearable]=\\\"true\\\"\\r\\n    [searchable]=\\\"false\\\"\\r\\n>\\r\\n    <ng-template ng-label-tmp let-item=\\\"item\\\" let-clear=\\\"clear\\\">\\r\\n        <span aria-hidden=\\\"true\\\" class=\\\"ng-value-icon left\\\" (click)=\\\"clear(item)\\\"> \\u00D7 </span>\\r\\n        <vdr-chip [colorFrom]=\\\"item.id\\\">{{ item.name }}</vdr-chip>\\r\\n    </ng-template>\\r\\n    <ng-template ng-option-tmp let-item=\\\"item\\\">\\r\\n        <vdr-chip [colorFrom]=\\\"item.id\\\">{{ item.name }}</vdr-chip>\\r\\n    </ng-template>\\r\\n</ng-select>\\r\\n\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"add()\\\" [disabled]=\\\"!selectedGroupIds.length\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'customer.add-customer-to-groups-with-count' | translate: {count: selectedGroupIds.length} }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i1$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i1$1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i3$2.NgSelectComponent, selector: \"ng-select\", inputs: [\"bindLabel\", \"bindValue\", \"markFirst\", \"placeholder\", \"notFoundText\", \"typeToSearchText\", \"addTagText\", \"loadingText\", \"clearAllText\", \"appearance\", \"dropdownPosition\", \"appendTo\", \"loading\", \"closeOnSelect\", \"hideSelected\", \"selectOnTab\", \"openOnEnter\", \"maxSelectedItems\", \"groupBy\", \"groupValue\", \"bufferAmount\", \"virtualScroll\", \"selectableGroup\", \"selectableGroupAsModel\", \"searchFn\", \"trackByFn\", \"clearOnBackspace\", \"labelForId\", \"inputAttrs\", \"tabIndex\", \"readonly\", \"searchWhileComposing\", \"minTermLength\", \"editableSearchTerm\", \"keyDownFn\", \"typeahead\", \"multiple\", \"addTag\", \"searchable\", \"clearable\", \"isOpen\", \"items\", \"compareWith\", \"clearSearchOnAdd\", \"deselectOnClick\"], outputs: [\"blur\", \"focus\", \"change\", \"open\", \"close\", \"search\", \"clear\", \"add\", \"remove\", \"scroll\", \"scrollToEnd\"] }, { kind: \"directive\", type: i3$2.NgOptionTemplateDirective, selector: \"[ng-option-tmp]\" }, { kind: \"directive\", type: i3$2.NgLabelTemplateDirective, selector: \"[ng-label-tmp]\" }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: SelectCustomerGroupDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-select-customer-group-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'customer.add-customer-to-group' | translate }}\\r\\n</ng-template>\\r\\n\\r\\n<ng-select\\r\\n    [items]=\\\"groups$ | async\\\"\\r\\n    appendTo=\\\"body\\\"\\r\\n    [addTag]=\\\"false\\\"\\r\\n    [multiple]=\\\"true\\\"\\r\\n    bindValue=\\\"id\\\"\\r\\n    [(ngModel)]=\\\"selectedGroupIds\\\"\\r\\n    [clearable]=\\\"true\\\"\\r\\n    [searchable]=\\\"false\\\"\\r\\n>\\r\\n    <ng-template ng-label-tmp let-item=\\\"item\\\" let-clear=\\\"clear\\\">\\r\\n        <span aria-hidden=\\\"true\\\" class=\\\"ng-value-icon left\\\" (click)=\\\"clear(item)\\\"> \\u00D7 </span>\\r\\n        <vdr-chip [colorFrom]=\\\"item.id\\\">{{ item.name }}</vdr-chip>\\r\\n    </ng-template>\\r\\n    <ng-template ng-option-tmp let-item=\\\"item\\\">\\r\\n        <vdr-chip [colorFrom]=\\\"item.id\\\">{{ item.name }}</vdr-chip>\\r\\n    </ng-template>\\r\\n</ng-select>\\r\\n\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"add()\\\" [disabled]=\\\"!selectedGroupIds.length\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'customer.add-customer-to-groups-with-count' | translate: {count: selectedGroupIds.length} }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i1.DataService }] });\n\nclass CustomerHistoryEntryHostComponent {\n    constructor(historyEntryComponentService) {\n        this.historyEntryComponentService = historyEntryComponentService;\n        this.expandClick = new EventEmitter();\n    }\n    ngOnInit() {\n        const componentType = this.historyEntryComponentService.getComponent(this.entry.type);\n        const componentRef = this.portalRef.createComponent(componentType);\n        componentRef.instance.entry = this.entry;\n        componentRef.instance.customer = this.customer;\n        this.instance = componentRef.instance;\n        this.componentRef = componentRef;\n    }\n    ngOnDestroy() {\n        this.componentRef?.destroy();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CustomerHistoryEntryHostComponent, deps: [{ token: i1.HistoryEntryComponentService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: CustomerHistoryEntryHostComponent, selector: \"vdr-customer-history-entry-host\", inputs: { entry: \"entry\", customer: \"customer\", expanded: \"expanded\" }, outputs: { expandClick: \"expandClick\" }, viewQueries: [{ propertyName: \"portalRef\", first: true, predicate: [\"portal\"], descendants: true, read: ViewContainerRef, static: true }], exportAs: [\"historyEntry\"], ngImport: i0, template: ` <vdr-timeline-entry\r\n        [displayType]=\"instance.getDisplayType(entry)\"\r\n        [iconShape]=\"instance.getIconShape && instance.getIconShape(entry)\"\r\n        [createdAt]=\"entry.createdAt\"\r\n        [name]=\"instance.getName && instance.getName(entry)\"\r\n        [featured]=\"instance.isFeatured(entry)\"\r\n        [collapsed]=\"!expanded && !instance.isFeatured(entry)\"\r\n        (expandClick)=\"expandClick.emit()\"\r\n    >\r\n        <div #portal></div>\r\n    </vdr-timeline-entry>`, isInline: true, dependencies: [{ kind: \"component\", type: i1.TimelineEntryComponent, selector: \"vdr-timeline-entry\", inputs: [\"displayType\", \"createdAt\", \"name\", \"featured\", \"iconShape\", \"isFirst\", \"isLast\", \"collapsed\"], outputs: [\"expandClick\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CustomerHistoryEntryHostComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'vdr-customer-history-entry-host',\n                    template: ` <vdr-timeline-entry\r\n        [displayType]=\"instance.getDisplayType(entry)\"\r\n        [iconShape]=\"instance.getIconShape && instance.getIconShape(entry)\"\r\n        [createdAt]=\"entry.createdAt\"\r\n        [name]=\"instance.getName && instance.getName(entry)\"\r\n        [featured]=\"instance.isFeatured(entry)\"\r\n        [collapsed]=\"!expanded && !instance.isFeatured(entry)\"\r\n        (expandClick)=\"expandClick.emit()\"\r\n    >\r\n        <div #portal></div>\r\n    </vdr-timeline-entry>`,\n                    exportAs: 'historyEntry',\n                }]\n        }], ctorParameters: () => [{ type: i1.HistoryEntryComponentService }], propDecorators: { entry: [{\n                type: Input\n            }], customer: [{\n                type: Input\n            }], expanded: [{\n                type: Input\n            }], expandClick: [{\n                type: Output\n            }], portalRef: [{\n                type: ViewChild,\n                args: ['portal', { static: true, read: ViewContainerRef }]\n            }] } });\n\nclass CustomerHistoryComponent {\n    constructor(historyEntryComponentService) {\n        this.historyEntryComponentService = historyEntryComponentService;\n        this.addNote = new EventEmitter();\n        this.updateNote = new EventEmitter();\n        this.deleteNote = new EventEmitter();\n        this.note = '';\n        this.expanded = false;\n        this.type = HistoryEntryType;\n    }\n    hasCustomComponent(type) {\n        return !!this.historyEntryComponentService.getComponent(type);\n    }\n    getDisplayType(entry) {\n        switch (entry.type) {\n            case HistoryEntryType.CUSTOMER_VERIFIED:\n            case HistoryEntryType.CUSTOMER_EMAIL_UPDATE_VERIFIED:\n            case HistoryEntryType.CUSTOMER_PASSWORD_RESET_VERIFIED:\n                return 'success';\n            case HistoryEntryType.CUSTOMER_REGISTERED:\n                return 'muted';\n            case HistoryEntryType.CUSTOMER_REMOVED_FROM_GROUP:\n                return 'error';\n            default:\n                return 'default';\n        }\n    }\n    getTimelineIcon(entry) {\n        switch (entry.type) {\n            case HistoryEntryType.CUSTOMER_REGISTERED:\n                return 'user';\n            case HistoryEntryType.CUSTOMER_VERIFIED:\n                return ['assign-user', 'is-solid'];\n            case HistoryEntryType.CUSTOMER_NOTE:\n                return 'note';\n            case HistoryEntryType.CUSTOMER_ADDED_TO_GROUP:\n            case HistoryEntryType.CUSTOMER_REMOVED_FROM_GROUP:\n                return 'users';\n        }\n    }\n    isFeatured(entry) {\n        switch (entry.type) {\n            case HistoryEntryType.CUSTOMER_REGISTERED:\n            case HistoryEntryType.CUSTOMER_VERIFIED:\n                return true;\n            default:\n                return false;\n        }\n    }\n    getName(entry) {\n        const { administrator } = entry;\n        if (administrator) {\n            return `${administrator.firstName} ${administrator.lastName}`;\n        }\n        else {\n            return `${this.customer.firstName} ${this.customer.lastName}`;\n        }\n    }\n    addNoteToCustomer() {\n        this.addNote.emit({ note: this.note });\n        this.note = '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CustomerHistoryComponent, deps: [{ token: i1.HistoryEntryComponentService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: CustomerHistoryComponent, selector: \"vdr-customer-history\", inputs: { customer: \"customer\", history: \"history\" }, outputs: { addNote: \"addNote\", updateNote: \"updateNote\", deleteNote: \"deleteNote\" }, ngImport: i0, template: \"<div class=\\\"entry-list\\\">\\r\\n    <vdr-timeline-entry iconShape=\\\"note\\\" displayType=\\\"muted\\\" [featured]=\\\"true\\\" *vdrIfPermissions=\\\"'UpdateCustomer'\\\"\\r\\n                        [isFirst]=\\\"true\\\">\\r\\n        <div class=\\\"note-entry\\\">\\r\\n            <textarea [(ngModel)]=\\\"note\\\" name=\\\"note\\\" class=\\\"note\\\"></textarea>\\r\\n            <button class=\\\"btn btn-secondary\\\" [disabled]=\\\"!note\\\" (click)=\\\"addNoteToCustomer()\\\">\\r\\n                {{ 'order.add-note' | translate }}\\r\\n            </button>\\r\\n        </div>\\r\\n    </vdr-timeline-entry>\\r\\n    <ng-container *ngFor=\\\"let entry of history\\\">\\r\\n        <vdr-customer-history-entry-host\\r\\n            *ngIf=\\\"hasCustomComponent(entry.type); else defaultComponents\\\"\\r\\n            [customer]=\\\"customer\\\"\\r\\n            [entry]=\\\"entry\\\"\\r\\n            [expanded]=\\\"expanded\\\"\\r\\n            (expandClick)=\\\"expanded = !expanded\\\"\\r\\n        ></vdr-customer-history-entry-host>\\r\\n        <ng-template #defaultComponents>\\r\\n            <vdr-timeline-entry\\r\\n                [displayType]=\\\"getDisplayType(entry)\\\"\\r\\n                [iconShape]=\\\"getTimelineIcon(entry)\\\"\\r\\n                [createdAt]=\\\"entry.createdAt\\\"\\r\\n                [name]=\\\"getName(entry)\\\"\\r\\n                [featured]=\\\"isFeatured(entry)\\\"\\r\\n            >\\r\\n                <ng-container [ngSwitch]=\\\"entry.type\\\">\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_REGISTERED\\\">\\r\\n                        <div class=\\\"title\\\">\\r\\n                            {{ 'customer.history-customer-registered' | translate }}\\r\\n                        </div>\\r\\n                        <ng-container *ngIf=\\\"entry.data.strategy === 'native'; else namedStrategy\\\">\\r\\n                            {{ 'customer.history-using-native-auth-strategy' | translate }}\\r\\n                        </ng-container>\\r\\n                        <ng-template #namedStrategy>\\r\\n                            {{\\r\\n                                'customer.history-using-external-auth-strategy'\\r\\n                                    | translate: { strategy: entry.data.strategy }\\r\\n                            }}\\r\\n                        </ng-template>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_VERIFIED\\\">\\r\\n                        <div class=\\\"title\\\">\\r\\n                            {{ 'customer.history-customer-verified' | translate }}\\r\\n                        </div>\\r\\n                        <ng-container *ngIf=\\\"entry.data.strategy === 'native'; else namedStrategy\\\">\\r\\n                            {{ 'customer.history-using-native-auth-strategy' | translate }}\\r\\n                        </ng-container>\\r\\n                        <ng-template #namedStrategy>\\r\\n                            {{\\r\\n                                'customer.history-using-external-auth-strategy'\\r\\n                                    | translate: { strategy: entry.data.strategy }\\r\\n                            }}\\r\\n                        </ng-template>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_DETAIL_UPDATED\\\">\\r\\n                        <div class=\\\"flex\\\">\\r\\n                            {{ 'customer.history-customer-detail-updated' | translate }}\\r\\n                            <vdr-history-entry-detail>\\r\\n                                <vdr-object-tree [value]=\\\"entry.data.input\\\"></vdr-object-tree>\\r\\n                            </vdr-history-entry-detail>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_ADDED_TO_GROUP\\\">\\r\\n                        {{\\r\\n                            'customer.history-customer-added-to-group'\\r\\n                                | translate: { groupName: entry.data.groupName }\\r\\n                        }}\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_REMOVED_FROM_GROUP\\\">\\r\\n                        {{\\r\\n                            'customer.history-customer-removed-from-group'\\r\\n                                | translate: { groupName: entry.data.groupName }\\r\\n                        }}\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_ADDRESS_CREATED\\\">\\r\\n                        {{ 'customer.history-customer-address-created' | translate }}\\r\\n                        <div class=\\\"flex\\\">\\r\\n                            <div class=\\\"address-string\\\">{{ entry.data.address }}</div>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_ADDRESS_UPDATED\\\">\\r\\n                        {{ 'customer.history-customer-address-updated' | translate }}\\r\\n                        <div class=\\\"flex\\\">\\r\\n                            <div class=\\\"address-string\\\">{{ entry.data.address }}</div>\\r\\n                            <vdr-history-entry-detail>\\r\\n                                <vdr-object-tree [value]=\\\"entry.data.input\\\"></vdr-object-tree>\\r\\n                            </vdr-history-entry-detail>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_ADDRESS_DELETED\\\">\\r\\n                        {{ 'customer.history-customer-address-deleted' | translate }}\\r\\n                        <div class=\\\"address-string\\\">{{ entry.data.address }}</div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_PASSWORD_UPDATED\\\">\\r\\n                        {{ 'customer.history-customer-password-updated' | translate }}\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_PASSWORD_RESET_REQUESTED\\\">\\r\\n                        {{ 'customer.history-customer-password-reset-requested' | translate }}\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_PASSWORD_RESET_VERIFIED\\\">\\r\\n                        {{ 'customer.history-customer-password-reset-verified' | translate }}\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_EMAIL_UPDATE_REQUESTED\\\">\\r\\n                        <div class=\\\"flex\\\">\\r\\n                            {{ 'customer.history-customer-email-update-requested' | translate }}\\r\\n                            <vdr-history-entry-detail>\\r\\n                                <vdr-labeled-data [label]=\\\"'customer.old-email-address' | translate\\\">{{\\r\\n                                        entry.data.oldEmailAddress\\r\\n                                    }}\\r\\n                                </vdr-labeled-data>\\r\\n                                <vdr-labeled-data [label]=\\\"'customer.new-email-address' | translate\\\">{{\\r\\n                                        entry.data.newEmailAddress\\r\\n                                    }}\\r\\n                                </vdr-labeled-data>\\r\\n                            </vdr-history-entry-detail>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_EMAIL_UPDATE_VERIFIED\\\">\\r\\n                        <div class=\\\"flex\\\">\\r\\n                            {{ 'customer.history-customer-email-update-verified' | translate }}\\r\\n                            <vdr-history-entry-detail>\\r\\n                                <vdr-labeled-data [label]=\\\"'customer.old-email-address' | translate\\\">{{\\r\\n                                        entry.data.oldEmailAddress\\r\\n                                    }}\\r\\n                                </vdr-labeled-data>\\r\\n                                <vdr-labeled-data [label]=\\\"'customer.new-email-address' | translate\\\">{{\\r\\n                                        entry.data.newEmailAddress\\r\\n                                    }}\\r\\n                                </vdr-labeled-data>\\r\\n                            </vdr-history-entry-detail>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_NOTE\\\">\\r\\n                        <div class=\\\"flex\\\">\\r\\n                            <div class=\\\"note-text\\\">\\r\\n                                {{ entry.data.note }}\\r\\n                            </div>\\r\\n                            <div class=\\\"flex-spacer\\\"></div>\\r\\n                            <vdr-dropdown>\\r\\n                                <button class=\\\"button-small ml-1\\\" vdrDropdownTrigger>\\r\\n                                    <clr-icon shape=\\\"ellipsis-vertical\\\" size=\\\"12\\\"></clr-icon>\\r\\n                                </button>\\r\\n                                <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                                    <button\\r\\n                                        vdrDropdownItem\\r\\n                                        (click)=\\\"updateNote.emit(entry)\\\"\\r\\n                                        [disabled]=\\\"!('UpdateCustomer' | hasPermission)\\\"\\r\\n                                    >\\r\\n                                        <clr-icon shape=\\\"edit\\\"></clr-icon>\\r\\n                                        {{ 'common.edit' | translate }}\\r\\n                                    </button>\\r\\n                                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                                    <button\\r\\n                                        vdrDropdownItem\\r\\n                                        (click)=\\\"deleteNote.emit(entry)\\\"\\r\\n                                        [disabled]=\\\"!('UpdateCustomer' | hasPermission)\\\"\\r\\n                                    >\\r\\n                                        <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                                        {{ 'common.delete' | translate }}\\r\\n                                    </button>\\r\\n                                </vdr-dropdown-menu>\\r\\n                            </vdr-dropdown>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchDefault>\\r\\n                        <div class=\\\"title\\\">\\r\\n                            {{ entry.type | translate }}\\r\\n                        </div>\\r\\n                        <vdr-history-entry-detail *ngIf=\\\"entry.data\\\">\\r\\n                            <vdr-object-tree [value]=\\\"entry.data\\\"></vdr-object-tree>\\r\\n                        </vdr-history-entry-detail>\\r\\n                    </ng-container>\\r\\n                </ng-container>\\r\\n            </vdr-timeline-entry>\\r\\n        </ng-template>\\r\\n    </ng-container>\\r\\n    <vdr-timeline-entry [isLast]=\\\"true\\\"></vdr-timeline-entry>\\r\\n</div>\\r\\n\", styles: [\".entry-list{margin:24px 12px 24px 24px}.note-entry{display:flex;align-items:center}.note-entry .note{flex:1}.note-entry button{margin:0}textarea.note{flex:1;height:36px;border-radius:3px;margin-inline-end:6px}.note-text{color:var(--color-text-100);white-space:pre-wrap}.address-string{font-size:smaller;color:var(--color-text-200)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i3$1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i3$1.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { kind: \"directive\", type: i1$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i1$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i1$1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"component\", type: i1.LabeledDataComponent, selector: \"vdr-labeled-data\", inputs: [\"label\"] }, { kind: \"component\", type: i1.ObjectTreeComponent, selector: \"vdr-object-tree\", inputs: [\"value\", \"isArrayItem\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.TimelineEntryComponent, selector: \"vdr-timeline-entry\", inputs: [\"displayType\", \"createdAt\", \"name\", \"featured\", \"iconShape\", \"isFirst\", \"isLast\", \"collapsed\"], outputs: [\"expandClick\"] }, { kind: \"component\", type: i1.HistoryEntryDetailComponent, selector: \"vdr-history-entry-detail\" }, { kind: \"component\", type: CustomerHistoryEntryHostComponent, selector: \"vdr-customer-history-entry-host\", inputs: [\"entry\", \"customer\", \"expanded\"], outputs: [\"expandClick\"], exportAs: [\"historyEntry\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CustomerHistoryComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-customer-history', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"entry-list\\\">\\r\\n    <vdr-timeline-entry iconShape=\\\"note\\\" displayType=\\\"muted\\\" [featured]=\\\"true\\\" *vdrIfPermissions=\\\"'UpdateCustomer'\\\"\\r\\n                        [isFirst]=\\\"true\\\">\\r\\n        <div class=\\\"note-entry\\\">\\r\\n            <textarea [(ngModel)]=\\\"note\\\" name=\\\"note\\\" class=\\\"note\\\"></textarea>\\r\\n            <button class=\\\"btn btn-secondary\\\" [disabled]=\\\"!note\\\" (click)=\\\"addNoteToCustomer()\\\">\\r\\n                {{ 'order.add-note' | translate }}\\r\\n            </button>\\r\\n        </div>\\r\\n    </vdr-timeline-entry>\\r\\n    <ng-container *ngFor=\\\"let entry of history\\\">\\r\\n        <vdr-customer-history-entry-host\\r\\n            *ngIf=\\\"hasCustomComponent(entry.type); else defaultComponents\\\"\\r\\n            [customer]=\\\"customer\\\"\\r\\n            [entry]=\\\"entry\\\"\\r\\n            [expanded]=\\\"expanded\\\"\\r\\n            (expandClick)=\\\"expanded = !expanded\\\"\\r\\n        ></vdr-customer-history-entry-host>\\r\\n        <ng-template #defaultComponents>\\r\\n            <vdr-timeline-entry\\r\\n                [displayType]=\\\"getDisplayType(entry)\\\"\\r\\n                [iconShape]=\\\"getTimelineIcon(entry)\\\"\\r\\n                [createdAt]=\\\"entry.createdAt\\\"\\r\\n                [name]=\\\"getName(entry)\\\"\\r\\n                [featured]=\\\"isFeatured(entry)\\\"\\r\\n            >\\r\\n                <ng-container [ngSwitch]=\\\"entry.type\\\">\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_REGISTERED\\\">\\r\\n                        <div class=\\\"title\\\">\\r\\n                            {{ 'customer.history-customer-registered' | translate }}\\r\\n                        </div>\\r\\n                        <ng-container *ngIf=\\\"entry.data.strategy === 'native'; else namedStrategy\\\">\\r\\n                            {{ 'customer.history-using-native-auth-strategy' | translate }}\\r\\n                        </ng-container>\\r\\n                        <ng-template #namedStrategy>\\r\\n                            {{\\r\\n                                'customer.history-using-external-auth-strategy'\\r\\n                                    | translate: { strategy: entry.data.strategy }\\r\\n                            }}\\r\\n                        </ng-template>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_VERIFIED\\\">\\r\\n                        <div class=\\\"title\\\">\\r\\n                            {{ 'customer.history-customer-verified' | translate }}\\r\\n                        </div>\\r\\n                        <ng-container *ngIf=\\\"entry.data.strategy === 'native'; else namedStrategy\\\">\\r\\n                            {{ 'customer.history-using-native-auth-strategy' | translate }}\\r\\n                        </ng-container>\\r\\n                        <ng-template #namedStrategy>\\r\\n                            {{\\r\\n                                'customer.history-using-external-auth-strategy'\\r\\n                                    | translate: { strategy: entry.data.strategy }\\r\\n                            }}\\r\\n                        </ng-template>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_DETAIL_UPDATED\\\">\\r\\n                        <div class=\\\"flex\\\">\\r\\n                            {{ 'customer.history-customer-detail-updated' | translate }}\\r\\n                            <vdr-history-entry-detail>\\r\\n                                <vdr-object-tree [value]=\\\"entry.data.input\\\"></vdr-object-tree>\\r\\n                            </vdr-history-entry-detail>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_ADDED_TO_GROUP\\\">\\r\\n                        {{\\r\\n                            'customer.history-customer-added-to-group'\\r\\n                                | translate: { groupName: entry.data.groupName }\\r\\n                        }}\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_REMOVED_FROM_GROUP\\\">\\r\\n                        {{\\r\\n                            'customer.history-customer-removed-from-group'\\r\\n                                | translate: { groupName: entry.data.groupName }\\r\\n                        }}\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_ADDRESS_CREATED\\\">\\r\\n                        {{ 'customer.history-customer-address-created' | translate }}\\r\\n                        <div class=\\\"flex\\\">\\r\\n                            <div class=\\\"address-string\\\">{{ entry.data.address }}</div>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_ADDRESS_UPDATED\\\">\\r\\n                        {{ 'customer.history-customer-address-updated' | translate }}\\r\\n                        <div class=\\\"flex\\\">\\r\\n                            <div class=\\\"address-string\\\">{{ entry.data.address }}</div>\\r\\n                            <vdr-history-entry-detail>\\r\\n                                <vdr-object-tree [value]=\\\"entry.data.input\\\"></vdr-object-tree>\\r\\n                            </vdr-history-entry-detail>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_ADDRESS_DELETED\\\">\\r\\n                        {{ 'customer.history-customer-address-deleted' | translate }}\\r\\n                        <div class=\\\"address-string\\\">{{ entry.data.address }}</div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_PASSWORD_UPDATED\\\">\\r\\n                        {{ 'customer.history-customer-password-updated' | translate }}\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_PASSWORD_RESET_REQUESTED\\\">\\r\\n                        {{ 'customer.history-customer-password-reset-requested' | translate }}\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_PASSWORD_RESET_VERIFIED\\\">\\r\\n                        {{ 'customer.history-customer-password-reset-verified' | translate }}\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_EMAIL_UPDATE_REQUESTED\\\">\\r\\n                        <div class=\\\"flex\\\">\\r\\n                            {{ 'customer.history-customer-email-update-requested' | translate }}\\r\\n                            <vdr-history-entry-detail>\\r\\n                                <vdr-labeled-data [label]=\\\"'customer.old-email-address' | translate\\\">{{\\r\\n                                        entry.data.oldEmailAddress\\r\\n                                    }}\\r\\n                                </vdr-labeled-data>\\r\\n                                <vdr-labeled-data [label]=\\\"'customer.new-email-address' | translate\\\">{{\\r\\n                                        entry.data.newEmailAddress\\r\\n                                    }}\\r\\n                                </vdr-labeled-data>\\r\\n                            </vdr-history-entry-detail>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_EMAIL_UPDATE_VERIFIED\\\">\\r\\n                        <div class=\\\"flex\\\">\\r\\n                            {{ 'customer.history-customer-email-update-verified' | translate }}\\r\\n                            <vdr-history-entry-detail>\\r\\n                                <vdr-labeled-data [label]=\\\"'customer.old-email-address' | translate\\\">{{\\r\\n                                        entry.data.oldEmailAddress\\r\\n                                    }}\\r\\n                                </vdr-labeled-data>\\r\\n                                <vdr-labeled-data [label]=\\\"'customer.new-email-address' | translate\\\">{{\\r\\n                                        entry.data.newEmailAddress\\r\\n                                    }}\\r\\n                                </vdr-labeled-data>\\r\\n                            </vdr-history-entry-detail>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.CUSTOMER_NOTE\\\">\\r\\n                        <div class=\\\"flex\\\">\\r\\n                            <div class=\\\"note-text\\\">\\r\\n                                {{ entry.data.note }}\\r\\n                            </div>\\r\\n                            <div class=\\\"flex-spacer\\\"></div>\\r\\n                            <vdr-dropdown>\\r\\n                                <button class=\\\"button-small ml-1\\\" vdrDropdownTrigger>\\r\\n                                    <clr-icon shape=\\\"ellipsis-vertical\\\" size=\\\"12\\\"></clr-icon>\\r\\n                                </button>\\r\\n                                <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                                    <button\\r\\n                                        vdrDropdownItem\\r\\n                                        (click)=\\\"updateNote.emit(entry)\\\"\\r\\n                                        [disabled]=\\\"!('UpdateCustomer' | hasPermission)\\\"\\r\\n                                    >\\r\\n                                        <clr-icon shape=\\\"edit\\\"></clr-icon>\\r\\n                                        {{ 'common.edit' | translate }}\\r\\n                                    </button>\\r\\n                                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                                    <button\\r\\n                                        vdrDropdownItem\\r\\n                                        (click)=\\\"deleteNote.emit(entry)\\\"\\r\\n                                        [disabled]=\\\"!('UpdateCustomer' | hasPermission)\\\"\\r\\n                                    >\\r\\n                                        <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                                        {{ 'common.delete' | translate }}\\r\\n                                    </button>\\r\\n                                </vdr-dropdown-menu>\\r\\n                            </vdr-dropdown>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchDefault>\\r\\n                        <div class=\\\"title\\\">\\r\\n                            {{ entry.type | translate }}\\r\\n                        </div>\\r\\n                        <vdr-history-entry-detail *ngIf=\\\"entry.data\\\">\\r\\n                            <vdr-object-tree [value]=\\\"entry.data\\\"></vdr-object-tree>\\r\\n                        </vdr-history-entry-detail>\\r\\n                    </ng-container>\\r\\n                </ng-container>\\r\\n            </vdr-timeline-entry>\\r\\n        </ng-template>\\r\\n    </ng-container>\\r\\n    <vdr-timeline-entry [isLast]=\\\"true\\\"></vdr-timeline-entry>\\r\\n</div>\\r\\n\", styles: [\".entry-list{margin:24px 12px 24px 24px}.note-entry{display:flex;align-items:center}.note-entry .note{flex:1}.note-entry button{margin:0}textarea.note{flex:1;height:36px;border-radius:3px;margin-inline-end:6px}.note-text{color:var(--color-text-100);white-space:pre-wrap}.address-string{font-size:smaller;color:var(--color-text-200)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.HistoryEntryComponentService }], propDecorators: { customer: [{\n                type: Input\n            }], history: [{\n                type: Input\n            }], addNote: [{\n                type: Output\n            }], updateNote: [{\n                type: Output\n            }], deleteNote: [{\n                type: Output\n            }] } });\n\nconst CUSTOMER_DETAIL_QUERY = gql `\r\n    query CustomerDetailQuery($id: ID!, $orderListOptions: OrderListOptions) {\r\n        customer(id: $id) {\r\n            ...Customer\r\n            groups {\r\n                id\r\n                name\r\n            }\r\n            orders(options: $orderListOptions) {\r\n                items {\r\n                    id\r\n                    code\r\n                    type\r\n                    state\r\n                    total\r\n                    totalWithTax\r\n                    currencyCode\r\n                    createdAt\r\n                    updatedAt\r\n                    orderPlacedAt\r\n                }\r\n                totalItems\r\n            }\r\n        }\r\n    }\r\n    ${CUSTOMER_FRAGMENT}\r\n`;\nclass CustomerDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, formBuilder, dataService, modalService, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.formBuilder = formBuilder;\n        this.dataService = dataService;\n        this.modalService = modalService;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('Customer');\n        this.addressCustomFields = this.getCustomFieldConfig('Address');\n        this.detailForm = this.formBuilder.group({\n            customer: this.formBuilder.group({\n                title: '',\n                firstName: ['', Validators.required],\n                lastName: ['', Validators.required],\n                phoneNumber: '',\n                emailAddress: ['', [Validators.required, Validators.email]],\n                password: '',\n                customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n            }),\n            addresses: new UntypedFormArray([]),\n        });\n        this.fetchHistory = new Subject();\n        this.addressesToDeleteIds = new Set();\n        this.addressDefaultsUpdated = false;\n        this.ordersPerPage = 10;\n        this.currentOrdersPage = 1;\n        this.orderListUpdates$ = new Subject();\n    }\n    ngOnInit() {\n        this.init();\n        this.availableCountries$ = this.dataService.settings\n            .getAvailableCountries()\n            .mapSingle(result => result.countries.items)\n            .pipe(shareReplay(1));\n        const customerWithUpdates$ = this.entity$.pipe(merge(this.orderListUpdates$));\n        this.orders$ = customerWithUpdates$.pipe(map(customer => customer.orders.items));\n        this.ordersCount$ = this.entity$.pipe(map(customer => customer.orders.totalItems));\n        this.history$ = this.fetchHistory.pipe(startWith(null), switchMap(() => this.dataService.customer\n            .getCustomerHistory(this.id, {\n            sort: {\n                createdAt: SortOrder.DESC,\n            },\n        })\n            .mapStream(data => data.customer?.history.items)));\n    }\n    ngOnDestroy() {\n        this.destroy();\n        this.orderListUpdates$.complete();\n    }\n    getAddressFormControls() {\n        const formArray = this.detailForm.get(['addresses']);\n        return formArray.controls;\n    }\n    setDefaultBillingAddressId(id) {\n        this.defaultBillingAddressId = id;\n        this.addressDefaultsUpdated = true;\n    }\n    setDefaultShippingAddressId(id) {\n        this.defaultShippingAddressId = id;\n        this.addressDefaultsUpdated = true;\n    }\n    toggleDeleteAddress(id) {\n        if (this.addressesToDeleteIds.has(id)) {\n            this.addressesToDeleteIds.delete(id);\n        }\n        else {\n            this.addressesToDeleteIds.add(id);\n        }\n    }\n    addAddress() {\n        const addressFormArray = this.detailForm.get('addresses');\n        const newAddress = this.formBuilder.group({\n            fullName: '',\n            company: '',\n            streetLine1: ['', Validators.required],\n            streetLine2: '',\n            city: '',\n            province: '',\n            postalCode: '',\n            countryCode: ['', Validators.required],\n            phoneNumber: '',\n            defaultShippingAddress: false,\n            defaultBillingAddress: false,\n            customFields: this.formBuilder.group(this.addressCustomFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {})),\n        });\n        addressFormArray.push(newAddress);\n    }\n    setOrderItemsPerPage(itemsPerPage) {\n        this.ordersPerPage = +itemsPerPage;\n        this.fetchOrdersList();\n    }\n    setOrderCurrentPage(page) {\n        this.currentOrdersPage = +page;\n        this.fetchOrdersList();\n    }\n    create() {\n        const customerForm = this.detailForm.get('customer');\n        if (!customerForm) {\n            return;\n        }\n        const { title, emailAddress, firstName, lastName, phoneNumber, password } = customerForm.value;\n        const customFields = customerForm.get('customFields')?.value;\n        if (!emailAddress || !firstName || !lastName) {\n            return;\n        }\n        const customer = {\n            title,\n            emailAddress,\n            firstName,\n            lastName,\n            phoneNumber,\n            customFields,\n        };\n        this.dataService.customer.createCustomer(customer, password).subscribe(({ createCustomer }) => {\n            switch (createCustomer.__typename) {\n                case 'Customer':\n                    this.notificationService.success(marker('common.notify-create-success'), {\n                        entity: 'Customer',\n                    });\n                    if (createCustomer.emailAddress && !password) {\n                        this.notificationService.notify({\n                            message: marker('customer.email-verification-sent'),\n                            translationVars: { emailAddress },\n                            type: 'info',\n                            duration: 10000,\n                        });\n                    }\n                    this.detailForm.markAsPristine();\n                    this.addressDefaultsUpdated = false;\n                    this.changeDetector.markForCheck();\n                    this.router.navigate(['../', createCustomer.id], { relativeTo: this.route });\n                    break;\n                case 'EmailAddressConflictError':\n                    this.notificationService.error(createCustomer.message);\n            }\n        });\n    }\n    save() {\n        this.entity$\n            .pipe(take(1), mergeMap(({ id }) => {\n            const saveOperations = [];\n            const customerForm = this.detailForm.get('customer');\n            if (customerForm && customerForm.dirty) {\n                const formValue = customerForm.value;\n                const customFields = customerForm.get('customFields')?.value;\n                const customer = {\n                    id,\n                    title: formValue.title,\n                    emailAddress: formValue.emailAddress,\n                    firstName: formValue.firstName,\n                    lastName: formValue.lastName,\n                    phoneNumber: formValue.phoneNumber,\n                    customFields,\n                };\n                saveOperations.push(this.dataService.customer\n                    .updateCustomer(customer)\n                    .pipe(map(res => res.updateCustomer)));\n            }\n            const addressFormArray = this.detailForm.get('addresses');\n            if ((addressFormArray && addressFormArray.dirty) || this.addressDefaultsUpdated) {\n                for (const addressControl of addressFormArray.controls) {\n                    if (addressControl.dirty || this.addressDefaultsUpdated) {\n                        const address = addressControl.value;\n                        const input = {\n                            fullName: address.fullName,\n                            company: address.company,\n                            streetLine1: address.streetLine1,\n                            streetLine2: address.streetLine2,\n                            city: address.city,\n                            province: address.province,\n                            postalCode: address.postalCode,\n                            countryCode: address.countryCode,\n                            phoneNumber: address.phoneNumber,\n                            defaultShippingAddress: this.defaultShippingAddressId === address.id,\n                            defaultBillingAddress: this.defaultBillingAddressId === address.id,\n                            customFields: address.customFields,\n                        };\n                        if (!address.id) {\n                            saveOperations.push(this.dataService.customer\n                                .createCustomerAddress(id, input)\n                                .pipe(map(res => res.createCustomerAddress)));\n                        }\n                        else {\n                            if (this.addressesToDeleteIds.has(address.id)) {\n                                saveOperations.push(this.dataService.customer\n                                    .deleteCustomerAddress(address.id)\n                                    .pipe(map(res => res.deleteCustomerAddress)));\n                            }\n                            else {\n                                saveOperations.push(this.dataService.customer\n                                    .updateCustomerAddress({\n                                    ...input,\n                                    id: address.id,\n                                })\n                                    .pipe(map(res => res.updateCustomerAddress)));\n                            }\n                        }\n                    }\n                }\n            }\n            return forkJoin(saveOperations);\n        }))\n            .subscribe(data => {\n            let notified = false;\n            for (const result of data) {\n                switch (result.__typename) {\n                    case 'Customer':\n                    case 'Address':\n                    case 'Success':\n                        if (!notified) {\n                            this.notificationService.success(marker('common.notify-update-success'), {\n                                entity: 'Customer',\n                            });\n                            notified = true;\n                            this.detailForm.markAsPristine();\n                            this.addressDefaultsUpdated = false;\n                            this.changeDetector.markForCheck();\n                            this.fetchHistory.next();\n                            this.refreshCustomer().subscribe();\n                        }\n                        break;\n                    case 'EmailAddressConflictError':\n                        this.notificationService.error(result.message);\n                        break;\n                }\n            }\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'Customer',\n            });\n        });\n    }\n    addToGroup() {\n        this.modalService\n            .fromComponent(SelectCustomerGroupDialogComponent, {\n            size: 'md',\n        })\n            .pipe(switchMap(groupIds => (groupIds ? from(groupIds) : EMPTY)), concatMap(groupId => this.dataService.customer.addCustomersToGroup(groupId, [this.id])))\n            .subscribe({\n            next: res => {\n                this.notificationService.success(marker(`customer.add-customers-to-group-success`), {\n                    customerCount: 1,\n                    groupName: res.addCustomersToGroup.name,\n                });\n            },\n            complete: () => {\n                this.refreshCustomer().subscribe();\n                this.fetchHistory.next();\n            },\n        });\n    }\n    removeFromGroup(group) {\n        this.modalService\n            .dialog({\n            title: marker('customer.confirm-remove-customer-from-group'),\n            buttons: [\n                { type: 'secondary', label: marker('common.cancel') },\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\n            ],\n        })\n            .pipe(switchMap(response => response\n            ? this.dataService.customer.removeCustomersFromGroup(group.id, [this.id])\n            : EMPTY), switchMap(() => this.refreshCustomer()))\n            .subscribe(result => {\n            this.notificationService.success(marker(`customer.remove-customers-from-group-success`), {\n                customerCount: 1,\n                groupName: group.name,\n            });\n            this.fetchHistory.next();\n        });\n    }\n    addNoteToCustomer({ note }) {\n        this.dataService.customer.addNoteToCustomer(this.id, note).subscribe(() => {\n            this.fetchHistory.next();\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'Note',\n            });\n        });\n    }\n    updateNote(entry) {\n        this.modalService\n            .fromComponent(EditNoteDialogComponent, {\n            closable: true,\n            locals: {\n                displayPrivacyControls: false,\n                note: entry.data.note,\n            },\n        })\n            .pipe(switchMap(result => {\n            if (result) {\n                return this.dataService.customer.updateCustomerNote({\n                    noteId: entry.id,\n                    note: result.note,\n                });\n            }\n            else {\n                return EMPTY;\n            }\n        }))\n            .subscribe(result => {\n            this.fetchHistory.next();\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'Note',\n            });\n        });\n    }\n    deleteNote(entry) {\n        return this.modalService\n            .dialog({\n            title: marker('common.confirm-delete-note'),\n            body: entry.data.note,\n            buttons: [\n                { type: 'secondary', label: marker('common.cancel') },\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\n            ],\n        })\n            .pipe(switchMap(res => (res ? this.dataService.customer.deleteCustomerNote(entry.id) : EMPTY)))\n            .subscribe(() => {\n            this.fetchHistory.next();\n            this.notificationService.success(marker('common.notify-delete-success'), {\n                entity: 'Note',\n            });\n        });\n    }\n    setFormValues(entity) {\n        const customerGroup = this.detailForm.get('customer');\n        if (customerGroup) {\n            customerGroup.patchValue({\n                title: entity.title ?? null,\n                firstName: entity.firstName,\n                lastName: entity.lastName,\n                phoneNumber: entity.phoneNumber ?? null,\n                emailAddress: entity.emailAddress,\n                password: '',\n                customFields: {},\n            });\n        }\n        if (entity.addresses) {\n            const addressesArray = new UntypedFormArray([]);\n            for (const address of entity.addresses) {\n                const { customFields, ...rest } = address;\n                const addressGroup = this.formBuilder.group({\n                    ...rest,\n                    countryCode: address.country.code,\n                    customFields: this.formBuilder.group(this.addressCustomFields.reduce((hash, field) => ({\n                        ...hash,\n                        [field.name]: address['customFields'][field.name],\n                    }), {})),\n                });\n                addressesArray.push(addressGroup);\n                if (address.defaultShippingAddress) {\n                    this.defaultShippingAddressId = address.id;\n                }\n                if (address.defaultBillingAddress) {\n                    this.defaultBillingAddressId = address.id;\n                }\n            }\n            this.detailForm.setControl('addresses', addressesArray);\n        }\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customer', 'customFields']), entity);\n        }\n        this.changeDetector.markForCheck();\n    }\n    /**\n     * Refetch the customer with the current order list settings.\n     */\n    fetchOrdersList() {\n        this.dataService\n            .query(CustomerDetailQueryDocument, {\n            id: this.id,\n            orderListOptions: {\n                take: this.ordersPerPage,\n                skip: (this.currentOrdersPage - 1) * this.ordersPerPage,\n                sort: { orderPlacedAt: SortOrder.DESC },\n            },\n        })\n            .single$.pipe(map(data => data.customer), filter(notNullOrUndefined))\n            .subscribe(result => this.orderListUpdates$.next(result));\n    }\n    refreshCustomer() {\n        return this.dataService.query(CustomerDetailQueryDocument, {\n            id: this.id,\n            orderListOptions: { take: 0 },\n        }).single$;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CustomerDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1$1.FormBuilder }, { token: i1.DataService }, { token: i1.ModalService }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: CustomerDetailComponent, selector: \"vdr-customer-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"customer-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!(addressDefaultsUpdated || (detailForm.valid && detailForm.dirty))\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"'UpdateCustomer'\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!(addressDefaultsUpdated || (detailForm.valid && detailForm.dirty))\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"customer-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-page-detail-layout>\\r\\n    <vdr-page-detail-sidebar>\\r\\n        <vdr-card *ngIf=\\\"entity$ | async as customer\\\">\\r\\n            <vdr-customer-status-label [customer]=\\\"customer\\\"></vdr-customer-status-label>\\r\\n            <vdr-labeled-data\\r\\n                class=\\\"last-login\\\"\\r\\n                *ngIf=\\\"customer.user?.lastLogin as lastLogin\\\"\\r\\n                [label]=\\\"'customer.last-login' | translate\\\"\\r\\n            >\\r\\n                <time [dateTime]=\\\"lastLogin\\\">{{ lastLogin | timeAgo }}</time>\\r\\n            </vdr-labeled-data>\\r\\n        </vdr-card>\\r\\n        <vdr-card\\r\\n            [title]=\\\"'customer.customer-groups' | translate\\\"\\r\\n            *ngIf=\\\"(entity$ | async)?.groups as groups\\\"\\r\\n        >\\r\\n            <div *ngIf=\\\"groups.length; else noGroups\\\">\\r\\n                <vdr-chip\\r\\n                    *ngFor=\\\"let group of groups\\\"\\r\\n                    [colorFrom]=\\\"group.id\\\"\\r\\n                    icon=\\\"times\\\"\\r\\n                    (iconClick)=\\\"removeFromGroup(group)\\\"\\r\\n                    >{{ group.name }}</vdr-chip\\r\\n                >\\r\\n            </div>\\r\\n            <ng-template #noGroups>\\r\\n                <span class=\\\"color-weight-400\\\">\\r\\n                    {{ 'customer.not-a-member-of-any-groups' | translate }}\\r\\n                </span>\\r\\n            </ng-template>\\r\\n            <div>\\r\\n                <button\\r\\n                    class=\\\"button-small mt-1\\\"\\r\\n                    (click)=\\\"addToGroup()\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateCustomerGroup'\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                    {{ 'customer.add-customer-to-group' | translate }}\\r\\n                </button>\\r\\n            </div>\\r\\n        </vdr-card>\\r\\n        <vdr-card>\\r\\n            <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n        </vdr-card>\\r\\n    </vdr-page-detail-sidebar>\\r\\n    <vdr-page-block>\\r\\n        <form class=\\\"form\\\" [formGroup]=\\\"detailForm.get('customer')\\\">\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'customer.title' | translate\\\"\\r\\n                        for=\\\"title\\\"\\r\\n                        [readOnlyToggle]=\\\"!(isNew$ | async)\\\"\\r\\n                    >\\r\\n                        <input id=\\\"title\\\" type=\\\"text\\\" formControlName=\\\"title\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <div><!-- spacer --></div>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'customer.first-name' | translate\\\"\\r\\n                        for=\\\"firstName\\\"\\r\\n                        [readOnlyToggle]=\\\"!(isNew$ | async)\\\"\\r\\n                    >\\r\\n                        <input id=\\\"firstName\\\" type=\\\"text\\\" formControlName=\\\"firstName\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'customer.last-name' | translate\\\"\\r\\n                        for=\\\"lastName\\\"\\r\\n                        [readOnlyToggle]=\\\"!(isNew$ | async)\\\"\\r\\n                    >\\r\\n                        <input id=\\\"lastName\\\" type=\\\"text\\\" formControlName=\\\"lastName\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'customer.email-address' | translate\\\"\\r\\n                        for=\\\"emailAddress\\\"\\r\\n                        [readOnlyToggle]=\\\"!(isNew$ | async)\\\"\\r\\n                    >\\r\\n                        <input id=\\\"emailAddress\\\" type=\\\"text\\\" formControlName=\\\"emailAddress\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'customer.phone-number' | translate\\\"\\r\\n                        for=\\\"phoneNumber\\\"\\r\\n                        [readOnlyToggle]=\\\"!(isNew$ | async)\\\"\\r\\n                    >\\r\\n                        <input id=\\\"phoneNumber\\\" type=\\\"text\\\" formControlName=\\\"phoneNumber\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'customer.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                        *ngIf=\\\"isNew$ | async\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Customer\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customer.customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n        </form>\\r\\n        <vdr-custom-detail-component-host\\r\\n            locationId=\\\"customer-detail\\\"\\r\\n            [entity$]=\\\"entity$\\\"\\r\\n            [detailForm]=\\\"detailForm\\\"\\r\\n        ></vdr-custom-detail-component-host>\\r\\n        <ng-container *ngIf=\\\"!(isNew$ | async)\\\">\\r\\n            <vdr-card [title]=\\\"'customer.addresses' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-address-card\\r\\n                        *ngFor=\\\"let addressForm of getAddressFormControls()\\\"\\r\\n                        [class.to-delete]=\\\"addressesToDeleteIds.has(addressForm.value.id)\\\"\\r\\n                        [availableCountries]=\\\"availableCountries$ | async\\\"\\r\\n                        [isDefaultBilling]=\\\"defaultBillingAddressId === addressForm.value.id\\\"\\r\\n                        [isDefaultShipping]=\\\"defaultShippingAddressId === addressForm.value.id\\\"\\r\\n                        [addressForm]=\\\"addressForm\\\"\\r\\n                        [customFields]=\\\"addressCustomFields\\\"\\r\\n                        [editable]=\\\"\\r\\n                            (['UpdateCustomer'] | hasPermission) &&\\r\\n                            !addressesToDeleteIds.has(addressForm.value.id)\\r\\n                        \\\"\\r\\n                        (setAsDefaultBilling)=\\\"setDefaultBillingAddressId($event)\\\"\\r\\n                        (setAsDefaultShipping)=\\\"setDefaultShippingAddressId($event)\\\"\\r\\n                        (deleteAddress)=\\\"toggleDeleteAddress($event)\\\"\\r\\n                    ></vdr-address-card>\\r\\n                </div>\\r\\n                <button\\r\\n                    class=\\\"btn btn-secondary mt-2\\\"\\r\\n                    (click)=\\\"addAddress()\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateCustomer'\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                    {{ 'customer.create-new-address' | translate }}\\r\\n                </button>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'customer.orders' | translate\\\" [paddingX]=\\\"false\\\">\\r\\n                <vdr-data-table-2\\r\\n                    id=\\\"customer-order-list\\\"\\r\\n                    [items]=\\\"orders$ | async\\\"\\r\\n                    [itemsPerPage]=\\\"ordersPerPage\\\"\\r\\n                    [totalItems]=\\\"ordersCount$ | async\\\"\\r\\n                    [currentPage]=\\\"currentOrdersPage\\\"\\r\\n                    [emptyStateLabel]=\\\"'customer.no-orders-placed' | translate\\\"\\r\\n                    (itemsPerPageChange)=\\\"setOrderItemsPerPage($event)\\\"\\r\\n                    (pageChange)=\\\"setOrderCurrentPage($event)\\\"\\r\\n                >\\r\\n                    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            {{ order.id }}\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-column\\r\\n                        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n                        id=\\\"created-at\\\"\\r\\n                        [hiddenByDefault]=\\\"true\\\"\\r\\n                    >\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            {{ order.createdAt | localeDate : 'short' }}\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [optional]=\\\"false\\\">\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/orders', order.id]\\\"\\r\\n                                ><span>{{ order.code }}</span>\\r\\n                                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                            </a>\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-column\\r\\n                        [heading]=\\\"'order.order-type' | translate\\\"\\r\\n                        id=\\\"order-type\\\"\\r\\n                        [hiddenByDefault]=\\\"true\\\"\\r\\n                    >\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            <vdr-chip>{{ order.type }}</vdr-chip>\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-column [heading]=\\\"'order.state' | translate\\\" id=\\\"state\\\">\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            <vdr-order-state-label [state]=\\\"order.state\\\"></vdr-order-state-label>\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-column [heading]=\\\"'order.total' | translate\\\" id=\\\"total\\\">\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            {{ order.totalWithTax | localeCurrency : order.currencyCode }}\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\">\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            {{ order.updatedAt | timeAgo }}\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-column [heading]=\\\"'order.placed-at' | translate\\\" id=\\\"placed-at\\\">\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            {{ order.orderPlacedAt | localeDate : 'short' }}\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-custom-field-column\\r\\n                        *ngFor=\\\"let customField of customFields\\\"\\r\\n                        [customField]=\\\"customField\\\"\\r\\n                    />\\r\\n                </vdr-data-table-2>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'customer.customer-history' | translate\\\">\\r\\n                <vdr-customer-history\\r\\n                    [customer]=\\\"entity$ | async\\\"\\r\\n                    [history]=\\\"history$ | async\\\"\\r\\n                    (addNote)=\\\"addNoteToCustomer($event)\\\"\\r\\n                    (updateNote)=\\\"updateNote($event)\\\"\\r\\n                    (deleteNote)=\\\"deleteNote($event)\\\"\\r\\n                ></vdr-customer-history>\\r\\n            </vdr-card>\\r\\n        </ng-container>\\r\\n    </vdr-page-block>\\r\\n</vdr-page-detail-layout>\\r\\n\", styles: [\".last-login{margin-inline-start:6px;color:var(--color-grey-500)}.to-delete{opacity:.5}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i1$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i1$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i1$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i1$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i1$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i1$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"directive\", type: i2.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.OrderStateLabelComponent, selector: \"vdr-order-state-label\", inputs: [\"state\"] }, { kind: \"component\", type: i1.LabeledDataComponent, selector: \"vdr-labeled-data\", inputs: [\"label\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: CustomerStatusLabelComponent, selector: \"vdr-customer-status-label\", inputs: [\"customer\"] }, { kind: \"component\", type: AddressCardComponent, selector: \"vdr-address-card\", inputs: [\"addressForm\", \"customFields\", \"availableCountries\", \"isDefaultBilling\", \"isDefaultShipping\", \"editable\"], outputs: [\"setAsDefaultShipping\", \"setAsDefaultBilling\", \"deleteAddress\"] }, { kind: \"component\", type: CustomerHistoryComponent, selector: \"vdr-customer-history\", inputs: [\"customer\", \"history\"], outputs: [\"addNote\", \"updateNote\", \"deleteNote\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.TimeAgoPipe, name: \"timeAgo\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CustomerDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-customer-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"customer-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!(addressDefaultsUpdated || (detailForm.valid && detailForm.dirty))\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"'UpdateCustomer'\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!(addressDefaultsUpdated || (detailForm.valid && detailForm.dirty))\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"customer-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-page-detail-layout>\\r\\n    <vdr-page-detail-sidebar>\\r\\n        <vdr-card *ngIf=\\\"entity$ | async as customer\\\">\\r\\n            <vdr-customer-status-label [customer]=\\\"customer\\\"></vdr-customer-status-label>\\r\\n            <vdr-labeled-data\\r\\n                class=\\\"last-login\\\"\\r\\n                *ngIf=\\\"customer.user?.lastLogin as lastLogin\\\"\\r\\n                [label]=\\\"'customer.last-login' | translate\\\"\\r\\n            >\\r\\n                <time [dateTime]=\\\"lastLogin\\\">{{ lastLogin | timeAgo }}</time>\\r\\n            </vdr-labeled-data>\\r\\n        </vdr-card>\\r\\n        <vdr-card\\r\\n            [title]=\\\"'customer.customer-groups' | translate\\\"\\r\\n            *ngIf=\\\"(entity$ | async)?.groups as groups\\\"\\r\\n        >\\r\\n            <div *ngIf=\\\"groups.length; else noGroups\\\">\\r\\n                <vdr-chip\\r\\n                    *ngFor=\\\"let group of groups\\\"\\r\\n                    [colorFrom]=\\\"group.id\\\"\\r\\n                    icon=\\\"times\\\"\\r\\n                    (iconClick)=\\\"removeFromGroup(group)\\\"\\r\\n                    >{{ group.name }}</vdr-chip\\r\\n                >\\r\\n            </div>\\r\\n            <ng-template #noGroups>\\r\\n                <span class=\\\"color-weight-400\\\">\\r\\n                    {{ 'customer.not-a-member-of-any-groups' | translate }}\\r\\n                </span>\\r\\n            </ng-template>\\r\\n            <div>\\r\\n                <button\\r\\n                    class=\\\"button-small mt-1\\\"\\r\\n                    (click)=\\\"addToGroup()\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateCustomerGroup'\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                    {{ 'customer.add-customer-to-group' | translate }}\\r\\n                </button>\\r\\n            </div>\\r\\n        </vdr-card>\\r\\n        <vdr-card>\\r\\n            <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n        </vdr-card>\\r\\n    </vdr-page-detail-sidebar>\\r\\n    <vdr-page-block>\\r\\n        <form class=\\\"form\\\" [formGroup]=\\\"detailForm.get('customer')\\\">\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'customer.title' | translate\\\"\\r\\n                        for=\\\"title\\\"\\r\\n                        [readOnlyToggle]=\\\"!(isNew$ | async)\\\"\\r\\n                    >\\r\\n                        <input id=\\\"title\\\" type=\\\"text\\\" formControlName=\\\"title\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <div><!-- spacer --></div>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'customer.first-name' | translate\\\"\\r\\n                        for=\\\"firstName\\\"\\r\\n                        [readOnlyToggle]=\\\"!(isNew$ | async)\\\"\\r\\n                    >\\r\\n                        <input id=\\\"firstName\\\" type=\\\"text\\\" formControlName=\\\"firstName\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'customer.last-name' | translate\\\"\\r\\n                        for=\\\"lastName\\\"\\r\\n                        [readOnlyToggle]=\\\"!(isNew$ | async)\\\"\\r\\n                    >\\r\\n                        <input id=\\\"lastName\\\" type=\\\"text\\\" formControlName=\\\"lastName\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'customer.email-address' | translate\\\"\\r\\n                        for=\\\"emailAddress\\\"\\r\\n                        [readOnlyToggle]=\\\"!(isNew$ | async)\\\"\\r\\n                    >\\r\\n                        <input id=\\\"emailAddress\\\" type=\\\"text\\\" formControlName=\\\"emailAddress\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'customer.phone-number' | translate\\\"\\r\\n                        for=\\\"phoneNumber\\\"\\r\\n                        [readOnlyToggle]=\\\"!(isNew$ | async)\\\"\\r\\n                    >\\r\\n                        <input id=\\\"phoneNumber\\\" type=\\\"text\\\" formControlName=\\\"phoneNumber\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'customer.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                        *ngIf=\\\"isNew$ | async\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Customer\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customer.customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n        </form>\\r\\n        <vdr-custom-detail-component-host\\r\\n            locationId=\\\"customer-detail\\\"\\r\\n            [entity$]=\\\"entity$\\\"\\r\\n            [detailForm]=\\\"detailForm\\\"\\r\\n        ></vdr-custom-detail-component-host>\\r\\n        <ng-container *ngIf=\\\"!(isNew$ | async)\\\">\\r\\n            <vdr-card [title]=\\\"'customer.addresses' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-address-card\\r\\n                        *ngFor=\\\"let addressForm of getAddressFormControls()\\\"\\r\\n                        [class.to-delete]=\\\"addressesToDeleteIds.has(addressForm.value.id)\\\"\\r\\n                        [availableCountries]=\\\"availableCountries$ | async\\\"\\r\\n                        [isDefaultBilling]=\\\"defaultBillingAddressId === addressForm.value.id\\\"\\r\\n                        [isDefaultShipping]=\\\"defaultShippingAddressId === addressForm.value.id\\\"\\r\\n                        [addressForm]=\\\"addressForm\\\"\\r\\n                        [customFields]=\\\"addressCustomFields\\\"\\r\\n                        [editable]=\\\"\\r\\n                            (['UpdateCustomer'] | hasPermission) &&\\r\\n                            !addressesToDeleteIds.has(addressForm.value.id)\\r\\n                        \\\"\\r\\n                        (setAsDefaultBilling)=\\\"setDefaultBillingAddressId($event)\\\"\\r\\n                        (setAsDefaultShipping)=\\\"setDefaultShippingAddressId($event)\\\"\\r\\n                        (deleteAddress)=\\\"toggleDeleteAddress($event)\\\"\\r\\n                    ></vdr-address-card>\\r\\n                </div>\\r\\n                <button\\r\\n                    class=\\\"btn btn-secondary mt-2\\\"\\r\\n                    (click)=\\\"addAddress()\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateCustomer'\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                    {{ 'customer.create-new-address' | translate }}\\r\\n                </button>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'customer.orders' | translate\\\" [paddingX]=\\\"false\\\">\\r\\n                <vdr-data-table-2\\r\\n                    id=\\\"customer-order-list\\\"\\r\\n                    [items]=\\\"orders$ | async\\\"\\r\\n                    [itemsPerPage]=\\\"ordersPerPage\\\"\\r\\n                    [totalItems]=\\\"ordersCount$ | async\\\"\\r\\n                    [currentPage]=\\\"currentOrdersPage\\\"\\r\\n                    [emptyStateLabel]=\\\"'customer.no-orders-placed' | translate\\\"\\r\\n                    (itemsPerPageChange)=\\\"setOrderItemsPerPage($event)\\\"\\r\\n                    (pageChange)=\\\"setOrderCurrentPage($event)\\\"\\r\\n                >\\r\\n                    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            {{ order.id }}\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-column\\r\\n                        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n                        id=\\\"created-at\\\"\\r\\n                        [hiddenByDefault]=\\\"true\\\"\\r\\n                    >\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            {{ order.createdAt | localeDate : 'short' }}\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [optional]=\\\"false\\\">\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/orders', order.id]\\\"\\r\\n                                ><span>{{ order.code }}</span>\\r\\n                                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                            </a>\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-column\\r\\n                        [heading]=\\\"'order.order-type' | translate\\\"\\r\\n                        id=\\\"order-type\\\"\\r\\n                        [hiddenByDefault]=\\\"true\\\"\\r\\n                    >\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            <vdr-chip>{{ order.type }}</vdr-chip>\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-column [heading]=\\\"'order.state' | translate\\\" id=\\\"state\\\">\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            <vdr-order-state-label [state]=\\\"order.state\\\"></vdr-order-state-label>\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-column [heading]=\\\"'order.total' | translate\\\" id=\\\"total\\\">\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            {{ order.totalWithTax | localeCurrency : order.currencyCode }}\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\">\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            {{ order.updatedAt | timeAgo }}\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-column [heading]=\\\"'order.placed-at' | translate\\\" id=\\\"placed-at\\\">\\r\\n                        <ng-template let-order=\\\"item\\\">\\r\\n                            {{ order.orderPlacedAt | localeDate : 'short' }}\\r\\n                        </ng-template>\\r\\n                    </vdr-dt2-column>\\r\\n                    <vdr-dt2-custom-field-column\\r\\n                        *ngFor=\\\"let customField of customFields\\\"\\r\\n                        [customField]=\\\"customField\\\"\\r\\n                    />\\r\\n                </vdr-data-table-2>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'customer.customer-history' | translate\\\">\\r\\n                <vdr-customer-history\\r\\n                    [customer]=\\\"entity$ | async\\\"\\r\\n                    [history]=\\\"history$ | async\\\"\\r\\n                    (addNote)=\\\"addNoteToCustomer($event)\\\"\\r\\n                    (updateNote)=\\\"updateNote($event)\\\"\\r\\n                    (deleteNote)=\\\"deleteNote($event)\\\"\\r\\n                ></vdr-customer-history>\\r\\n            </vdr-card>\\r\\n        </ng-container>\\r\\n    </vdr-page-block>\\r\\n</vdr-page-detail-layout>\\r\\n\", styles: [\".last-login{margin-inline-start:6px;color:var(--color-grey-500)}.to-delete{opacity:.5}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1$1.FormBuilder }, { type: i1.DataService }, { type: i1.ModalService }, { type: i1.NotificationService }] });\n\nconst CUSTOMER_GROUP_DETAIL_QUERY = gql `\r\n    query GetCustomerGroupDetail($id: ID!) {\r\n        customerGroup(id: $id) {\r\n            ...CustomerGroupDetail\r\n        }\r\n    }\r\n    fragment CustomerGroupDetail on CustomerGroup {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n    }\r\n`;\nclass CustomerGroupDetailComponent extends TypedBaseDetailComponent {\n    constructor(formBuilder, dataService, modalService, notificationService) {\n        super();\n        this.formBuilder = formBuilder;\n        this.dataService = dataService;\n        this.modalService = modalService;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('CustomerGroup');\n        this.detailForm = this.formBuilder.group({\n            name: '',\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n    }\n    ngOnInit() {\n        super.init();\n    }\n    create() {\n        const formvalue = this.detailForm.value;\n        if (formvalue.name) {\n            this.dataService.customer\n                .createCustomerGroup({\n                name: formvalue.name,\n                customFields: formvalue.customFields,\n                customerIds: [],\n            })\n                .subscribe(({ createCustomerGroup }) => {\n                this.notificationService.success(marker('common.notify-create-success'), {\n                    entity: 'CustomerGroup',\n                });\n                this.detailForm.markAsPristine();\n                this.router.navigate(['../', createCustomerGroup.id], { relativeTo: this.route });\n            }, err => {\n                this.notificationService.error(marker('common.notify-create-error'), {\n                    entity: 'CustomerGroup',\n                });\n            });\n        }\n    }\n    save() {\n        const formValue = this.detailForm.value;\n        this.dataService.customer.updateCustomerGroup({ id: this.id, ...formValue }).subscribe(() => {\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'CustomerGroup',\n            });\n            this.detailForm.markAsPristine();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'CustomerGroup',\n            });\n        });\n    }\n    setFormValues(entity) {\n        this.detailForm.patchValue({\n            name: entity.name,\n        });\n        if (this.customFields.length) {\n            const customFieldsGroup = this.detailForm.get(['customFields']);\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CustomerGroupDetailComponent, deps: [{ token: i1$1.FormBuilder }, { token: i1.DataService }, { token: i1.ModalService }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: CustomerGroupDetailComponent, selector: \"vdr-customer-group-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"customer-group-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!(detailForm.valid && detailForm.dirty)\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"'UpdateCustomer'\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!(detailForm.valid && detailForm.dirty)\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"customer-group-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"CustomerGroup\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"customer-group-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i1$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i1$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i1$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i1$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i1$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i1$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CustomerGroupDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-customer-group-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"customer-group-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!(detailForm.valid && detailForm.dirty)\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"'UpdateCustomer'\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!(detailForm.valid && detailForm.dirty)\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"customer-group-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"CustomerGroup\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"customer-group-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i1$1.FormBuilder }, { type: i1.DataService }, { type: i1.ModalService }, { type: i1.NotificationService }] });\n\nclass CustomerGroupDetailDialogComponent {\n    constructor(serverConfigService, formBuilder) {\n        this.serverConfigService = serverConfigService;\n        this.formBuilder = formBuilder;\n        this.customFields = this.serverConfigService.getCustomFieldsFor('CustomerGroup');\n    }\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            name: [this.group.name, Validators.required],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        if (this.customFields.length) {\n            const customFieldsGroup = this.form.get('customFields');\n            for (const fieldDef of this.customFields) {\n                const key = fieldDef.name;\n                const value = this.group.customFields?.[key];\n                const control = customFieldsGroup.get(key);\n                if (control) {\n                    control.patchValue(value);\n                }\n            }\n        }\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    save() {\n        this.resolveWith(this.form.value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CustomerGroupDetailDialogComponent, deps: [{ token: i1.ServerConfigService }, { token: i1$1.UntypedFormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: CustomerGroupDetailDialogComponent, selector: \"vdr-customer-group-detail-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    <span *ngIf=\\\"group.id\\\">{{ 'customer.update-customer-group' | translate }}</span>\\r\\n    <span *ngIf=\\\"!group.id\\\">{{ 'customer.create-customer-group' | translate }}</span>\\r\\n</ng-template>\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n        <input\\r\\n            id=\\\"name\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"name\\\"\\r\\n            [readonly]=\\\"!(['CreateCustomerGroup', 'UpdateCustomerGroup'] | hasPermission)\\\"\\r\\n        />\\r\\n    </vdr-form-field>\\r\\n    <section formGroupName=\\\"customFields\\\" *ngIf=\\\"customFields.length\\\">\\r\\n        <label>{{ 'common.custom-fields' | translate }}</label>\\r\\n        <vdr-tabbed-custom-fields\\r\\n            entityName=\\\"CustomerGroup\\\"\\r\\n            [customFields]=\\\"customFields\\\"\\r\\n            [customFieldsFormGroup]=\\\"form.get('customFields')\\\"\\r\\n        ></vdr-tabbed-custom-fields>\\r\\n    </section>\\r\\n</form>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"save()\\\" [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-primary\\\">\\r\\n        <span *ngIf=\\\"group.id\\\">{{ 'customer.update-customer-group' | translate }}</span>\\r\\n        <span *ngIf=\\\"!group.id\\\">{{ 'customer.create-customer-group' | translate }}</span>\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i1$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i1$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i1$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i1$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i1$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i1$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CustomerGroupDetailDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-customer-group-detail-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    <span *ngIf=\\\"group.id\\\">{{ 'customer.update-customer-group' | translate }}</span>\\r\\n    <span *ngIf=\\\"!group.id\\\">{{ 'customer.create-customer-group' | translate }}</span>\\r\\n</ng-template>\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n        <input\\r\\n            id=\\\"name\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"name\\\"\\r\\n            [readonly]=\\\"!(['CreateCustomerGroup', 'UpdateCustomerGroup'] | hasPermission)\\\"\\r\\n        />\\r\\n    </vdr-form-field>\\r\\n    <section formGroupName=\\\"customFields\\\" *ngIf=\\\"customFields.length\\\">\\r\\n        <label>{{ 'common.custom-fields' | translate }}</label>\\r\\n        <vdr-tabbed-custom-fields\\r\\n            entityName=\\\"CustomerGroup\\\"\\r\\n            [customFields]=\\\"customFields\\\"\\r\\n            [customFieldsFormGroup]=\\\"form.get('customFields')\\\"\\r\\n        ></vdr-tabbed-custom-fields>\\r\\n    </section>\\r\\n</form>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"save()\\\" [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-primary\\\">\\r\\n        <span *ngIf=\\\"group.id\\\">{{ 'customer.update-customer-group' | translate }}</span>\\r\\n        <span *ngIf=\\\"!group.id\\\">{{ 'customer.create-customer-group' | translate }}</span>\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i1.ServerConfigService }, { type: i1$1.UntypedFormBuilder }] });\n\nconst deleteCustomerGroupsBulkAction = createBulkDeleteAction({\n    location: 'customer-group-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteCustomerGroup),\n    getItemName: item => item.name,\n    bulkDelete: (dataService, ids) => dataService.customer.deleteCustomerGroups(ids).pipe(map(res => res.deleteCustomerGroups)),\n});\n\nconst GET_CUSTOMER_GROUP_LIST = gql `\r\n    query GetCustomerGroupList($options: CustomerGroupListOptions) {\r\n        customerGroups(options: $options) {\r\n            items {\r\n                ...CustomerGroup\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${CUSTOMER_GROUP_FRAGMENT}\r\n`;\nclass CustomerGroupListComponent extends TypedBaseListComponent {\n    constructor(dataService, notificationService, modalService, route, router) {\n        super();\n        this.dataService = dataService;\n        this.notificationService = notificationService;\n        this.modalService = modalService;\n        this.route = route;\n        this.router = router;\n        this.dataTableListId = 'customer-group-list';\n        this.customFields = this.getCustomFieldConfig('CustomerGroup');\n        this.fetchGroupMembers$ = new BehaviorSubject({\n            skip: 0,\n            take: 0,\n            filterTerm: '',\n        });\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'name',\n            type: { kind: 'text' },\n            label: marker('common.name'),\n            filterField: 'name',\n        })\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'name' })\n            .connectToRoute(this.route);\n        this.refreshActiveGroupMembers$ = new BehaviorSubject(undefined);\n        super.configure({\n            document: GetCustomerGroupListDocument,\n            getItems: data => data.customerGroups,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: { contains: this.searchTermControl.value },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        const activeGroupId$ = this.route.paramMap.pipe(map(pm => pm.get('contents')), distinctUntilChanged());\n        this.listIsEmpty$ = this.items$.pipe(map(groups => groups.length === 0));\n        this.activeGroup$ = combineLatest(this.items$, activeGroupId$).pipe(map(([groups, activeGroupId]) => {\n            if (activeGroupId) {\n                return groups.find(g => g.id === activeGroupId);\n            }\n        }));\n        this.activeIndex$ = combineLatest(this.items$, activeGroupId$).pipe(map(([groups, activeGroupId]) => {\n            if (activeGroupId) {\n                return groups.findIndex(g => g.id === activeGroupId);\n            }\n            else {\n                return -1;\n            }\n        }));\n        const membersResult$ = combineLatest(this.activeGroup$, this.fetchGroupMembers$, this.refreshActiveGroupMembers$).pipe(switchMap(([activeGroup, { skip, take, filterTerm }]) => {\n            if (activeGroup) {\n                return this.dataService.customer\n                    .getCustomerGroupWithCustomers(activeGroup.id, {\n                    skip,\n                    take,\n                    filter: {\n                        emailAddress: {\n                            contains: filterTerm,\n                        },\n                    },\n                })\n                    .mapStream(res => res.customerGroup?.customers);\n            }\n            else {\n                return of(undefined);\n            }\n        }));\n        this.members$ = membersResult$.pipe(map(res => res?.items ?? []));\n        this.membersTotal$ = membersResult$.pipe(map(res => res?.totalItems ?? 0));\n    }\n    closeMembers() {\n        const params = { ...this.route.snapshot.params };\n        delete params.contents;\n        this.router.navigate(['./', params], { relativeTo: this.route, queryParamsHandling: 'preserve' });\n    }\n    addToGroup(group) {\n        this.modalService\n            .fromComponent(AddCustomerToGroupDialogComponent, {\n            locals: {\n                group,\n                route: this.route,\n            },\n            size: 'md',\n            verticalAlign: 'top',\n        })\n            .pipe(switchMap(customerIds => customerIds\n            ? this.dataService.customer\n                .addCustomersToGroup(group.id, customerIds)\n                .pipe(mapTo(customerIds))\n            : EMPTY))\n            .subscribe({\n            next: result => {\n                this.notificationService.success(marker(`customer.add-customers-to-group-success`), {\n                    customerCount: result.length,\n                    groupName: group.name,\n                });\n                this.refreshActiveGroupMembers$.next();\n            },\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CustomerGroupListComponent, deps: [{ token: i1.DataService }, { token: i1.NotificationService }, { token: i1.ModalService }, { token: i2.ActivatedRoute }, { token: i2.Router }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: CustomerGroupListComponent, selector: \"vdr-customer-group-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"customer-group-list\\\"></vdr-action-bar-items>\\r\\n            <a class=\\\"btn btn-primary\\\" *vdrIfPermissions=\\\"'CreateCustomerGroup'\\\" [routerLink]=\\\"['./', 'create']\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'customer.create-new-customer-group' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"customer-group-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-split-view [rightPanelOpen]=\\\"activeGroup$ | async\\\" (closeClicked)=\\\"closeMembers()\\\">\\r\\n    <ng-template vdrSplitViewLeft>\\r\\n        <vdr-data-table-2\\r\\n            class=\\\"mt-2\\\"\\r\\n            [id]=\\\"dataTableListId\\\"\\r\\n            [items]=\\\"items$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [filters]=\\\"filters\\\"\\r\\n            [activeIndex]=\\\"activeIndex$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n            (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n        >\\r\\n            <vdr-bulk-action-menu\\r\\n                locationId=\\\"customer-group-list\\\"\\r\\n                [hostComponent]=\\\"this\\\"\\r\\n                [selectionManager]=\\\"selectionManager\\\"\\r\\n            ></vdr-bulk-action-menu>\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n            ></vdr-dt2-search>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\"\\r\\n                [optional]=\\\"false\\\"\\r\\n                [sort]=\\\"sorts.get('name')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', customerGroup.id]\\\"\\r\\n                        ><span>{{ customerGroup.name }}</span>\\r\\n                        <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-custom-field-column *ngFor=\\\"let field of customFields\\\" [customField]=\\\"field\\\" [sorts]=\\\"sorts\\\" />\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.view-contents' | translate\\\" id=\\\"view-contents\\\"\\r\\n                [optional]=\\\"false\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    <a\\r\\n                        class=\\\"button-small bg-weight-150\\\"\\r\\n                        [routerLink]=\\\"['./', { contents: customerGroup.id }]\\\"\\r\\n                        queryParamsHandling=\\\"preserve\\\"\\r\\n                    >\\r\\n                        <span>{{ 'customer.view-group-members' | translate }}</span>\\r\\n                        <clr-icon shape=\\\"file-group\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n        </vdr-data-table-2>\\r\\n    </ng-template>\\r\\n    <ng-template vdrSplitViewRight [splitViewTitle]=\\\"(activeGroup$ | async)?.name\\\">\\r\\n        <ng-container *ngIf=\\\"activeGroup$ | async as activeGroup\\\">\\r\\n            <button class=\\\"button-ghost ml-4\\\" (click)=\\\"addToGroup(activeGroup)\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                <span>{{\\r\\n                    'customer.add-customers-to-group' | translate : { groupName: activeGroup.name }\\r\\n                }}</span>\\r\\n            </button>\\r\\n            <vdr-customer-group-member-list\\r\\n                locationId=\\\"customer-group-members-list\\\"\\r\\n                [members]=\\\"members$ | async\\\"\\r\\n                [route]=\\\"route\\\"\\r\\n                [totalItems]=\\\"membersTotal$ | async\\\"\\r\\n                [activeGroup]=\\\"activeGroup$ | async\\\"\\r\\n                (fetchParamsChange)=\\\"fetchGroupMembers$.next($event)\\\"\\r\\n            />\\r\\n        </ng-container>\\r\\n    </ng-template>\\r\\n</vdr-split-view>\\r\\n\", styles: [\"vdr-empty-placeholder{flex:1}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.SplitViewComponent, selector: \"vdr-split-view\", inputs: [\"rightPanelOpen\"], outputs: [\"closeClicked\"] }, { kind: \"directive\", type: i1.SplitViewLeftDirective, selector: \"[vdrSplitViewLeft]\" }, { kind: \"directive\", type: i1.SplitViewRightDirective, selector: \"[vdrSplitViewRight]\", inputs: [\"splitViewTitle\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: CustomerGroupMemberListComponent, selector: \"vdr-customer-group-member-list\", inputs: [\"locationId\", \"members\", \"totalItems\", \"route\", \"selectedMemberIds\", \"activeGroup\"], outputs: [\"selectionChange\", \"fetchParamsChange\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CustomerGroupListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-customer-group-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"customer-group-list\\\"></vdr-action-bar-items>\\r\\n            <a class=\\\"btn btn-primary\\\" *vdrIfPermissions=\\\"'CreateCustomerGroup'\\\" [routerLink]=\\\"['./', 'create']\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'customer.create-new-customer-group' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"customer-group-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-split-view [rightPanelOpen]=\\\"activeGroup$ | async\\\" (closeClicked)=\\\"closeMembers()\\\">\\r\\n    <ng-template vdrSplitViewLeft>\\r\\n        <vdr-data-table-2\\r\\n            class=\\\"mt-2\\\"\\r\\n            [id]=\\\"dataTableListId\\\"\\r\\n            [items]=\\\"items$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [filters]=\\\"filters\\\"\\r\\n            [activeIndex]=\\\"activeIndex$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n            (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n        >\\r\\n            <vdr-bulk-action-menu\\r\\n                locationId=\\\"customer-group-list\\\"\\r\\n                [hostComponent]=\\\"this\\\"\\r\\n                [selectionManager]=\\\"selectionManager\\\"\\r\\n            ></vdr-bulk-action-menu>\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n            ></vdr-dt2-search>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\"\\r\\n                [optional]=\\\"false\\\"\\r\\n                [sort]=\\\"sorts.get('name')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', customerGroup.id]\\\"\\r\\n                        ><span>{{ customerGroup.name }}</span>\\r\\n                        <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-custom-field-column *ngFor=\\\"let field of customFields\\\" [customField]=\\\"field\\\" [sorts]=\\\"sorts\\\" />\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.view-contents' | translate\\\" id=\\\"view-contents\\\"\\r\\n                [optional]=\\\"false\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    <a\\r\\n                        class=\\\"button-small bg-weight-150\\\"\\r\\n                        [routerLink]=\\\"['./', { contents: customerGroup.id }]\\\"\\r\\n                        queryParamsHandling=\\\"preserve\\\"\\r\\n                    >\\r\\n                        <span>{{ 'customer.view-group-members' | translate }}</span>\\r\\n                        <clr-icon shape=\\\"file-group\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n        </vdr-data-table-2>\\r\\n    </ng-template>\\r\\n    <ng-template vdrSplitViewRight [splitViewTitle]=\\\"(activeGroup$ | async)?.name\\\">\\r\\n        <ng-container *ngIf=\\\"activeGroup$ | async as activeGroup\\\">\\r\\n            <button class=\\\"button-ghost ml-4\\\" (click)=\\\"addToGroup(activeGroup)\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                <span>{{\\r\\n                    'customer.add-customers-to-group' | translate : { groupName: activeGroup.name }\\r\\n                }}</span>\\r\\n            </button>\\r\\n            <vdr-customer-group-member-list\\r\\n                locationId=\\\"customer-group-members-list\\\"\\r\\n                [members]=\\\"members$ | async\\\"\\r\\n                [route]=\\\"route\\\"\\r\\n                [totalItems]=\\\"membersTotal$ | async\\\"\\r\\n                [activeGroup]=\\\"activeGroup$ | async\\\"\\r\\n                (fetchParamsChange)=\\\"fetchGroupMembers$.next($event)\\\"\\r\\n            />\\r\\n        </ng-container>\\r\\n    </ng-template>\\r\\n</vdr-split-view>\\r\\n\", styles: [\"vdr-empty-placeholder{flex:1}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i1.NotificationService }, { type: i1.ModalService }, { type: i2.ActivatedRoute }, { type: i2.Router }] });\n\nconst removeCustomerGroupMembersBulkAction = {\n    location: 'customer-group-members-list',\n    label: marker('customer.remove-from-group'),\n    icon: 'trash',\n    iconClass: 'is-danger',\n    requiresPermission: Permission.UpdateCustomerGroup,\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        const dataService = injector.get(DataService);\n        const notificationService = injector.get(NotificationService);\n        const group = hostComponent.activeGroup;\n        const customerIds = selection.map(s => s.id);\n        dataService.customer.removeCustomersFromGroup(group.id, customerIds).subscribe({\n            complete: () => {\n                notificationService.success(marker(`customer.remove-customers-from-group-success`), {\n                    customerCount: customerIds.length,\n                    groupName: group.name,\n                });\n                clearSelection();\n                hostComponent.refresh();\n            },\n        });\n    },\n};\n\nconst deleteCustomersBulkAction = createBulkDeleteAction({\n    location: 'customer-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteCustomer),\n    getItemName: item => item.firstName + ' ' + item.lastName,\n    bulkDelete: (dataService, ids) => dataService.customer.deleteCustomers(ids).pipe(map(res => res.deleteCustomers)),\n});\n\nconst CUSTOMER_LIST_QUERY = gql `\r\n    query CustomerListQuery($options: CustomerListOptions) {\r\n        customers(options: $options) {\r\n            items {\r\n                ...CustomerListItem\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n\r\n    fragment CustomerListItem on Customer {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        title\r\n        firstName\r\n        lastName\r\n        emailAddress\r\n        user {\r\n            id\r\n            verified\r\n        }\r\n    }\r\n`;\nclass CustomerListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.dataTableListId = 'customer-list';\n        this.customFields = this.getCustomFieldConfig('Customer');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'firstName',\n            type: { kind: 'text' },\n            label: marker('customer.first-name'),\n            filterField: 'firstName',\n        })\n            .addFilter({\n            name: 'lastName',\n            type: { kind: 'text' },\n            label: marker('customer.last-name'),\n            filterField: 'lastName',\n        })\n            .addFilter({\n            name: 'emailAddress',\n            type: { kind: 'text' },\n            label: marker('customer.email-address'),\n            filterField: 'emailAddress',\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'lastName' })\n            .addSort({ name: 'emailAddress' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        this.configure({\n            document: CustomerListQueryDocument,\n            getItems: data => data.customers,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        ...(this.searchTermControl.value\n                            ? {\n                                emailAddress: {\n                                    contains: this.searchTermControl.value,\n                                },\n                                lastName: {\n                                    contains: this.searchTermControl.value,\n                                },\n                                postalCode: {\n                                    contains: this.searchTermControl.value,\n                                },\n                            }\n                            : {}),\n                        ...this.filters.createFilterInput(),\n                    },\n                    filterOperator: this.searchTermControl.value ? LogicalOperator.OR : LogicalOperator.AND,\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.sorts.valueChanges, this.filters.valueChanges],\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CustomerListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: CustomerListComponent, selector: \"vdr-customer-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"customer-list\\\"></vdr-action-bar-items>\\r\\n            <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['./create']\\\" *vdrIfPermissions=\\\"'CreateCustomer'\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'customer.create-new-customer' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"customer-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"customer-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'customer.search-customers-by-email-last-name-postal-code' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            {{ customer.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            {{ customer.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            {{ customer.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'customer.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('lastName')\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', customer.id]\\\"\\r\\n                ><span> {{ customer.title }} {{ customer.firstName }} {{ customer.lastName }} </span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.status' | translate\\\" id=\\\"status\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            <vdr-customer-status-label [customer]=\\\"customer\\\" />\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'customer.email-address' | translate\\\" id=\\\"email-address\\\" [sort]=\\\"sorts.get('emailAddress')\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            {{ customer.emailAddress }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let field of customFields\\\" [customField]=\\\"field\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".search-input{margin-top:6px;min-width:300px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: CustomerStatusLabelComponent, selector: \"vdr-customer-status-label\", inputs: [\"customer\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CustomerListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-customer-list', template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"customer-list\\\"></vdr-action-bar-items>\\r\\n            <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['./create']\\\" *vdrIfPermissions=\\\"'CreateCustomer'\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'customer.create-new-customer' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"customer-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"customer-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'customer.search-customers-by-email-last-name-postal-code' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            {{ customer.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            {{ customer.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            {{ customer.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'customer.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('lastName')\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', customer.id]\\\"\\r\\n                ><span> {{ customer.title }} {{ customer.firstName }} {{ customer.lastName }} </span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.status' | translate\\\" id=\\\"status\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            <vdr-customer-status-label [customer]=\\\"customer\\\" />\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'customer.email-address' | translate\\\" id=\\\"email-address\\\" [sort]=\\\"sorts.get('emailAddress')\\\">\\r\\n        <ng-template let-customer=\\\"item\\\">\\r\\n            {{ customer.emailAddress }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let field of customFields\\\" [customField]=\\\"field\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".search-input{margin-top:6px;min-width:300px}\\n\"] }]\n        }], ctorParameters: () => [] });\n\nconst createRoutes = (pageService) => [\n    {\n        path: 'customers',\n        component: PageComponent,\n        data: {\n            locationId: 'customer-list',\n            breadcrumb: marker('breadcrumb.customers'),\n        },\n        children: pageService.getPageTabRoutes('customer-list'),\n    },\n    {\n        path: 'customers/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'customer-detail',\n            breadcrumb: { label: marker('breadcrumb.customers'), link: ['../', 'customers'] },\n        },\n        children: pageService.getPageTabRoutes('customer-detail'),\n    },\n    {\n        path: 'groups',\n        component: PageComponent,\n        data: {\n            locationId: 'customer-group-list',\n            breadcrumb: marker('breadcrumb.customer-groups'),\n        },\n        children: pageService.getPageTabRoutes('customer-group-list'),\n    },\n    {\n        path: 'groups/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'customer-group-detail',\n            breadcrumb: { label: marker('breadcrumb.customer-groups'), link: ['../', 'groups'] },\n        },\n        children: pageService.getPageTabRoutes('customer-group-detail'),\n    },\n];\nfunction customerBreadcrumb(data, params) {\n    return detailBreadcrumb({\n        entity: data.entity,\n        id: params.id,\n        breadcrumbKey: 'breadcrumb.customers',\n        getName: customer => `${customer.firstName} ${customer.lastName}`,\n        route: 'customers',\n    });\n}\n\nclass CustomerModule {\n    static { this.hasRegisteredTabsAndBulkActions = false; }\n    constructor(bulkActionRegistryService, pageService) {\n        if (CustomerModule.hasRegisteredTabsAndBulkActions) {\n            return;\n        }\n        bulkActionRegistryService.registerBulkAction(deleteCustomersBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteCustomerGroupsBulkAction);\n        bulkActionRegistryService.registerBulkAction(removeCustomerGroupMembersBulkAction);\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'customer-list',\n            tab: marker('customer.customers'),\n            route: '',\n            component: CustomerListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'customer-detail',\n            tab: marker('customer.customer'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: CustomerDetailComponent,\n                query: CustomerDetailQueryDocument,\n                entityKey: 'customer',\n                variables: {\n                    orderListOptions: {\n                        sort: {\n                            orderPlacedAt: SortOrder.DESC,\n                        },\n                    },\n                },\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity\n                            ? `${entity?.firstName} ${entity?.lastName}`\n                            : marker('customer.create-new-customer'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'customer-group-list',\n            tab: marker('customer.customer-groups'),\n            route: '',\n            component: CustomerGroupListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'customer-group-detail',\n            tab: marker('customer.customer-group'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: CustomerGroupDetailComponent,\n                query: GetCustomerGroupDetailDocument,\n                entityKey: 'customerGroup',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('customer.create-new-customer-group'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        CustomerModule.hasRegisteredTabsAndBulkActions = true;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CustomerModule, deps: [{ token: i1.BulkActionRegistryService }, { token: i1.PageService }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.4\", ngImport: i0, type: CustomerModule, declarations: [CustomerListComponent,\n            CustomerDetailComponent,\n            CustomerStatusLabelComponent,\n            AddressCardComponent,\n            CustomerGroupListComponent,\n            CustomerGroupDetailDialogComponent,\n            AddCustomerToGroupDialogComponent,\n            CustomerGroupMemberListComponent,\n            SelectCustomerGroupDialogComponent,\n            CustomerHistoryComponent,\n            AddressDetailDialogComponent,\n            CustomerHistoryEntryHostComponent,\n            CustomerGroupDetailComponent], imports: [SharedModule, i2.RouterModule], exports: [AddressCardComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CustomerModule, providers: [\n            {\n                provide: ROUTES,\n                useFactory: (pageService) => createRoutes(pageService),\n                multi: true,\n                deps: [PageService],\n            },\n        ], imports: [SharedModule, RouterModule.forChild([])] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CustomerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [SharedModule, RouterModule.forChild([])],\n                    providers: [\n                        {\n                            provide: ROUTES,\n                            useFactory: (pageService) => createRoutes(pageService),\n                            multi: true,\n                            deps: [PageService],\n                        },\n                    ],\n                    declarations: [\n                        CustomerListComponent,\n                        CustomerDetailComponent,\n                        CustomerStatusLabelComponent,\n                        AddressCardComponent,\n                        CustomerGroupListComponent,\n                        CustomerGroupDetailDialogComponent,\n                        AddCustomerToGroupDialogComponent,\n                        CustomerGroupMemberListComponent,\n                        SelectCustomerGroupDialogComponent,\n                        CustomerHistoryComponent,\n                        AddressDetailDialogComponent,\n                        CustomerHistoryEntryHostComponent,\n                        CustomerGroupDetailComponent,\n                    ],\n                    exports: [AddressCardComponent],\n                }]\n        }], ctorParameters: () => [{ type: i1.BulkActionRegistryService }, { type: i1.PageService }] });\n\n// This file was generated by the build-public-api.ts script\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AddCustomerToGroupDialogComponent, AddressCardComponent, AddressDetailDialogComponent, CUSTOMER_DETAIL_QUERY, CUSTOMER_GROUP_DETAIL_QUERY, CUSTOMER_LIST_QUERY, CustomerDetailComponent, CustomerGroupDetailComponent, CustomerGroupDetailDialogComponent, CustomerGroupListComponent, CustomerGroupMemberListComponent, CustomerHistoryComponent, CustomerHistoryEntryHostComponent, CustomerListComponent, CustomerModule, CustomerStatusLabelComponent, GET_CUSTOMER_GROUP_LIST, SelectCustomerGroupDialogComponent, createRoutes, customerBreadcrumb, deleteCustomerGroupsBulkAction, deleteCustomersBulkAction, removeCustomerGroupMembersBulkAction };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}