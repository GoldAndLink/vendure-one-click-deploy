{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalizeString = void 0;\n/**\n * Normalizes a string to replace non-alphanumeric and diacritical marks with\n * plain equivalents.\n * Based on https://stackoverflow.com/a/37511463/772859\n */\nfunction normalizeString(input, spaceReplacer = ' ') {\n  const multipleSequentialReplacerRegex = new RegExp(`([${spaceReplacer}]){2,}`, 'g');\n  return (input || '').normalize('NFD').replace(/[\\u00df]/g, 'ss').replace(/[\\u1e9e]/g, 'SS').replace(/[\\u0308]/g, 'e').replace(/[\\u0300-\\u036f]/g, '').toLowerCase().replace(/[!\"£$%^&*()+[\\]{};:@#~?\\\\/,|><`¬'=‘’©®™]/g, '').replace(/\\s+/g, spaceReplacer).replace(multipleSequentialReplacerRegex, spaceReplacer);\n}\nexports.normalizeString = normalizeString;","map":{"version":3,"names":["Object","defineProperty","exports","value","normalizeString","input","spaceReplacer","multipleSequentialReplacerRegex","RegExp","normalize","replace","toLowerCase"],"sources":["/Users/peluche/Documents/NoursStuffs/CerisePeyi/dev/2k24/last/vendure-one-click-deploy/node_modules/@vendure/common/lib/normalize-string.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeString = void 0;\n/**\n * Normalizes a string to replace non-alphanumeric and diacritical marks with\n * plain equivalents.\n * Based on https://stackoverflow.com/a/37511463/772859\n */\nfunction normalizeString(input, spaceReplacer = ' ') {\n    const multipleSequentialReplacerRegex = new RegExp(`([${spaceReplacer}]){2,}`, 'g');\n    return (input || '')\n        .normalize('NFD')\n        .replace(/[\\u00df]/g, 'ss')\n        .replace(/[\\u1e9e]/g, 'SS')\n        .replace(/[\\u0308]/g, 'e')\n        .replace(/[\\u0300-\\u036f]/g, '')\n        .toLowerCase()\n        .replace(/[!\"£$%^&*()+[\\]{};:@#~?\\\\/,|><`¬'=‘’©®™]/g, '')\n        .replace(/\\s+/g, spaceReplacer)\n        .replace(multipleSequentialReplacerRegex, spaceReplacer);\n}\nexports.normalizeString = normalizeString;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,eAAe,GAAG,KAAK,CAAC;AAChC;AACA;AACA;AACA;AACA;AACA,SAASA,eAAeA,CAACC,KAAK,EAAEC,aAAa,GAAG,GAAG,EAAE;EACjD,MAAMC,+BAA+B,GAAG,IAAIC,MAAM,CAAC,KAAKF,aAAa,QAAQ,EAAE,GAAG,CAAC;EACnF,OAAO,CAACD,KAAK,IAAI,EAAE,EACdI,SAAS,CAAC,KAAK,CAAC,CAChBC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAC1BA,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAC1BA,OAAO,CAAC,WAAW,EAAE,GAAG,CAAC,CACzBA,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAC/BC,WAAW,CAAC,CAAC,CACbD,OAAO,CAAC,2CAA2C,EAAE,EAAE,CAAC,CACxDA,OAAO,CAAC,MAAM,EAAEJ,aAAa,CAAC,CAC9BI,OAAO,CAACH,+BAA+B,EAAED,aAAa,CAAC;AAChE;AACAJ,OAAO,CAACE,eAAe,GAAGA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}